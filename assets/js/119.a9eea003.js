(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{604:function(t,s,a){"use strict";a.r(s);var n=a(19),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_3-2-k-近邻算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-k-近邻算法"}},[t._v("#")]),t._v(" 3.2 K-近邻算法")]),t._v(" "),a("h2",{attrs:{id:"学习目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#学习目标"}},[t._v("#")]),t._v(" 学习目标")]),t._v(" "),a("ul",[a("li",[t._v("目标\n"),a("ul",[a("li",[t._v("说明K-近邻算法的距离公式")]),t._v(" "),a("li",[t._v("说明K-近邻算法的超参数K值以及取值问题")]),t._v(" "),a("li",[t._v("说明K-近邻算法的优缺点")]),t._v(" "),a("li",[t._v("应用KNeighborsClassifier实现分类")]),t._v(" "),a("li",[t._v("了解分类算法的评估标准准确率")])])]),t._v(" "),a("li",[t._v("应用\n"),a("ul",[a("li",[t._v("鸢尾花数据集预测")]),t._v(" "),a("li",[t._v("Facebook签到位置预测")])])])]),t._v(" "),a("ul",[a("li",[t._v("内容预览\n"),a("ul",[a("li",[t._v("3.2.1 什么是K-近邻算法")]),t._v(" "),a("li",[t._v("3.2.2 K-近邻算法API")]),t._v(" "),a("li",[t._v("3.2.3 案例：鸢尾花种类预测")]),t._v(" "),a("li",[t._v("3.2.4 K-近邻总结")])])])]),t._v(" "),a("h2",{attrs:{id:"_3-2-1-什么是k-近邻算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-什么是k-近邻算法"}},[t._v("#")]),t._v(" 3.2.1 什么是K-近邻算法")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://kflys.gitee.io/upic/2020/03/22/uPic/mlib/images/%E5%9C%B0%E5%9B%BEK%E7%B4%A7%E9%82%BB%E7%AE%97%E6%B3%95.png",alt:"地图K紧邻算法"}})]),t._v(" "),a("ul",[a("li",[t._v("你的“邻居”来推断出你的类别")])]),t._v(" "),a("h3",{attrs:{id:"_1-k-近邻算法-knn-原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-k-近邻算法-knn-原理"}},[t._v("#")]),t._v(" 1 K-近邻算法(KNN)原理")]),t._v(" "),a("p",[t._v("K Nearest Neighbor算法又叫KNN算法，这个算法是机器学习里面一个比较经典的算法， 总体来说KNN算法是相对比较容易理解的算法")]),t._v(" "),a("ul",[a("li",[t._v("定义")])]),t._v(" "),a("p",[t._v("如果一个样本在特征空间中的"),a("strong",[t._v("k个最相似(即特征空间中最邻近)的样本中的大多数属于某一个类别")]),t._v("，则该样本也属于这个类别。")]),t._v(" "),a("blockquote",[a("p",[t._v("来源：KNN算法最早是由Cover和Hart提出的一种分类算法")])]),t._v(" "),a("ul",[a("li",[t._v("距离公式")])]),t._v(" "),a("p",[t._v("两个样本的距离可以通过如下公式计算，又叫欧式距离")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://kflys.gitee.io/upic/2020/03/22/uPic/mlib/images/%E8%B7%9D%E7%A6%BB%E5%85%AC%E5%BC%8F.png",alt:"距离公式"}})]),t._v(" "),a("h3",{attrs:{id:"_2-电影类型分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-电影类型分析"}},[t._v("#")]),t._v(" 2 电影类型分析")]),t._v(" "),a("p",[t._v("假设我们有现在几部电影")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://kflys.gitee.io/upic/2020/03/22/uPic/mlib/images/%E7%94%B5%E5%BD%B1%E7%B1%BB%E5%9E%8B%E5%88%86%E6%9E%90.png",alt:"电影类型分析"}})]),t._v(" "),a("p",[t._v("其中？ 号电影不知道类别，如何去预测？我们可以利用K近邻算法的思想")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://kflys.gitee.io/upic/2020/03/22/uPic/mlib/images/%E7%94%B5%E5%BD%B1%E8%B7%9D%E7%A6%BB%E8%AE%A1%E7%AE%97.png",alt:"电影距离计算"}})]),t._v(" "),a("h3",{attrs:{id:"_3-问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-问题"}},[t._v("#")]),t._v(" 3 问题")]),t._v(" "),a("ul",[a("li",[t._v("如果取的最近的电影数量不一样？会是什么结果？")]),t._v(" "),a("li",[t._v("结合前面的约会对象数据，分析K-近邻算法需要做什么样的处理")])]),t._v(" "),a("h2",{attrs:{id:"_3-2-2-k-近邻算法api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-k-近邻算法api"}},[t._v("#")]),t._v(" 3.2.2 K-近邻算法API")]),t._v(" "),a("ul",[a("li",[t._v("sklearn.neighbors.KNeighborsClassifier(n_neighbors=5,algorithm='auto')\n"),a("ul",[a("li",[t._v("n_neighbors：int,可选（默认= 5），k_neighbors查询默认使用的邻居数")]),t._v(" "),a("li",[t._v("algorithm：{‘auto’，‘ball_tree’，‘kd_tree’，‘brute’}，可选用于计算最近邻居的算法：‘ball_tree’将会使用 BallTree，‘kd_tree’将使用 KDTree。‘auto’将尝试根据传递给fit方法的值来决定最合适的算法。 (不同实现方式影响效率)")])])])]),t._v(" "),a("h2",{attrs:{id:"_3-2-3-案例1-鸢尾花种类预测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-案例1-鸢尾花种类预测"}},[t._v("#")]),t._v(" 3.2.3 案例1：鸢尾花种类预测")]),t._v(" "),a("h3",{attrs:{id:"_1-数据集介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据集介绍"}},[t._v("#")]),t._v(" 1 数据集介绍")]),t._v(" "),a("p",[t._v("Iris数据集是常用的分类实验数据集，由Fisher, 1936收集整理。Iris也称鸢尾花卉数据集，是一类多重变量分析的数据集。关于数据集的具体介绍：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://kflys.gitee.io/upic/2020/03/22/uPic/mlib/images/iris%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D.png",alt:"img"}})]),t._v(" "),a("h3",{attrs:{id:"_2-步骤分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-步骤分析"}},[t._v("#")]),t._v(" 2 步骤分析")]),t._v(" "),a("ul",[a("li",[t._v("获取数据集与分割数据集")]),t._v(" "),a("li",[t._v("特征工程：标准化")]),t._v(" "),a("li",[t._v("模型训练评估")])]),t._v(" "),a("h3",{attrs:{id:"_3-代码过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-代码过程"}},[t._v("#")]),t._v(" 3 代码过程")]),t._v(" "),a("ul",[a("li",[t._v("导入模块")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sklearn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("datasets "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" load_iris\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sklearn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("model_selection "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" train_test_split\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sklearn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("preprocessing "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" StandardScaler\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sklearn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("neighbors "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" KNeighborsClassifier\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[t._v("先从sklearn当中获取数据集，然后进行数据集的分割")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 加载模块")]),t._v("\niris "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" load_iris"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# x_train,x_test,y_train,y_test为训练集特征值、测试集特征值、训练集目标值、测试集目标值")]),t._v("\nx_train"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x_test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_train"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" train_test_split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iris"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" iris"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" test_size"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" random_state"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("ul",[a("li",[t._v("进行数据标准化\n"),a("ul",[a("li",[t._v("特征值的标准化")])])])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3、特征工程：标准化")]),t._v("\ntransfer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" StandardScaler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx_train "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" transfer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fit_transform"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x_train"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx_test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" transfer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x_test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[t._v("模型进行训练预测")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 实例化API")]),t._v("\nestimator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" KNeighborsClassifier"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n_neighbors"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nestimator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x_train"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_train"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5、模型评估")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 方法1：比对真实值和预测值")]),t._v("\ny_predict "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" estimator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("predict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x_test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"预测结果为:\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_predict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"比对真实值和预测值：\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_predict "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" y_test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 方法2：直接计算准确率")]),t._v("\nscore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" estimator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x_test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"准确率为：\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h3",{attrs:{id:"_4-结果分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-结果分析"}},[t._v("#")]),t._v(" 4 结果分析")]),t._v(" "),a("ul",[a("li",[t._v("1 k值取多大？有什么影响？")])]),t._v(" "),a("p",[t._v("k值取很小：容易受到异常点的影响")]),t._v(" "),a("p",[t._v("k值取很大：受到样本均衡的问题")]),t._v(" "),a("ul",[a("li",[t._v("2 性能问题？")])]),t._v(" "),a("p",[t._v("距离计算上面，时间复杂度高")]),t._v(" "),a("h2",{attrs:{id:"_3-2-4-k-近邻总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-k-近邻总结"}},[t._v("#")]),t._v(" 3.2.4 K-近邻总结")]),t._v(" "),a("ul",[a("li",[t._v("优点：\n"),a("ul",[a("li",[t._v("简单，易于理解，易于实现，无需训练")])])]),t._v(" "),a("li",[t._v("缺点：\n"),a("ul",[a("li",[t._v("懒惰算法，对测试样本分类时的计算量大，内存开销大")]),t._v(" "),a("li",[t._v("必须指定K值，K值选择不当则分类精度不能保证")])])]),t._v(" "),a("li",[t._v("使用场景：小数据场景，几千～几万样本，具体场景具体业务去测试")])])])}),[],!1,null,null,null);s.default=r.exports}}]);