(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{566:function(s,a,t){"use strict";t.r(a);var e=t(19),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"数据仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据仓库"}},[s._v("#")]),s._v(" 数据仓库")]),s._v(" "),t("p",[s._v("英文名称为Data Warehouse，可简写为DW或DWH。数据仓库的目的是构建面向分析的集成化数据环境，为企业提供决策支持（Decision Support）。它出于分析性报告和决策支持目的而创建。")]),s._v(" "),t("p",[s._v("数据仓库本身并不“生产”任何数据，同时自身也不需要“消费”任何的数据，数据来源于外部，并且开放给外部应用，这也是为什么叫“仓库”，而不叫“工厂”的原因。")]),s._v(" "),t("h3",{attrs:{id:"定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[s._v("#")]),s._v(" 定义")]),s._v(" "),t("p",[s._v("数据仓库是面向主题的（Subject-Oriented ）、集成的（Integrated）、稳定性的（Non-Volatile）和时变的（Time-Variant ）数据集合，用以支持管理决策。")]),s._v(" "),t("h4",{attrs:{id:"面向主题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向主题"}},[s._v("#")]),s._v(" 面向主题")]),s._v(" "),t("p",[s._v("数据仓库中的数据是按照一定的主题域进行组织。")]),s._v(" "),t("p",[s._v("主题是一个抽象的概念，是指用户使用数据仓库进行决策时所关心的重点方面，一个主题通常与多个操作型信息系统相关。")]),s._v(" "),t("blockquote",[t("p",[s._v("以电商为例：\n用户主题：主要是用于分析用户的行为\n商品主题：针对商品进行分析    指标：昨日新增商品，昨日下架商品 最近七天流量最高的哪些商品\n财务主题：财务分析\n订单主题：订单分析\n货运主题：针对快递分析")])]),s._v(" "),t("h4",{attrs:{id:"集成性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集成性"}},[s._v("#")]),s._v(" 集成性")]),s._v(" "),t("p",[s._v("根据决策分析的要求，将分散于各处的源数据进行抽取、筛选、清理、综合等工作，最终集成到数据仓库中。")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://kflys.gitee.io/upic/2020/03/31/uPic/hive/2019-08-17_17-04-09.png#height=584&id=qC7EL&originHeight=584&originWidth=1135&originalType=binary&ratio=1&status=done&style=none&width=1135",alt:""}})]),s._v(" "),t("h4",{attrs:{id:"稳定性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#稳定性"}},[s._v("#")]),s._v(" 稳定性")]),s._v(" "),t("p",[s._v("数据的相对稳定性，数据仓库中的数据只进行新增，没有更新操作、删除操作处理。")]),s._v(" "),t("p",[s._v("反映历史变化，以查询分析为主。")]),s._v(" "),t("h4",{attrs:{id:"时变性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#时变性"}},[s._v("#")]),s._v(" 时变性")]),s._v(" "),t("p",[s._v("数据仓库的数据一般都带有时间属性，随着时间的推移而发生变化，不断地生成主题的新快照")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://kflys.gitee.io/upic/2020/03/31/uPic/hive/2019-08-17_17-09-51.png#height=593&id=q86jm&originHeight=593&originWidth=1667&originalType=binary&ratio=1&status=done&style=none&width=1667",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"数据仓库与数据库的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据仓库与数据库的区别"}},[s._v("#")]),s._v(" 数据仓库与数据库的区别")]),s._v(" "),t("p",[s._v("数据库与数据仓库的区别实际讲的是 OLTP 与 OLAP 的区别。")]),s._v(" "),t("p",[t("strong",[s._v("OLTP")]),s._v("： On-Line Transaction Processing  叫联机事务处理， 也可以称面向交易的处理系统，它是针对具体业务在数据库联机的日常操作，通常对少数记录进行查询、修改。用户较为关心操作的响应时间、数据的安全性、完整性和并发支持的用户数等问题。传统的数据库系统作为数据管理的主要手段，主要用于操作型处理 .")]),s._v(" "),t("p",[t("strong",[s._v("OLAP")]),s._v("：On-Line Analytical Processing  叫联机分析处理，一般针对某些主题的历史数据进行分析，支持管理决策。")]),s._v(" "),t("p",[s._v("简而言之，数据库是面向事务的设计，数据仓库是面向主题设计的。")]),s._v(" "),t("p",[s._v("数据库一般存储在线交易数据，有很高的事务要求；数据仓库存储的一般是历史数据。")]),s._v(" "),t("p",[s._v("数据库设计是尽量避免冗余，一般采用符合范式的规则来设计，数据仓库在设计是有意引入冗余，采用反范式的方式来设计。")]),s._v(" "),t("p",[s._v("数据库是为捕获数据而设计，数据仓库是为分析数据而设计，它的两个基本的元素是维表和事实表。维是看问题的角度，比如时间，部门，维表放的就是这些东西的定义，事实表里放着要查询的数据，同时有维的ID。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[s._v("功能")])]),s._v(" "),t("th",[t("strong",[s._v("数据仓库")])]),s._v(" "),t("th",[t("strong",[s._v("数据库")])])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("数据范围")]),s._v(" "),t("td",[s._v("存储历史的、完整的、反应历史变化的")]),s._v(" "),t("td",[s._v("当前状态数据")])]),s._v(" "),t("tr",[t("td",[s._v("数据变化")]),s._v(" "),t("td",[s._v("可添加、无删除、无变更的、反应历史变化")]),s._v(" "),t("td",[s._v("支持频繁的增、删、改、查操作")])]),s._v(" "),t("tr",[t("td",[s._v("应用场景")]),s._v(" "),t("td",[s._v("面向分析、支持战略决策")]),s._v(" "),t("td",[s._v("面向业务交易流程")])]),s._v(" "),t("tr",[t("td",[s._v("设计理论")]),s._v(" "),t("td",[s._v("违范式、适当冗余")]),s._v(" "),t("td",[s._v("遵照范式(第一、二、三等范式)、避免冗余")])]),s._v(" "),t("tr",[t("td",[s._v("处理量")]),s._v(" "),t("td",[s._v("非频繁、大批量、高吞吐、有延迟")]),s._v(" "),t("td",[s._v("频繁、小批次、高并发、低延迟")])])])]),s._v(" "),t("h3",{attrs:{id:"构建数据仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建数据仓库"}},[s._v("#")]),s._v(" 构建数据仓库")]),s._v(" "),t("p",[s._v("• 传统数仓建设更多的基于成熟的商业数据集成平台，比如Teradata、Oracle、Informatica等，技术体系比较成熟完善，但相对比较封闭，对实施者技术面要求也相对专业且单一，一般更多应用于银行、保险、电信等“有钱”行业.")]),s._v(" "),t("p",[s._v("• 基于大数据的数仓建设一般是基于非商业、开源的技术，常见的是基于hadoop生态构建，涉及技术较广泛、复杂，同时相对于商业产品，稳定性、服务支撑较弱，需要自己维护更多的技术框架。在大数据领域，常用的数据仓库构建手段很多基于hive，sparkSQL，impala等各种技术框架.")]),s._v(" "),t("h3",{attrs:{id:"仓库分层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#仓库分层"}},[s._v("#")]),s._v(" 仓库分层")]),s._v(" "),t("h4",{attrs:{id:"数据仓库分层描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据仓库分层描述"}},[s._v("#")]),s._v(" 数据仓库分层描述")]),s._v(" "),t("ul",[t("li",[s._v("数据仓库更多代表的是一种对数据的管理和使用的方式，它是一整套包括了etl、调度、建模在内的完整的理论体系。现在所谓的大数据更多的是一种数据量级的增大和工具的上的更新。 两者并无冲突，相反，而是一种更好的结合。数据仓库在构建过程中通常都需要进行分层处理。业务不同，分层的技术处理手段也不同。")]),s._v(" "),t("li",[s._v("分层是数据仓库解决方案中，数据架构设计的一种数据逻辑结构 ，通过分层理念建立的数据仓库，它的可扩展性非常好，这样设计出来的模型架构，可以任意地增减、替换数据仓库中的各个组成部分。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"http://kflys.gitee.io/upic/2020/03/31/uPic/hive/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E5%B1%82.png#height=454&id=pO4GC&originHeight=454&originWidth=564&originalType=binary&ratio=1&status=done&style=none&width=564",alt:""}})]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("从整体的逻辑划分来讲，数据仓库模型实际上就是这三层架构。\n\n接入层：底层的数据源或者是操作数据层，一般在公司的话，统一都是称为ODS层\n\n中间层：是做数据仓库同学需要花费更多精力的一层，这一层包括的内容是最多的、最复杂的。\n\n应用层：对不同的应用提供对应的数据。该层主要是提供数据产品和数据分析使用的数据，\n\t   比如我们经常说的报表数据\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("ul",[t("li",[s._v("针对于这三层架构，这里给出比较典型的一个做数据仓库在实施的时候，具体的层次划分。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"http://kflys.gitee.io/upic/2020/03/31/uPic/hive/dw.png#height=520&id=KryH7&originHeight=520&originWidth=1287&originalType=binary&ratio=1&status=done&style=none&width=1287",alt:""}})]),s._v(" "),t("ul",[t("li",[s._v("ODS：\n"),t("ul",[t("li",[s._v("Operation Data Store 原始数据层")])])]),s._v(" "),t("li",[s._v("DWD")]),s._v(" "),t("li",[s._v("data warehouse detail 数据明细层")]),s._v(" "),t("li",[s._v("它主要是针对于接入层的数据进行数据的清洗和转换。还有就是一些维度的补充。")]),s._v(" "),t("li",[s._v("DWS\n"),t("ul",[t("li",[s._v("data warehouse summary 数据汇总层")]),s._v(" "),t("li",[s._v("它是在DWD明细层之上，也有公司叫DW层")]),s._v(" "),t("li",[s._v("它是按照一定的粒度进行了汇总聚合操作。它是单业务场景。")])])]),s._v(" "),t("li",[s._v("DWM")]),s._v(" "),t("li",[s._v("data warehouse market 数据集市层\n"),t("ul",[t("li",[s._v("它是在DWS数据汇总层之上，集市层它是多业务场景的。")])])]),s._v(" "),t("li",[s._v("APP\n"),t("ul",[t("li",[s._v("Application 应用层")]),s._v(" "),t("li",[s._v("这个是数据仓库的最后一层数据，为应用层数据，直接可以给业务人员使用")])])])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("TMP临时表：在做一些中间层表计算的时候，大量使用tmp临时表。\nDIM维度层：基于ODS层和DWD层抽象出一些公共的维度，\n\t\t  典型的公共维度主要包括城市信息、渠道信息、个人基础属性信息。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"为什么要进行数据仓库分层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么要进行数据仓库分层"}},[s._v("#")]),s._v(" 为什么要进行数据仓库分层")]),s._v(" "),t("ul",[t("li",[s._v("分层的主要原因是在管理数据的时候，能对数据有一个更加清晰的掌控，主要有下面几个原因：\n"),t("ul",[t("li",[t("strong",[s._v("空间换时间")]),s._v(" "),t("ul",[t("li",[s._v("通过建设多层次的数据模型供用户使用，避免用户直接使用底层操作型数据，可以更高效的访问数据。")])])]),s._v(" "),t("li",[t("strong",[s._v("把复杂问题简单化")]),s._v(" "),t("ul",[t("li",[s._v("讲一个复杂的任务分解成多个步骤来完成，每一层只处理单一的步骤，比较简单和容易理解。而且便于维护数据的准确性，当数据出现问题之后，可以不用修复所有的数据，只需要从有问题的步骤开始修复。")])])]),s._v(" "),t("li",[t("strong",[s._v("便于处理业务的变化")]),s._v(" "),t("ul",[t("li",[s._v("随着业务的变化，只需要调整底层的数据，对应用层对业务的调整零感知。")])])])])])]),s._v(" "),t("h3",{attrs:{id:"数据仓库建模"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据仓库建模"}},[s._v("#")]),s._v(" 数据仓库建模")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("目前业界较为流行的数据仓库的建模方法非常多，这里主要介绍范式建模法，维度建模法，实体建模法等几种方法，每种方法其实从本质上讲就是从不同的角度看我们业务中的问题，不管从技术层面还是业务层面，其实代表的是哲学上的一种世界观。\n")])])]),t("h4",{attrs:{id:"范式建模法-third-normal-form-3nf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#范式建模法-third-normal-form-3nf"}},[s._v("#")]),s._v(" 范式建模法（Third Normal Form 3NF）")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("范式建模法是基于整个关系型数据库的理论基础之上发展而来的，其实是我们在构建数据模型常用的一个方法，主要解决关系型数据库得数据存储，利用的一种技术层面上的方法。目前，我们在关系型数据库中的建模方法，大部分采用的是三范式建模法。\n\n从其表达的含义来看，一个符合第三范式的关系必须具有以下三个条件 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v("\n\n（1）每个属性值唯一，不具有多义性 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n（2）每个非主属性必须完全依赖于整个主键，而非主键的一部分 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n（3）每个非主属性不能依赖于其他关系中的属性，因为这样的话，这种属性应该归到其他关系中去。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h4",{attrs:{id:"维度建模法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#维度建模法"}},[s._v("#")]),s._v(" 维度建模法")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("维度建模"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dimensional modeling"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("是专门用于分析型数据库、数据仓库、数据集市建模的方法。维度建模法简单描述就是按照事实表、维度表来构建数仓、集市。\n维度建模从分析决策的需求出发构建模型，为分析需求服务，因此它重点关注用户如何更快速地完成需求分析，同时具有较好的大规模复杂查询的相应性能。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("维度表")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("维度表示你要对数据进行分析时所用的一个量,比如你要分析产品销售情况, \n你可以选择按类别来进行分析,或按区域来分析。\n\n通常来说维度表信息比较固定，且数据量小\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[s._v("事实表")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("表示对分析主题的度量。\n事实表包含了与各维度表相关联的外键，并通过join方式与维度表关联。事实表的度量通常是数值类型，且记录数会不断增加，表规模迅速增长。\n\n消费事实表：Prod_id(引用商品维度表), TimeKey(引用时间维度表), Place_id(引用地点维度表), Unit(销售量)。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("总的说来，在数据仓库中不需要严格遵守规范化设计原则。因为数据仓库的主导功能就是面向分析，以查询为主，不涉及数据更新操作。事实表的设计是以能够正确记录历史信息为准则，维度表的设计是以能够以合适的角度来聚合主题内容为准则\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h5",{attrs:{id:"维度建模三种模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#维度建模三种模式"}},[s._v("#")]),s._v(" 维度建模三种模式")]),s._v(" "),t("p",[s._v("基于事实表和维表就可以构建出多种多维模型，包括星形模型、雪花模型和星座模型。")]),s._v(" "),t("p",[s._v("维度建模法最被人广泛知晓的名字就是星型模式。")]),s._v(" "),t("ul",[t("li",[s._v("星型模式\n"),t("img",{attrs:{src:"http://kflys.gitee.io/upic/2020/03/31/uPic/hive/%E6%98%9F%E5%9E%8B%E6%A8%A1%E5%9E%8B.png#height=677&id=C88PW&originHeight=677&originWidth=1040&originalType=binary&ratio=1&status=done&style=none&width=1040",alt:""}})])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("星形模式"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Star Schema"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("是最常用的维度建模方式。星型模式是以事实表为\n中心，所有的维度表直接连接在事实表上，像星星一样。\n星形模式的维度建模由一个事实表和一组维表成，且具有以下特点：\na. 维表只和事实表关联，维表之间没有关联；\nb. 每个维表主键为单列，且该主键放置在事实表中，作为两边连接的外键；\nc. 以事实表为核心，维表围绕核心呈星形分布；\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ul",[t("li",[s._v("雪花模式")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("雪花模式是对星形模式的扩展。雪花模式的维度表可以拥有其他维度表的，虽然这种模型相比星型更规范一些，但是由于这种模型不太容易理解，维护成本比较高，而且性能方面需要关联多层维表，性能也比星型模型要低。所以一般不是很常用。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"http://kflys.gitee.io/upic/2020/03/31/uPic/hive/%E9%9B%AA%E8%8A%B1%E6%A8%A1%E5%9E%8B.png#height=759&id=F5pCa&originHeight=759&originWidth=1237&originalType=binary&ratio=1&status=done&style=none&width=1237",alt:""}})]),s._v(" "),t("ul",[t("li",[s._v("星座模式")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("星座模式是星型模式延伸而来，星型模式是基于一张事实表的，而星座模式是基于多张事实表的，而且共享维度信息。\n\n前面介绍的两种维度建模方法都是多维表对应单事实表，但在很多时候维度空间内的事实表不止一个，而一个维表也可能被多个事实表用到。在业务发展后期，绝大部分维度建模都采用的是星座模式。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("img",{attrs:{src:"http://kflys.gitee.io/upic/2020/03/31/uPic/hive/%E6%98%9F%E5%BA%A7%E6%A8%A1%E5%9E%8B.png#height=648&id=JT3U7&originHeight=648&originWidth=998&originalType=binary&ratio=1&status=done&style=none&width=998",alt:""}})]),s._v(" "),t("h4",{attrs:{id:"实体建模法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实体建模法"}},[s._v("#")]),s._v(" 实体建模法")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("实体建模法并不是数据仓库建模中常见的一个方法，它来源于哲学的一个流派。\n\n从哲学的意义上说，客观世界应该是可以细分的，客观世界应该可以分成由一个个实体，以及实体与实体之间的关系组成。\n\n那么我们在数据仓库的建模过程中完全可以引入这个抽象的方法，将整个业务也可以划分成一个个的实体，而每个实体之间的关系，以及针对这些关系的说明就是我们数据建模需要做的工作。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("参考文档："),t("a",{attrs:{href:"http://www.uml.org.cn/sjjmck/201810163.asp",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://www.uml.org.cn/sjjmck/201810163.asp"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"数据仓库架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据仓库架构"}},[s._v("#")]),s._v(" 数据仓库架构")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://kflys.gitee.io/upic/2020/03/31/uPic/hive/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E6%9E%B6%E6%9E%84%E5%9B%BE.png#height=749&id=mZMsz&originHeight=749&originWidth=1027&originalType=binary&ratio=1&status=done&style=none&width=1027",alt:""}})]),s._v(" "),t("ul",[t("li",[s._v("数据采集")])])])}),[],!1,null,null,null);a.default=n.exports}}]);