(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{550:function(n,s,a){"use strict";a.r(s);var t=a(19),e=Object(t.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"_1-flink简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-flink简介"}},[n._v("#")]),n._v(" 1 Flink简介")]),n._v(" "),a("blockquote",[a("p",[n._v("Apache Flink® — Stateful Computations over Data Streams")])]),n._v(" "),a("blockquote",[a("p",[n._v("Apache Flink 是一个框架和分布式处理引擎，用于在"),a("em",[n._v("无边界和有边界")]),n._v("数据流上进行有状态的计算。Flink 能在所有常见集群环境中运行，并能以内存速度和任意规模进行计算。")])]),n._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231419115.png",alt:"flink"}})]),n._v(" "),a("h3",{attrs:{id:"_1-1-处理无界和有界数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-处理无界和有界数据"}},[n._v("#")]),n._v(" 1.1 处理无界和有界数据")]),n._v(" "),a("p",[n._v("​\t\t任何类型的数据都可以形成一种事件流。信用卡交易、传感器测量、机器日志、网站或移动应用程序上的用户交互记录，所有这些数据都形成一种流。")]),n._v(" "),a("p",[n._v("数据可以被作为 "),a("em",[n._v("无界")]),n._v(" 或者 "),a("em",[n._v("有界")]),n._v(" 流来处理。")]),n._v(" "),a("ol",[a("li",[a("p",[a("strong",[n._v("无界流")]),n._v("  有定义流的开始，但没有定义流的结束。它们会无休止地产生数据。无界流的数据必须持续处理，即数据被摄取后需要立刻处理。我们不能等到所有数据都到达再处理，因为输入是无限的，在任何时候输入都不会完成。处理无界数据通常要求以特定顺序摄取事件，例如事件发生的顺序，以便能够推断结果的完整性。")])]),n._v(" "),a("li",[a("p",[a("strong",[n._v("有界流")]),n._v(" 有定义流的开始，也有定义流的结束。有界流可以在摄取所有数据后再进行计算。有界流所有数据可以被排序，所以并不需要有序摄取。有界流处理通常被称为批处理")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231419013.png",alt:"bounded-unbounded"}})])])]),n._v(" "),a("p",[a("strong",[n._v("Apache Flink 擅长处理无界和有界数据集")]),n._v(" 精确的时间控制和状态化使得 Flink 的运行时(runtime)能够运行任何处理无界流的应用。有界流则由一些专为固定大小数据集特殊设计的算法和数据结构进行内部处理，产生了出色的性能。")]),n._v(" "),a("h3",{attrs:{id:"_1-2-部署应用到任意地方"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-部署应用到任意地方"}},[n._v("#")]),n._v(" 1.2  部署应用到任意地方")]),n._v(" "),a("p",[n._v("​\t\tApache Flink 是一个分布式系统，它需要计算资源来执行应用程序。Flink 集成了所有常见的集群资源管理器，例如 "),a("a",{attrs:{href:"https://hadoop.apache.org/docs/stable/hadoop-yarn/hadoop-yarn-site/YARN.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Hadoop YARN"),a("OutboundLink")],1),n._v("、 "),a("a",{attrs:{href:"https://mesos.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[n._v("Apache Mesos"),a("OutboundLink")],1),n._v(" 和 "),a("a",{attrs:{href:"https://kubernetes.io/",target:"_blank",rel:"noopener noreferrer"}},[n._v("Kubernetes"),a("OutboundLink")],1),n._v("，但同时也可以作为独立集群运行。\n​\t\tFlink 被设计为能够很好地工作在上述每个资源管理器中，这是通过资源管理器特定(resource-manager-specific)的部署模式实现的。Flink 可以采用与当前资源管理器相适应的方式进行交互。\n​\t\t部署 Flink 应用程序时，Flink 会根据应用程序配置的并行性自动标识所需的资源，并从资源管理器请求这些资源。在发生故障的情况下，Flink 通过请求新资源来替换发生故障的容器。提交或控制应用程序的所有通信都是通过 REST 调用进行的，这可以简化 Flink 与各种环境中的集成")]),n._v(" "),a("h3",{attrs:{id:"_1-3-运行任意规模应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-运行任意规模应用"}},[n._v("#")]),n._v(" 1.3  运行任意规模应用")]),n._v(" "),a("p",[n._v("​\t\tFlink 旨在任意规模上运行有状态流式应用。因此，应用程序被并行化为可能数千个任务，这些任务分布在集群中并发执行。所以应用程序能够充分利用无尽的 CPU、内存、磁盘和网络 IO。而且 Flink 很容易维护非常大的应用程序状态。其异步和增量的检查点算法对处理延迟产生最小的影响，同时保证精确一次状态的一致性。\nFlink 用户报告了其生产环境中一些令人印象深刻的扩展性数字：\n​\t\t每天处理数万亿的事件\n​\t\t可以维护几TB大小的状态\n​\t\t可以部署上千个节点的集群")]),n._v(" "),a("h3",{attrs:{id:"_1-4-利用内存性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-利用内存性能"}},[n._v("#")]),n._v(" 1.4  利用内存性能")]),n._v(" "),a("p",[n._v("​\t\t有状态的 Flink 程序针对本地状态访问进行了优化。任务的状态始终保留在内存中，如果状态大小超过可用内存，则会保存在能高效访问的磁盘数据结构中。任务通过访问本地（通常在内存中）状态来进行所有的计算，从而产生非常低的处理延迟。Flink 通过定期和异步地对本地状态进行持久化存储来保证故障场景下精确一次的状态一致性。")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231420165.png",alt:"local-state"}})]),n._v(" "),a("h2",{attrs:{id:"_2-flink基本架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-flink基本架构"}},[n._v("#")]),n._v(" 2 Flink基本架构")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231419550.png",alt:"1563615522100"}})]),n._v(" "),a("h3",{attrs:{id:"_2-1-主从式的架构图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-主从式的架构图"}},[n._v("#")]),n._v(" 2.1 主从式的架构图")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231428304.png",alt:"flink运行原理"}})]),n._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231428788.png",alt:"FlinkOnYarn"}})]),n._v(" "),a("p",[n._v("​\t\tFlink 整个系统主要由两个组件组成，分别为 JobManager 和 TaskManager，Flink 架构也遵循 Master - Slave 架构设计原则，JobManager 为 Master 节点，TaskManager 为 Worker （Slave）节点。\n所有组件之间的通信都是借助于 Akka Framework，包括任务的状态以及 Checkpoint 触发等信息。")]),n._v(" "),a("h3",{attrs:{id:"_2-2-client-客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-client-客户端"}},[n._v("#")]),n._v(" 2.2   Client 客户端")]),n._v(" "),a("p",[n._v("​\t\t客户端负责将任务提交到集群，与 JobManager 构建 Akka 连接，然后将任务提交到 JobManager，通过和 JobManager 之间进行交互获取任务执行状态。\n客户端提交任务可以采用 CLI 方式或者通过使用 Flink WebUI 提交，也可以在应用程序中指定 JobManager 的 RPC 网络端口构建 ExecutionEnvironment 提交 Flink 应用。")]),n._v(" "),a("h3",{attrs:{id:"_2-3-jobmanager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-jobmanager"}},[n._v("#")]),n._v(" 2.3  JobManager")]),n._v(" "),a("p",[n._v("​\t\tJobManager 负责整个 Flink 集群任务的调度以及资源的管理，从客户端中获取提交的应用，然后根据集群中 TaskManager 上 TaskSlot 的使用情况，为提交的应用分配相应的 TaskSlot 资源并命令 TaskManager 启动从客户端中获取的应用。\nJobManager 相当于整个集群的 Master 节点，且整个集群有且只有一个活跃的 JobManager ，负责整个集群的任务管理和资源管理。\nJobManager 和 TaskManager 之间通过 Actor System 进行通信，获取任务执行的情况并通过 Actor System 将应用的任务执行情况发送给客户端。\n​\t\t同时在任务执行的过程中，Flink JobManager 会触发 Checkpoint 操作，每个 TaskManager 节点 收到 Checkpoint 触发指令后，完成 Checkpoint 操作，所有的 Checkpoint 协调过程都是在 Fink JobManager 中完成。\n当任务完成后，Flink 会将任务执行的信息反馈给客户端，并且释放掉 TaskManager 中的资源以供下一次提交任务使用。")]),n._v(" "),a("h3",{attrs:{id:"_2-4-taskmanager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-taskmanager"}},[n._v("#")]),n._v(" 2.4  TaskManager")]),n._v(" "),a("p",[n._v("TaskManager 相当于整个集群的 Slave 节点，负责具体的任务执行和对应任务在每个节点上的资源申请和管理。\n客户端通过将编写好的 Flink 应用编译打包，提交到 JobManager，然后 JobManager 会根据已注册在 JobManager 中 TaskManager 的资源情况，将任务分配给有资源的 TaskManager节点，然后启动并运行任务。\nTaskManager 从 JobManager 接收需要部署的任务，然后使用 Slot 资源启动 Task，建立数据接入的网络连接，接收数据并开始数据处理。同时 TaskManager 之间的数据交互都是通过数据流的方式进行的。\n可以看出，Flink 的任务运行其实是采用多线程的方式，这和 MapReduce 多 JVM 进行的方式有很大的区别，Flink 能够极大提高 CPU 使用效率，在多个任务和 Task 之间通过 TaskSlot 方式共享系统资源，每个 TaskManager 中通过管理多个 TaskSlot 资源池进行对资源进行有效管理。")]),n._v(" "),a("table",[a("thead",[a("tr",[a("th",[n._v("模式")]),n._v(" "),a("th",[n._v("提交语句")])])]),n._v(" "),a("tbody",[a("tr",[a("td",[n._v("StandAlnoe模式")]),n._v(" "),a("td",[n._v("flink run -c streaming.slot.lesson01.WordCount -p 2 flinklesson-1.0-SNAPSHOT.jar")])]),n._v(" "),a("tr",[a("td",[n._v("Flink on Yarn(1)")]),n._v(" "),a("td",[n._v("flink run -m yarn-cluster -p 2 -yn 2 -yjm 1024 -ytm 1024 -c streaming.slot.lesson01.WordCount flinklesson-1.0-SNAPSHOT.jar 特点： 一个任务一个集群")])]),n._v(" "),a("tr",[a("td",[n._v("Flink on Yarn(2)")]),n._v(" "),a("td",[n._v("yarn-session.sh -n 2 -jm 1024 -tm 1024"),a("br"),n._v("flink run ./examples/batch/WordCount.jar -input hdfs://hadoop100:9000/LICENSE -output hdfs://hadoop100:9000/wordcount-result.txt 特点：先建立一个集群，然后再往集群里面提交任务")])])])]),n._v(" "),a("h2",{attrs:{id:"_3-入门案例演示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-入门案例演示"}},[n._v("#")]),n._v(" 3 入门案例演示")]),n._v(" "),a("h3",{attrs:{id:"_3-1-实时需求分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-实时需求分析"}},[n._v("#")]),n._v(" 3.1 实时需求分析")]),n._v(" "),a("p",[n._v("​\t\t实时统计每隔1秒统计最近2秒单词出现的次数")]),n._v(" "),a("h3",{attrs:{id:"_3-2-开发环境部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-开发环境部署"}},[n._v("#")]),n._v(" 3.2 开发环境部署")]),n._v(" "),a("ol",[a("li",[a("p",[n._v("官网建议使用IDEA，IDEA默认集成了scala和maven，使用起来方便")])]),n._v(" "),a("li",[a("p",[n._v("本次课使用了当前最新的flink版本")]),n._v(" "),a("p",[n._v("pom依赖如下：")])])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("    <properties>\n        <flink.version>1.9.0</flink.version>\n        <scala.version>2.11.8</scala.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n        <groupId>org.apache.flink</groupId>\n        <artifactId>flink-streaming-java_2.11</artifactId>\n        <version>${flink.version}</version>\n        </dependency>\n    </dependencies>\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br")])]),a("h3",{attrs:{id:"_3-3-实时代码开发-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-实时代码开发-java"}},[n._v("#")]),n._v(" 3.3  实时代码开发（java）")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('import org.apache.flink.api.common.functions.FlatMapFunction;\nimport org.apache.flink.api.java.utils.ParameterTool;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.streaming.api.windowing.time.Time;\nimport org.apache.flink.util.Collector;\n\npublic class WindowWordCountJava {\n    public static void main(String[] args) throws Exception {\n        //flink提供的工具类，获取传递的参数\n        ParameterTool parameterTool = ParameterTool.fromArgs(args);\n        String hostname = parameterTool.get("hostname");\n        int port = parameterTool.getInt("port");\n        //步骤一：获取执行环境\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        //步骤二：获取数据源\n        DataStream<String> dataStream = env.socketTextStream(hostname, port);\n        //步骤三：执行逻辑操作\n        DataStream<WordCount> wordAndOneStream = dataStream.flatMap(new FlatMapFunction<String, WordCount>() {\n            public void flatMap(String line, Collector<WordCount> out) {\n                String[] fields = line.split(",");\n                for (String word : fields) {\n                    out.collect(new WordCount(word, 1L));\n                }\n            }\n        });\n\n        DataStream<WordCount> resultStream = wordAndOneStream.keyBy("word")\n                .timeWindow(Time.seconds(2), Time.seconds(1))//每隔1秒计算最近2秒\n                .sum("count");\n        //步骤四：结果打印\n        resultStream.print();\n        //步骤五：任务启动\n        env.execute("WindowWordCountJava");\n    }\n\n    public static class WordCount{\n        public String word;\n        public long count;\n        //记得要有这个空构建\n        public WordCount(){\n\n        }\n        public WordCount(String word,long count){\n            this.word = word;\n            this.count = count;\n        }\n\n        @Override\n        public String toString() {\n            return "WordCount{" +\n                    "word=\'" + word + \'\\\'\' +\n                    ", count=" + count +\n                    \'}\';\n        }\n    }\n}\n\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br")])]),a("h3",{attrs:{id:"_3-4-实时代码开发-scala"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-实时代码开发-scala"}},[n._v("#")]),n._v(" 3.4  实时代码开发（scala）")]),n._v(" "),a("p",[n._v("添加依赖")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("  <dependency>\n            <groupId>org.apache.flink</groupId>\n            <artifactId>flink-streaming-scala_2.11</artifactId>\n            <version>${flink.version}</version>\n  </dependency>\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("p",[n._v("scala开发依赖和编译插件")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<properties>\n        <flink.version>1.9.0</flink.version>\n        <scala.version>2.11.8</scala.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.apache.flink</groupId>\n            <artifactId>flink-streaming-java_2.11</artifactId>\n            <version>${flink.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.flink</groupId>\n            <artifactId>flink-streaming-scala_2.11</artifactId>\n            <version>${flink.version}</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <pluginManagement>\n            <plugins>\n                \x3c!-- scala插件 --\x3e\n                <plugin>\n                    <groupId>net.alchim31.maven</groupId>\n                    <artifactId>scala-maven-plugin</artifactId>\n                    <version>3.2.2</version>\n                </plugin>\n                \x3c!-- maven 插件 --\x3e\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.5.1</version>\n                    <configuration>\n                        <source>1.8</source>\n                        <target>1.8</target>\n                    </configuration>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n        <plugins>\n            <plugin>\n                <groupId>net.alchim31.maven</groupId>\n                <artifactId>scala-maven-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <id>scala-compile-first</id>\n                        <phase>process-resources</phase>\n                        <goals>\n                            <goal>add-source</goal>\n                            <goal>compile</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>scala-test-compile</id>\n                        <phase>process-test-resources</phase>\n                        <goals>\n                            <goal>testCompile</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <phase>compile</phase>\n                        <goals>\n                            <goal>compile</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-shade-plugin</artifactId>\n                <version>2. 3</version>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>shade</goal>\n                        </goals>\n                        <configuration>\n                            <filters>\n                                <filter>\n                                    <artifact>*:*</artifact>\n                                    <excludes>\n                                        <exclude>META-INF/*.SF</exclude>\n                                        <exclude>META-INF/*.DSA</exclude>\n                                        <exclude>META-INF/*.RSA</exclude>\n                                    </excludes>\n                                </filter>\n                            </filters>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br"),a("span",{staticClass:"line-number"},[n._v("87")]),a("br"),a("span",{staticClass:"line-number"},[n._v("88")]),a("br"),a("span",{staticClass:"line-number"},[n._v("89")]),a("br"),a("span",{staticClass:"line-number"},[n._v("90")]),a("br"),a("span",{staticClass:"line-number"},[n._v("91")]),a("br"),a("span",{staticClass:"line-number"},[n._v("92")]),a("br"),a("span",{staticClass:"line-number"},[n._v("93")]),a("br"),a("span",{staticClass:"line-number"},[n._v("94")]),a("br"),a("span",{staticClass:"line-number"},[n._v("95")]),a("br"),a("span",{staticClass:"line-number"},[n._v("96")]),a("br"),a("span",{staticClass:"line-number"},[n._v("97")]),a("br"),a("span",{staticClass:"line-number"},[n._v("98")]),a("br"),a("span",{staticClass:"line-number"},[n._v("99")]),a("br"),a("span",{staticClass:"line-number"},[n._v("100")]),a("br"),a("span",{staticClass:"line-number"},[n._v("101")]),a("br"),a("span",{staticClass:"line-number"},[n._v("102")]),a("br"),a("span",{staticClass:"line-number"},[n._v("103")]),a("br")])]),a("p",[n._v("代码开发")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('import org.apache.flink.api.java.utils.ParameterTool\nimport org.apache.flink.streaming.api.scala.StreamExecutionEnvironment\nimport org.apache.flink.streaming.api.windowing.time.Time\n\n/**\n  * 滑动窗口\n  * 每隔1秒钟统计最近2秒内的数据，打印到控制台。\n  */\nobject WindowWordCountScala {\n  def main(args: Array[String]): Unit = {\n    //获取参数\n    val hostname = ParameterTool.fromArgs(args).get("hostname")\n    val port = ParameterTool.fromArgs(args).getInt("port")\n    //TODO 导入隐式转换\n    import org.apache.flink.api.scala._\n    //步骤一：获取执行环境\n    val env = StreamExecutionEnvironment.getExecutionEnvironment\n    //步骤二：获取数据源\n    val textStream = env.socketTextStream(hostname,port)\n    //步骤三：数据处理\n    val wordCountStream = textStream.flatMap(line => line.split(","))\n      .map((_, 1))\n      .keyBy(0)\n      .timeWindow(Time.seconds(2), Time.seconds(1))\n      .sum(1)\n    //步骤四：数据结果处理\n    wordCountStream.print()\n    //步骤六：启动程序\n    env.execute("WindowWordCountScala")\n  }\n\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br")])]),a("h3",{attrs:{id:"_3-5-需求分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-需求分析"}},[n._v("#")]),n._v(" 3.5 需求分析")]),n._v(" "),a("p",[n._v("​\t对文件进行单词计数")]),n._v(" "),a("h3",{attrs:{id:"_3-6-离线代码开发-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-离线代码开发-java"}},[n._v("#")]),n._v(" 3.6 离线代码开发（java）")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('import org.apache.flink.api.common.functions.FlatMapFunction;\nimport org.apache.flink.api.java.ExecutionEnvironment;\nimport org.apache.flink.api.java.operators.AggregateOperator;\nimport org.apache.flink.api.java.operators.DataSource;\nimport org.apache.flink.api.java.operators.FlatMapOperator;\nimport org.apache.flink.api.java.tuple.Tuple2;\nimport org.apache.flink.util.Collector;\n\npublic class WordCount {\n    public static void main(String[] args)throws  Exception {\n        //步骤一：获取离线的程序入口\n        ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n        String inputPath="D:\\\\kfly\\\\flinklesson\\\\src\\\\main\\\\input\\\\hello.txt";\n        //步骤二：获取数据源\n        DataSource<String> dataSet = env.readTextFile(inputPath);\n        //步骤三：数据处理\n        FlatMapOperator<String, Tuple2<String, Integer>> wordAndOneDataSet = dataSet.flatMap(new FlatMapFunction<String, Tuple2<String, Integer>>() {\n            @Override\n            public void flatMap(String line, Collector<Tuple2<String, Integer>> collector) throws Exception {\n                String[] fileds = line.split(",");\n                for (String word : fileds) {\n                    collector.collect(new Tuple2<String, Integer>(word, 1));\n                }\n            }\n        });\n\n        AggregateOperator<Tuple2<String, Integer>> result = wordAndOneDataSet.groupBy(0)\n                .sum(1);\n        //步骤四：数据结果处理\n        result.writeAsText("D:\\\\kfly\\\\flinklesson\\\\src\\\\output\\\\result").setParallelism(1);\n        //步骤五：启动程序\n        env.execute("word count");\n    }\n}\n\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br")])]),a("p",[n._v("换一种写法")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('public class WordCount {\n    public static void main(String[] args)throws  Exception {\n        //步骤一：获取离线的程序入口\n        ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n        String inputPath="D:\\\\kfly\\\\flinklesson\\\\src\\\\main\\\\input\\\\hello.txt";\n        //步骤二：获取数据源\n        DataSource<String> dataSet = env.readTextFile(inputPath);\n        //步骤三：数据处理\n        FlatMapOperator<String, Tuple2<String, Integer>> wordAndOneDataSet = dataSet.flatMap(new MySplitWordsTask());\n\n        AggregateOperator<Tuple2<String, Integer>> result = wordAndOneDataSet.groupBy(0)\n                .sum(1);\n        //步骤四：数据结果处理\n        result.writeAsText("D:\\\\kfly\\\\flinklesson\\\\src\\\\output\\\\result1").setParallelism(1);\n        //步骤五：启动程序\n        env.execute("word count");\n    }\n\n\n    public static class MySplitWordsTask implements   FlatMapFunction<String,Tuple2<String,Integer>>{\n        @Override\n        public void flatMap(String line, Collector<Tuple2<String, Integer>> collector) throws Exception {\n            String[] fileds = line.split(",");\n            for (String word : fileds) {\n                collector.collect(new Tuple2<String, Integer>(word, 1));\n            }\n        }\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br")])]),a("p",[n._v("总结：上面这种写法，我们把flink的算子抽离出来，代码看起来会更清晰。")]),n._v(" "),a("h2",{attrs:{id:"_4-local模式安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-local模式安装"}},[n._v("#")]),n._v(" 4  local模式安装")]),n._v(" "),a("h3",{attrs:{id:"_4-1-local模式安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-local模式安装"}},[n._v("#")]),n._v(" 4.1  Local模式安装")]),n._v(" "),a("p",[n._v("（1）安装jdk，配置JAVA_HOME，建议使用jdk1.8以上")]),n._v(" "),a("p",[n._v("（2）安装包下载地址：http://mirrors.tuna.tsinghua.edu.cn/apache/flink/flink-1.9.1/flink-1.9.1-bin-scala_2.11.tgz")]),n._v(" "),a("p",[n._v("（3）直接上传安装包到服务器")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("    ```\n    // 解压安装包：\n    tar -zxvf  flink-1.9.1-bin-scala_2.11.tgz\n    \n    // 创建快捷方式： \n    ln -s flink-1.9.1-bin-scala_2.11.tgz flink\n    \n    // 配置FLINK_HOEM环境变量\n    ```\n")])])]),a("p",[n._v("（4）启动服务")]),n._v(" "),a("p",[n._v("​           local模式，什么配置项都不需要配，直接启动服务器即可")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("      ```\n      cd $FLIKE_HOME\n      \n      # 启动服务\n      ./bin/start-cluster.sh \n      # 停止服务\n      ./bin/stop-cluster.sh \n      ```\n")])])]),a("p",[n._v("（5）Web页面浏览")]),n._v(" "),a("p",[n._v("​      localhost:8081")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231423281.png",alt:"1563630933663"}})]),n._v(" "),a("h3",{attrs:{id:"_4-2-在集群上提交任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-在集群上提交任务"}},[n._v("#")]),n._v(" 4.2 在集群上提交任务")]),n._v(" "),a("p",[n._v("（1）编译，打包")]),n._v(" "),a("p",[n._v("​          mvn clean package")]),n._v(" "),a("p",[n._v("​         pom文件里面的依赖上添加上：")]),n._v(" "),a("p",[n._v("​          代表这个依赖打包的时候不打到jar包里面，因为我们这些依赖包flink已经自带了，所以我们打包的时候不用把打包进去。")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231423067.png",alt:"1563632280672"}})]),n._v(" "),a("p",[n._v("(2) 运行")]),n._v(" "),a("p",[n._v("​       在hadoop01 上执行 nc -lk 9999")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("```\n  flink run -c stream.lesson01.WindowWordCountJava flinklesson-1.0-SNAPSHOT.jar -port 9999\n```\n")])])]),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231423826.png",alt:"1563632969308"}})]),n._v(" "),a("p",[n._v("查看任务")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231423643.png",alt:"1563633009046"}})]),n._v(" "),a("p",[n._v("查看日志：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("tail -F $FLINK_HOME/log/flink-work-taskexecutor-0-tjtx-98-197.58os.org.out\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231423371.png",alt:"1563633150841"}})]),n._v(" "),a("p",[n._v("(3) 停止任务")]),n._v(" "),a("p",[n._v("方式一：页面上停止")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231423187.png",alt:"1563633479119"}})]),n._v(" "),a("p",[n._v("方式二：命令停止")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("flink cancel job-id\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("h2",{attrs:{id:"_5-standalone模式安装-local"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-standalone模式安装-local"}},[n._v("#")]),n._v(" 5 Standalone模式安装(local)")]),n._v(" "),a("h3",{attrs:{id:"_5-1-集群规划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-集群规划"}},[n._v("#")]),n._v(" 5.1 集群规划")]),n._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[n._v("主机名")]),n._v(" "),a("th",{staticStyle:{"text-align":"right"}},[n._v("JobManager")]),n._v(" "),a("th",{staticStyle:{"text-align":"center"}},[n._v("TaskManager")])])]),n._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("hadoop01")]),n._v(" "),a("td",{staticStyle:{"text-align":"right"}},[n._v("是")]),n._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("hadoop02")]),n._v(" "),a("td",{staticStyle:{"text-align":"right"}}),n._v(" "),a("td",{staticStyle:{"text-align":"center"}},[n._v("是")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("hadoop03")]),n._v(" "),a("td",{staticStyle:{"text-align":"right"}}),n._v(" "),a("td",{staticStyle:{"text-align":"center"}},[n._v("是")])])])]),n._v(" "),a("h3",{attrs:{id:"_5-2-依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-依赖"}},[n._v("#")]),n._v(" 5.2 依赖")]),n._v(" "),a("p",[n._v("jdk1.8以上，配置JAVA_HOME")]),n._v(" "),a("p",[n._v("主机之间免密码")]),n._v(" "),a("p",[n._v("flink-1.9.1-bin-scala_2.11.tgz")]),n._v(" "),a("h3",{attrs:{id:"_5-3-安装步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-安装步骤"}},[n._v("#")]),n._v(" 5.3 安装步骤")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("(a) 修改conf/flink-conf.yaml\njobmanager.rpc.address: hadoop01\n(b) 修改conf/slaves\nhadoop02\nhadoop03\n(c) 拷贝到其他节点\nscp -rq /usr/local/flink-1.9.1 hadoop02:/usr/local\nscp -rq /usr/local/flink-1.9.1 hadoop03:/usr/local\n(d)：在hadoop01(JobMananger)节点启动\nstart-cluster.sh\n(e)：访问http://hadoop01:8081\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br")])]),a("h3",{attrs:{id:"_5-4-standalone模式需要考虑的参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-standalone模式需要考虑的参数"}},[n._v("#")]),n._v(" 5.4 StandAlone模式需要考虑的参数")]),n._v(" "),a("p",[n._v("jobmanager.heap.mb：jobmanager节点可用的内存大小")]),n._v(" "),a("p",[n._v("taskmanager.heap.mb：taskmanager节点可用的内存大小")]),n._v(" "),a("p",[n._v("taskmanager.numberOfTaskSlots：每台机器可用的cpu数量")]),n._v(" "),a("p",[n._v("parallelism.default：默认情况下任务的并行度")]),n._v(" "),a("p",[n._v("taskmanager.tmp.dirs：taskmanager的临时数据存储目录")]),n._v(" "),a("h2",{attrs:{id:"_6-flink-on-yarn模式安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-flink-on-yarn模式安装"}},[n._v("#")]),n._v(" 6 Flink on Yarn模式安装")]),n._v(" "),a("ol",[a("li",[n._v("首先安装好Hadoop（yarn）")]),n._v(" "),a("li",[n._v("上传一个f lin k的包（什么参数都不要配置）")])]),n._v(" "),a("p",[n._v("flink on yarn有两种方式：")]),n._v(" "),a("h3",{attrs:{id:"_6-1-第一种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-第一种方式"}},[n._v("#")]),n._v(" 6.1 第一种方式")]),n._v(" "),a("p",[n._v("​\t\t在YARN里面启动一个flink集群，然后我们再往flink集群提交任务，除非把Flink集群停了，不然资源不会释放")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231425833.png",alt:"1563634783626"}})]),n._v(" "),a("h3",{attrs:{id:"_6-2-第二种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-第二种方式"}},[n._v("#")]),n._v(" 6.2 第二种方式")]),n._v(" "),a("p",[n._v("​\t\t没提交一个任务就在yarn上面启动一个flink小集群（推荐使用）")]),n._v(" "),a("p",[n._v("任务运行完了资源就自动释放")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231425931.png",alt:"1563634942092"}})]),n._v(" "),a("h3",{attrs:{id:"_6-3-不同模式的任务提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-不同模式的任务提交"}},[n._v("#")]),n._v(" 6.3 不同模式的任务提交")]),n._v(" "),a("ul",[a("li",[n._v("第一种【yarn-session.sh(开辟资源)+flink run(提交任务)】")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("# 启动一个一直运行的flink集群\n/bin/yarn-session.sh -n 2 -jm 1024 -tm 1024 [-d]\n\n# 把任务附着到一个已存在的flink yarn session\n./bin/yarn-session.sh -id application_1463870264508_0029\n\n# 执行任务\n./bin/flink run ./examples/batch/WordCount.jar -input hdfs://hadoop100:9000/LICENSE -output hdfs://hadoop100:9000/wordcount-result.txt \n\n停止任务 【web界面或者命令行执行cancel命令】\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br")])]),a("ul",[a("li",[n._v("第二种【flink run -m yarn-cluster(开辟资源+提交任务)】")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("# 启动集群，执行任务\n./bin/flink run -m yarn-cluster -yn 2 -yjm 1024 -ytm 1024 ./examples/batch/WordCount.jar\n\n注意：client端必须要设置YARN_CONF_DIR或者HADOOP_CONF_DIR或者HADOOP_HOME环境变量，通过这个环境变量来读取YARN和HDFS的配置信息，否则启动会失败\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br")])]),a("h3",{attrs:{id:"_6-4-help信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-help信息"}},[n._v("#")]),n._v(" 6.4 "),a("strong",[n._v("help信息")])]),n._v(" "),a("ul",[a("li",[n._v("yarn-session.sh")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("用法:  \n   必选  \n     -n,--container <arg>   分配多少个yarn容器 (=taskmanager的数量)  \n   可选  \n     -D <arg>                        动态属性  \n     -d,--detached                   独立运行  \n     -jm,--jobManagerMemory <arg>    JobManager的内存 [in MB]  \n     -nm,--name                     在YARN上为一个自定义的应用设置一个名字  \n     -q,--query                      显示yarn中可用的资源 (内存, cpu核数)  \n     -qu,--queue <arg>               指定YARN队列.  \n     -s,--slots <arg>                每个TaskManager使用的slots数量  \n     -tm,--taskManagerMemory <arg>   每个TaskManager的内存 [in MB]  \n     -z,--zookeeperNamespace <arg>   针对HA模式在zookeeper上创建NameSpace \n     -id,--applicationId <yarnAppId>        YARN集群上的任务id，附着到一个后台运行的yarn session中\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br")])]),a("ul",[a("li",[n._v("flink run")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('run [OPTIONS] <jar-file> <arguments>  \n "run" 操作参数:  \n-c,--class <classname>  如果没有在jar包中指定入口类，则需要在这里通过这个参数指定  \n-m,--jobmanager <host:port>  指定需要连接的jobmanager(主节点)地址，使用这个参数可以指定一个不同于配置文件中的jobmanager  \n-p,--parallelism <parallelism>   指定程序的并行度。可以覆盖配置文件中的默认值。\n\n默认查找当前yarn集群中已有的yarn-session信息中的jobmanager【/tmp/.yarn-properties-root】：\n./bin/flink run ./examples/batch/WordCount.jar -input hdfs://hostname:port/hello.txt -output hdfs://hostname:port/result1\n连接指定host和port的jobmanager：\n./bin/flink run -m hadoop100:1234 ./examples/batch/WordCount.jar -input hdfs://hostname:port/hello.txt -output hdfs://hostname:port/result1\n启动一个新的yarn-session：\n./bin/flink run -m yarn-cluster -yn 2 ./examples/batch/WordCount.jar -input hdfs://hostname:port/hello.txt -output hdfs://hostname:port/result1\n注意：yarn session命令行的选项也可以使用./bin/flink 工具获得。它们都有一个y或者yarn的前缀\n例如：./bin/flink run -m yarn-cluster -yn 2 ./examples/batch/WordCount.jar \n\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br")])]),a("h2",{attrs:{id:"_7-flink-shell使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-flink-shell使用"}},[n._v("#")]),n._v(" 7 Flink Shell使用")]),n._v(" "),a("p",[n._v("​\t\t针对初学者，开发的时候容易出错，如果每次都打包进行调试，比较麻烦，并且也不好定位问题，可以在scala shell命令行下进行调试")]),n._v(" "),a("p",[n._v("scala shell方式支持流处理和批处理。当启动shell命令行之后，两个不同的ExecutionEnvironments会被自动创建。使用senv(Stream)和benv(Batch)分别去处理流处理和批处理程序。(类似于spark-shell中sc变量)")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("bin/start-scala-shell.sh [local|remote|yarn] [options] <args>\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("h2",{attrs:{id:"_8-flink数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-flink数据"}},[n._v("#")]),n._v(" 8. Flink数据")]),n._v(" "),a("h3",{attrs:{id:"_8-1-flink之数据源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-flink之数据源"}},[n._v("#")]),n._v(" 8.1 Flink之数据源")]),n._v(" "),a("h4",{attrs:{id:"_8-1-1-source简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-1-source简介"}},[n._v("#")]),n._v(" 8.1.1  source简介")]),n._v(" "),a("p",[n._v("​\t\tsource是程序的数据源输入，你可以通过StreamExecutionEnvironment.addSource(sourceFunction)来为你的程序添加一个source。")]),n._v(" "),a("p",[n._v("flink提供了大量的已经实现好的source方法，你也可以自定义source：")]),n._v(" "),a("p",[n._v("（1）通过实现sourceFunction接口来自定义无并行度的source")]),n._v(" "),a("p",[n._v("（2）通过实现ParallelSourceFunction 接口 or 继承RichParallelSourceFunction 来自定义有并行度的source")]),n._v(" "),a("p",[n._v("不过大多数情况下，我们使用自带的source即可。")]),n._v(" "),a("p",[a("strong",[n._v("获取source的方式")])]),n._v(" "),a("p",[n._v("（1）基于文件")]),n._v(" "),a("p",[n._v("​          readTextFile(path)")]),n._v(" "),a("p",[n._v("​         读取文本文件，文件遵循TextInputFormat 读取规则，逐行读取并返回。")]),n._v(" "),a("p",[n._v("（2）基于socket")]),n._v(" "),a("p",[n._v("​         socketTextStream\n​         从socker中读取数据，元素可以通过一个分隔符切开。")]),n._v(" "),a("p",[n._v("（3）基于集合")]),n._v(" "),a("p",[n._v("​          fromCollection(Collection)")]),n._v(" "),a("p",[n._v("​         通过java 的collection集合创建一个数据流，集合中的所有元素必须是相同类型的。")]),n._v(" "),a("p",[n._v("（4）自定义输入")]),n._v(" "),a("p",[n._v("​         addSource 可以实现读取第三方数据源的数据")]),n._v(" "),a("p",[n._v("​        系统内置提供了一批connectors，连接器会提供对应的source支持【kafka】")]),n._v(" "),a("p",[a("strong",[n._v("自带的connectors")])]),n._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.8/dev/connectors/kafka.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Apache Kafka"),a("OutboundLink")],1),n._v(" (source/sink)  "),a("strong",[n._v("后面重点分析")])]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.8/dev/connectors/cassandra.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Apache Cassandra"),a("OutboundLink")],1),n._v(" (sink)")]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.8/dev/connectors/kinesis.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Amazon Kinesis Streams"),a("OutboundLink")],1),n._v(" (source/sink)")]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.8/dev/connectors/elasticsearch.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Elasticsearch"),a("OutboundLink")],1),n._v(" (sink)")]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.8/dev/connectors/filesystem_sink.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Hadoop FileSystem"),a("OutboundLink")],1),n._v(" (sink)")]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.8/dev/connectors/rabbitmq.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("RabbitMQ"),a("OutboundLink")],1),n._v(" (source/sink)")]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.8/dev/connectors/nifi.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Apache NiFi"),a("OutboundLink")],1),n._v(" (source/sink)")]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.8/dev/connectors/twitter.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Twitter Streaming API"),a("OutboundLink")],1),n._v(" (source)")])]),n._v(" "),a("h4",{attrs:{id:"_8-1-2-数据源之collection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-2-数据源之collection"}},[n._v("#")]),n._v(" 8.1.2  数据源之collection")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('public class StreamingSourceFromCollection {\n    public static void main(String[] args) throws Exception {\n        //步骤一：获取环境变量\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        //步骤二：模拟数据\n        ArrayList<String> data = new ArrayList<String>();\n        data.add("hadoop");\n        data.add("spark");\n        data.add("flink");\n        //步骤三：获取数据源\n        DataStreamSource<String> dataStream = env.fromCollection(data);\n        //步骤四：transformation操作\n        SingleOutputStreamOperator<String> addPreStream = dataStream.map(new MapFunction<String, String>() {\n            @Override\n            public String map(String word) throws Exception {\n                return "kaikeba_" + word;\n            }\n        });\n        //步骤五：对结果进行处理（打印）\n        addPreStream.print().setParallelism(1);\n        //步骤六：启动程序\n        env.execute("StreamingSourceFromCollection");\n\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br")])]),a("h4",{attrs:{id:"_8-1-3-自定义单并行度数据源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-3-自定义单并行度数据源"}},[n._v("#")]),n._v(" 8.1.3  自定义单并行度数据源")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("/**\n * 注意：指定数据类型\n * 功能：每秒产生一条数据\n */\npublic class MyNoParalleSource implements SourceFunction<Long> {\n    private long number = 1L;\n    private boolean isRunning = true;\n    @Override\n    public void run(SourceContext<Long> sct) throws Exception {\n        while (isRunning){\n         sct.collect(number);\n         number++;\n         //每秒生成一条数据\n         Thread.sleep(1000);\n        }\n\n    }\n\n    @Override\n    public void cancel() {\n        isRunning=false;\n    }\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 功能：从自定义的数据数据源里面获取数据，然后过滤出偶数\n */\npublic class StreamingDemoWithMyNoPralalleSource {\n    public static void main(String[] args) throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        DataStreamSource<Long> numberStream = env.addSource(new MyNoParalleSource()).setParallelism(1);\n        SingleOutputStreamOperator<Long> dataStream = numberStream.map(new MapFunction<Long, Long>() {\n            @Override\n            public Long map(Long value) throws Exception {\n                System.out.println("接受到了数据："+value);\n                return value;\n            }\n        });\n        SingleOutputStreamOperator<Long> filterDataStream = dataStream.filter(new FilterFunction<Long>() {\n            @Override\n            public boolean filter(Long number) throws Exception {\n                return number % 2 == 0;\n            }\n        });\n\n        filterDataStream.print().setParallelism(1);\n        env.execute("StreamingDemoWithMyNoPralalleSource");\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br")])]),a("p",[n._v("运行结果：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("接受到了数据：1\n接受到了数据：2\n2\n接受到了数据：3\n接受到了数据：4\n4\n接受到了数据：5\n接受到了数据：6\n6\n接受到了数据：7\n接受到了数据：8\n8\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br")])]),a("h4",{attrs:{id:"_8-1-4-自定义多并行度数据源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-4-自定义多并行度数据源"}},[n._v("#")]),n._v(" 8.1.4 自定义多并行度数据源")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("/**\n * 功能：自定义支持并行度的数据源\n * 每秒产生一条数据\n */\npublic class MyParalleSource implements ParallelSourceFunction<Long> {\n    private long number = 1L;\n    private boolean isRunning = true;\n    @Override\n    public void run(SourceContext<Long> sct) throws Exception {\n        while (isRunning){\n            sct.collect(number);\n            number++;\n            //每秒生成一条数据\n            Thread.sleep(1000);\n        }\n\n    }\n\n    @Override\n    public void cancel() {\n        isRunning=false;\n    }\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('public class StreamingDemoWithMyPralalleSource {\n    public static void main(String[] args) throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        DataStreamSource<Long> numberStream = env.addSource(new MyParalleSource()).setParallelism(2);\n        SingleOutputStreamOperator<Long> dataStream = numberStream.map(new MapFunction<Long, Long>() {\n            @Override\n            public Long map(Long value) throws Exception {\n                System.out.println("接受到了数据："+value);\n                return value;\n            }\n        });\n        SingleOutputStreamOperator<Long> filterDataStream = dataStream.filter(new FilterFunction<Long>() {\n            @Override\n            public boolean filter(Long number) throws Exception {\n                return number % 2 == 0;\n            }\n        });\n\n        filterDataStream.print().setParallelism(1);\n        env.execute("StreamingDemoWithMyNoPralalleSource");\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br")])]),a("p",[n._v("运行结果：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("接受到了数据：1\n接受到了数据：1\n接受到了数据：2\n接受到了数据：2\n2\n2\n接受到了数据：3\n接受到了数据：3\n接受到了数据：4\n4\n接受到了数据：4\n4\n接受到了数据：5\n接受到了数据：5\n接受到了数据：6\n接受到了数据：6\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br")])]),a("h3",{attrs:{id:"_8-2-常见transformation操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-常见transformation操作"}},[n._v("#")]),n._v(" 8.2  常见Transformation操作")]),n._v(" "),a("h4",{attrs:{id:"_8-2-1-map和filter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-1-map和filter"}},[n._v("#")]),n._v(" 8.2.1 map和filter")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 数据源：1 2 3 4 5.....源源不断过来\n * 通过map打印一下接受到数据\n * 通过filter过滤一下数据，我们只需要偶数\n */\npublic class MapDemo {\n        public static void main(String[] args) throws Exception {\n            StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n            DataStreamSource<Long> numberStream = env.addSource(new MyNoParalleSource()).setParallelism(1);\n            SingleOutputStreamOperator<Long> dataStream = numberStream.map(new MapFunction<Long, Long>() {\n                @Override\n                public Long map(Long value) throws Exception {\n                    System.out.println("接受到了数据："+value);\n                    return value;\n                }\n            });\n            SingleOutputStreamOperator<Long> filterDataStream = dataStream.filter(new FilterFunction<Long>() {\n                @Override\n                public boolean filter(Long number) throws Exception {\n                    return number % 2 == 0;\n                }\n            });\n\n            filterDataStream.print().setParallelism(1);\n            env.execute("StreamingDemoWithMyNoPralalleSource");\n        }\n\n\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br")])]),a("h4",{attrs:{id:"_8-2-2-flatmap-keyby和sum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-2-flatmap-keyby和sum"}},[n._v("#")]),n._v(" 8.2.2  flatMap，keyBy和sum")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 滑动窗口实现单词计数\n * 数据源：socket\n * 需求：每隔1秒计算最近2秒单词出现的次数\n *\n * 练习算子：\n * flatMap\n * keyBy:\n *    dataStream.keyBy("someKey") // 指定对象中的 "someKey"字段作为分组key\n *    dataStream.keyBy(0) //指定Tuple中的第一个元素作为分组key\n * sum\n */\npublic class WindowWordCountJava {\n    public static void main(String[] args) throws  Exception {\n        int port;\n        try{\n            ParameterTool parameterTool = ParameterTool.fromArgs(args);\n            port = parameterTool.getInt("port");\n        }catch (Exception e){\n            System.err.println("no port set,user default port 9988");\n            port=9988;\n        }\n        //步骤一：获取flink运行环境（stream）\n        StreamExecutionEnvironment env= StreamExecutionEnvironment.getExecutionEnvironment();\n        String hostname="10.126.88.226";\n        String delimiter="\\n";\n        //步骤二：获取数据源\n        DataStreamSource<String> textStream = env.socketTextStream(hostname, port, delimiter);\n        //步骤三：执行transformation操作\n        SingleOutputStreamOperator<WordCount> wordCountStream = textStream.flatMap(new FlatMapFunction<String, WordCount>() {\n            public void flatMap(String line, Collector<WordCount> out) throws Exception {\n                String[] fields = line.split("\\t");\n                for (String word : fields) {\n                    out.collect(new WordCount(word, 1L));\n                }\n            }\n        }).keyBy("word")\n                .timeWindow(Time.seconds(2), Time.seconds(1))//每隔1秒计算最近2秒\n                .sum("count");\n\n        wordCountStream.print().setParallelism(1);//打印并设置并行度\n        //步骤四：运行程序\n        env.execute("socket word count");\n\n\n    }\n\n    public static class WordCount{\n        public String word;\n        public long count;\n        public WordCount(){\n\n        }\n        public WordCount(String word,long count){\n            this.word=word;\n            this.count=count;\n        }\n\n        @Override\n        public String toString() {\n            return "WordCount{" +\n                    "word=\'" + word + \'\\\'\' +\n                    ", count=" + count +\n                    \'}\';\n        }\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br")])]),a("h4",{attrs:{id:"_8-2-3-union"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-3-union"}},[n._v("#")]),n._v(" 8.2.3  union")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 合并多个流，新的流会包含所有流中的数据，但是union是一个限制，就是所有合并的流类型必须是一致的\n */\npublic class unionDemo {\n    public static void main(String[] args) throws Exception {\n        //获取Flink的运行环境\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        //获取数据源\n        DataStreamSource<Long> text1 = env.addSource(new MyNoParalleSource()).setParallelism(1);//注意：针对此source，并行度只能设置为1\n        DataStreamSource<Long> text2 = env.addSource(new MyNoParalleSource()).setParallelism(1);\n\n        //把text1和text2组装到一起\n        DataStream<Long> text = text1.union(text2);\n\n        DataStream<Long> num = text.map(new MapFunction<Long, Long>() {\n            @Override\n            public Long map(Long value) throws Exception {\n                System.out.println("原始接收到数据：" + value);\n                return value;\n            }\n        });\n        //每2秒钟处理一次数据\n        DataStream<Long> sum = num.timeWindowAll(Time.seconds(2)).sum(0);\n        //打印结果\n        sum.print().setParallelism(1);\n        String jobName = unionDemo.class.getSimpleName();\n        env.execute(jobName);\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br")])]),a("h4",{attrs:{id:"_8-2-4-connect-conmap和conflatmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-4-connect-conmap和conflatmap"}},[n._v("#")]),n._v(" 8.2.4   connect,conMap和conFlatMap")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 和union类似，但是只能连接两个流，两个流的数据类型可以不同，会对两个流中的数据应用不同的处理方法\n */\npublic class ConnectionDemo {\n    public static void main(String[] args) throws Exception {\n        //获取Flink的运行环境\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n\n        //获取数据源\n        DataStreamSource<Long> text1 = env.addSource(new MyNoParalleSource()).setParallelism(1);//注意：针对此source，并行度只能设置为1\n\n        DataStreamSource<Long> text2 = env.addSource(new MyNoParalleSource()).setParallelism(1);\n        SingleOutputStreamOperator<String> text2_str = text2.map(new MapFunction<Long, String>() {\n            @Override\n            public String map(Long value) throws Exception {\n                return "str_" + value;\n            }\n        });\n\n        ConnectedStreams<Long, String> connectStream = text1.connect(text2_str);\n\n        SingleOutputStreamOperator<Object> result = connectStream.map(new CoMapFunction<Long, String, Object>() {\n            @Override\n            public Object map1(Long value) throws Exception {\n                return value;\n            }\n\n            @Override\n            public Object map2(String value) throws Exception {\n                return value;\n            }\n        });\n\n        //打印结果\n        result.print().setParallelism(1);\n        String jobName = ConnectionDemo.class.getSimpleName();\n        env.execute(jobName);\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br")])]),a("h4",{attrs:{id:"_8-2-5-split和select"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-5-split和select"}},[n._v("#")]),n._v(" 8.2.5  Split和Select")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n *  根据规则把一个数据流切分为多个流\n 应用场景：\n * 可能在实际工作中，源数据流中混合了多种类似的数据，多种类型的数据处理规则不一样，所以就可以在根据一定的规则，\n * 把一个数据流切分成多个数据流，这样每个数据流就可以使用不用的处理逻辑了\n */\npublic class SplitDemo {\n    public static void main(String[] args) throws  Exception {\n        //获取Flink的运行环境\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        //获取数据源\n        DataStreamSource<Long> text = env.addSource(new MyNoParalleSource()).setParallelism(1);//注意：针对此source，并行度只能设置为1\n        //对流进行切分，按照数据的奇偶性进行区分\n        SplitStream<Long> splitStream = text.split(new OutputSelector<Long>() {\n            @Override\n            public Iterable<String> select(Long value) {\n                ArrayList<String> outPut = new ArrayList<>();\n                if (value % 2 == 0) {\n                    outPut.add("even");//偶数\n                } else {\n                    outPut.add("odd");//奇数\n                }\n                return outPut;\n            }\n        });\n\n        //选择一个或者多个切分后的流\n        DataStream<Long> evenStream = splitStream.select("even");\n        DataStream<Long> oddStream = splitStream.select("odd");\n        DataStream<Long> moreStream = splitStream.select("odd","even");\n\n        //打印结果\n        evenStream.print().setParallelism(1);\n        String jobName = SplitDemo.class.getSimpleName();\n        env.execute(jobName);\n\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br")])]),a("h3",{attrs:{id:"_8-3-常见sink操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-常见sink操作"}},[n._v("#")]),n._v(" 8.3  常见sink操作")]),n._v(" "),a("h4",{attrs:{id:"_8-3-1-print-printtoerr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-1-print-printtoerr"}},[n._v("#")]),n._v(" 8.3.1 print() / printToErr()")]),n._v(" "),a("p",[n._v("​\t\t打印每个元素的toString()方法的值到标准输出或者标准错误输出流中")]),n._v(" "),a("h4",{attrs:{id:"_8-3-2-writeastext"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-2-writeastext"}},[n._v("#")]),n._v(" 8.3.2  writeAsText()")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 数据源：1 2 3 4 5.....源源不断过来\n * 通过map打印一下接受到数据\n * 通过filter过滤一下数据，我们只需要偶数\n */\npublic class WriteTextDemo {\n    public static void main(String[] args) throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        DataStreamSource<Long> numberStream = env.addSource(new MyNoParalleSource()).setParallelism(1);\n        SingleOutputStreamOperator<Long> dataStream = numberStream.map(new MapFunction<Long, Long>() {\n            @Override\n            public Long map(Long value) throws Exception {\n                System.out.println("接受到了数据："+value);\n                return value;\n            }\n        });\n        SingleOutputStreamOperator<Long> filterDataStream = dataStream.filter(new FilterFunction<Long>() {\n            @Override\n            public boolean filter(Long number) throws Exception {\n                return number % 2 == 0;\n            }\n        });\n   filterDataStream.writeAsText("D:\\\\kfly\\\\flinklesson\\\\src\\\\output\\\\test").setParallelism(1);\n        env.execute("StreamingDemoWithMyNoPralalleSource");\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br")])]),a("h4",{attrs:{id:"_8-3-4-flink提供的sink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-4-flink提供的sink"}},[n._v("#")]),n._v(" 8.3.4   Flink提供的sink")]),n._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/connectors/kafka.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Apache Kafka"),a("OutboundLink")],1),n._v(" (source/sink)")]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/connectors/cassandra.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Apache Cassandra"),a("OutboundLink")],1),n._v(" (sink)")]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/connectors/kinesis.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Amazon Kinesis Streams"),a("OutboundLink")],1),n._v(" (source/sink)")]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/connectors/elasticsearch.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Elasticsearch"),a("OutboundLink")],1),n._v(" (sink)")]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/connectors/filesystem_sink.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Hadoop FileSystem"),a("OutboundLink")],1),n._v(" (sink)")]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/connectors/rabbitmq.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("RabbitMQ"),a("OutboundLink")],1),n._v(" (source/sink)")]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/connectors/nifi.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Apache NiFi"),a("OutboundLink")],1),n._v(" (source/sink)")]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/connectors/twitter.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Twitter Streaming API"),a("OutboundLink")],1),n._v(" (source)")]),n._v(" "),a("li",[a("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/connectors/pubsub.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Google PubSub"),a("OutboundLink")],1),n._v(" (source/sink)")])]),n._v(" "),a("h4",{attrs:{id:"_8-3-5-自定义sink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-5-自定义sink"}},[n._v("#")]),n._v(" 8.3.5 自定义sink")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("     <dependency>\n            <groupId>org.apache.bahir</groupId>\n            <artifactId>flink-connector-redis_2.11</artifactId>\n            <version>1.0</version>\n     </dependency>\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("p",[n._v("自定义redis sink")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 把数据写入redis\n */\npublic class SinkForRedisDemo {\n    public static void main(String[] args) throws  Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        DataStreamSource<String> text = env.socketTextStream("hadoop100", 9000, "\\n");\n        //lpsuh l_words word\n        //对数据进行组装,把string转化为tuple2<String,String>\n        DataStream<Tuple2<String, String>> l_wordsData = text.map(new MapFunction<String, Tuple2<String, String>>() {\n            @Override\n            public Tuple2<String, String> map(String value) throws Exception {\n                return new Tuple2<>("l_words", value);\n            }\n        });\n        //创建redis的配置\n        FlinkJedisPoolConfig conf = new FlinkJedisPoolConfig.Builder().setHost("hadoop110").setPort(6379).build();\n\n        //创建redissink\n        RedisSink<Tuple2<String, String>> redisSink = new RedisSink<>(conf, new MyRedisMapper());\n        l_wordsData.addSink(redisSink);\n        env.execute("StreamingDemoToRedis");\n\n    }\n\n    public static class MyRedisMapper implements RedisMapper<Tuple2<String, String>> {\n        //表示从接收的数据中获取需要操作的redis key\n        @Override\n        public String getKeyFromData(Tuple2<String, String> data) {\n            return data.f0;\n        }\n        //表示从接收的数据中获取需要操作的redis value\n        @Override\n        public String getValueFromData(Tuple2<String, String> data) {\n            return data.f1;\n        }\n\n        @Override\n        public RedisCommandDescription getCommandDescription() {\n            return new RedisCommandDescription(RedisCommand.LPUSH);\n        }\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br")])]),a("h2",{attrs:{id:"_9-dataset算子操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-dataset算子操作"}},[n._v("#")]),n._v(" 9 DataSet算子操作")]),n._v(" "),a("h3",{attrs:{id:"_9-1-source"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-source"}},[n._v("#")]),n._v(" 9.1  source")]),n._v(" "),a("ul",[a("li",[n._v("基于文件\nreadTextFile(path)")]),n._v(" "),a("li",[n._v("基于集合\nfromCollection(Collection)")])]),n._v(" "),a("h3",{attrs:{id:"_9-2-transform"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-transform"}},[n._v("#")]),n._v(" 9.2  transform")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("Map：输入一个元素，然后返回一个元素，中间可以做一些清洗转换等操作")])]),n._v(" "),a("li",[a("p",[n._v("FlatMap：输入一个元素，可以返回零个，一个或者多个元素")])]),n._v(" "),a("li",[a("p",[n._v("MapPartition：类似map，一次处理一个分区的数据【如果在进行map处理的时候需要获取第三方资源链接，建议使用MapPartition】")])]),n._v(" "),a("li",[a("p",[n._v("Filter：过滤函数，对传入的数据进行判断，符合条件的数据会被留下")])]),n._v(" "),a("li",[a("p",[n._v("Reduce：对数据进行聚合操作，结合当前元素和上一次reduce返回的值进行聚合操作，然后返回一个新的值")])]),n._v(" "),a("li",[a("p",[n._v("Aggregate：sum、max、min等")])]),n._v(" "),a("li",[a("p",[n._v("Distinct：返回一个数据集中去重之后的元素，data.distinct()")])]),n._v(" "),a("li",[a("p",[n._v("Join：内连接")])]),n._v(" "),a("li",[a("p",[n._v("OuterJoin：外链接")])]),n._v(" "),a("li",[a("p",[n._v("Cross：获取两个数据集的笛卡尔积")])]),n._v(" "),a("li",[a("p",[n._v("Union：返回两个数据集的总和，数据类型需要一致")])]),n._v(" "),a("li",[a("p",[n._v("First-n：获取集合中的前N个元素")])]),n._v(" "),a("li",[a("p",[n._v("Sort Partition：在本地对数据集的所有分区进行排序，通过sortPartition()的链接调用来完成对多个字段的排序")])])]),n._v(" "),a("h4",{attrs:{id:"_9-2-1-mappartition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-1-mappartition"}},[n._v("#")]),n._v(" 9.2.1 MapPartition")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('public class MapPartitionDemo {\n    public static void main(String[] args) throws Exception{\n\n        //获取运行环境\n        ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n        ArrayList<String> data = new ArrayList<>();\n        data.add("hello you");\n        data.add("hello me");\n        DataSource<String> text = env.fromCollection(data);\n\n        /*text.map(new MapFunction<String, String>() {\n            @Override\n            public String map(String value) throws Exception {\n                //获取数据库连接--注意，此时是每过来一条数据就获取一次链接\n                //处理数据\n                //关闭连接\n                return value;\n            }\n        });*/\n        DataSet<String> mapPartitionData = text.mapPartition(new MapPartitionFunction<String, String>() {\n            @Override\n            public void mapPartition(Iterable<String> values, Collector<String> out) throws Exception {\n                //获取数据库连接--注意，此时是一个分区的数据获取一次连接【优点，每个分区获取一次链接】\n                //values中保存了一个分区的数据\n                //处理数据\n                Iterator<String> it = values.iterator();\n                while (it.hasNext()) {\n                    String next = it.next();\n                    String[] split = next.split("\\\\W+");\n                    for (String word : split) {\n                        out.collect(word);\n                    }\n                }\n                //关闭链接\n            }\n        });\n        mapPartitionData.print();\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br")])]),a("h4",{attrs:{id:"_9-2-2-distinct"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-2-distinct"}},[n._v("#")]),n._v(" 9.2.2 distinct")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 对数据进行去重\n */\npublic class DistinctDemo {\n    public static void main(String[] args) throws Exception{\n\n        //获取运行环境\n        ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n        ArrayList<String> data = new ArrayList<>();\n        data.add("you jump");\n        data.add("i jump");\n        DataSource<String> text = env.fromCollection(data);\n        FlatMapOperator<String, String> flatMapData = text.flatMap(new FlatMapFunction<String, String>() {\n            @Override\n            public void flatMap(String value, Collector<String> out) throws Exception {\n                String[] split = value.toLowerCase().split("\\\\W+");\n                for (String word : split) {\n                    System.out.println("单词："+word);\n                    out.collect(word);\n                }\n            }\n        });\n\n        flatMapData.distinct()// 对数据进行整体去重\n                .print();\n\n\n    }\n\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br")])]),a("h4",{attrs:{id:"_9-2-3-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-3-join"}},[n._v("#")]),n._v(" 9.2.3 join")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 对数据进行join\n */\npublic class JoinDemo {\n    public static void main(String[] args) throws Exception{\n\n        //获取运行环境\n        ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n\n        //tuple2<用户id，用户姓名>\n        ArrayList<Tuple2<Integer, String>> data1 = new ArrayList<>();\n        data1.add(new Tuple2<>(1,"zs"));\n        data1.add(new Tuple2<>(2,"ls"));\n        data1.add(new Tuple2<>(3,"ww"));\n\n\n        //tuple2<用户id，用户所在城市>\n        ArrayList<Tuple2<Integer, String>> data2 = new ArrayList<>();\n        data2.add(new Tuple2<>(1,"beijing"));\n        data2.add(new Tuple2<>(2,"shanghai"));\n        data2.add(new Tuple2<>(3,"guangzhou"));\n\n\n        DataSource<Tuple2<Integer, String>> text1 = env.fromCollection(data1);\n        DataSource<Tuple2<Integer, String>> text2 = env.fromCollection(data2);\n\n\n        text1.join(text2).where(0)//指定第一个数据集中需要进行比较的元素角标\n                .equalTo(0)//指定第二个数据集中需要进行比较的元素角标\n                .with(new JoinFunction<Tuple2<Integer,String>, Tuple2<Integer,String>, Tuple3<Integer,String,String>>() {\n                    @Override\n                    public Tuple3<Integer, String, String> join(Tuple2<Integer, String> first, Tuple2<Integer, String> second)\n                            throws Exception {\n                        return new Tuple3<>(first.f0,first.f1,second.f1);\n                    }\n                }).print();\n\n        System.out.println("==================================");\n\n        //注意，这里用map和上面使用的with最终效果是一致的。\n        /*text1.join(text2).where(0)//指定第一个数据集中需要进行比较的元素角标\n                .equalTo(0)//指定第二个数据集中需要进行比较的元素角标\n                .map(new MapFunction<Tuple2<Tuple2<Integer,String>,Tuple2<Integer,String>>, Tuple3<Integer,String,String>>() {\n                    @Override\n                    public Tuple3<Integer, String, String> map(Tuple2<Tuple2<Integer, String>, Tuple2<Integer, String>> value) throws Exception {\n                        return new Tuple3<>(value.f0.f0,value.f0.f1,value.f1.f1);\n                    }\n                }).print();*/\n    }\n\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br")])]),a("h4",{attrs:{id:"_9-2-4-outjoin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-4-outjoin"}},[n._v("#")]),n._v(" 9.2.4 OutJoin")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 外连接:\n *      左外连接\n *      右外连接\n *      全外连接\n */\npublic class OuterJoinDemo {\n    public static void main(String[] args) throws Exception{\n\n        //获取运行环境\n        ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n        //tuple2<用户id，用户姓名>\n        ArrayList<Tuple2<Integer, String>> data1 = new ArrayList<>();\n        data1.add(new Tuple2<>(1,"zs"));\n        data1.add(new Tuple2<>(2,"ls"));\n        data1.add(new Tuple2<>(3,"ww"));\n        //tuple2<用户id，用户所在城市>\n        ArrayList<Tuple2<Integer, String>> data2 = new ArrayList<>();\n        data2.add(new Tuple2<>(1,"beijing"));\n        data2.add(new Tuple2<>(2,"shanghai"));\n        data2.add(new Tuple2<>(4,"guangzhou"));\n        DataSource<Tuple2<Integer, String>> text1 = env.fromCollection(data1);\n        DataSource<Tuple2<Integer, String>> text2 = env.fromCollection(data2);\n        /**\n         * 左外连接\n         *\n         * 注意：second这个tuple中的元素可能为null\n         *\n         */\n        text1.leftOuterJoin(text2)\n                .where(0)\n                .equalTo(0)\n                .with(new JoinFunction<Tuple2<Integer,String>, Tuple2<Integer,String>, Tuple3<Integer,String,String>>() {\n                    @Override\n                    public Tuple3<Integer, String, String> join(Tuple2<Integer, String> first, Tuple2<Integer, String> second) throws Exception {\n                        if(second==null){\n                            return new Tuple3<>(first.f0,first.f1,"null");\n                        }else{\n                            return new Tuple3<>(first.f0,first.f1,second.f1);\n                        }\n\n                    }\n                }).print();\n        System.out.println("=============================================================================");\n        /**\n         * 右外连接\n         *\n         * 注意：first这个tuple中的数据可能为null\n         *\n         */\n        text1.rightOuterJoin(text2)\n                .where(0)\n                .equalTo(0)\n                .with(new JoinFunction<Tuple2<Integer,String>, Tuple2<Integer,String>, Tuple3<Integer,String,String>>() {\n                    @Override\n                    public Tuple3<Integer, String, String> join(Tuple2<Integer, String> first, Tuple2<Integer, String> second) throws Exception {\n                        if(first==null){\n                            return new Tuple3<>(second.f0,"null",second.f1);\n                        }\n                        return new Tuple3<>(first.f0,first.f1,second.f1);\n                    }\n                }).print();\n\n\n\n        System.out.println("=================================================");\n\n        /**\n         * 全外连接\n         *\n         * 注意：first和second这两个tuple都有可能为null\n         *\n         */\n\n        text1.fullOuterJoin(text2)\n                .where(0)\n                .equalTo(0)\n                .with(new JoinFunction<Tuple2<Integer,String>, Tuple2<Integer,String>, Tuple3<Integer,String,String>>() {\n                    @Override\n                    public Tuple3<Integer, String, String> join(Tuple2<Integer, String> first, Tuple2<Integer, String> second) throws Exception {\n                        if(first==null){\n                            return new Tuple3<>(second.f0,"null",second.f1);\n                        }else if(second == null){\n                            return new Tuple3<>(first.f0,first.f1,"null");\n                        }else{\n                            return new Tuple3<>(first.f0,first.f1,second.f1);\n                        }\n                    }\n                }).print();\n\n\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br"),a("span",{staticClass:"line-number"},[n._v("87")]),a("br"),a("span",{staticClass:"line-number"},[n._v("88")]),a("br"),a("span",{staticClass:"line-number"},[n._v("89")]),a("br"),a("span",{staticClass:"line-number"},[n._v("90")]),a("br"),a("span",{staticClass:"line-number"},[n._v("91")]),a("br"),a("span",{staticClass:"line-number"},[n._v("92")]),a("br"),a("span",{staticClass:"line-number"},[n._v("93")]),a("br")])]),a("h4",{attrs:{id:"_9-2-5-cross"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-5-cross"}},[n._v("#")]),n._v(" 9.2.5 Cross")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 笛卡尔积\n */\npublic class CrossDemo {\n    public static void main(String[] args) throws Exception{\n\n        //获取运行环境\n        ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n        //tuple2<用户id，用户姓名>\n        ArrayList<String> data1 = new ArrayList<>();\n        data1.add("zs");\n        data1.add("ww");\n        //tuple2<用户id，用户所在城市>\n        ArrayList<Integer> data2 = new ArrayList<>();\n        data2.add(1);\n        data2.add(2);\n        DataSource<String> text1 = env.fromCollection(data1);\n        DataSource<Integer> text2 = env.fromCollection(data2);\n        CrossOperator.DefaultCross<String, Integer> cross = text1.cross(text2);\n        cross.print();\n\n\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br")])]),a("h4",{attrs:{id:"_9-2-6-first-n-和-sortpartition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-6-first-n-和-sortpartition"}},[n._v("#")]),n._v(" 9.2.6 First-n 和 SortPartition")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * TopN\n */\nimport java.util.ArrayList;\n\npublic class FirstNDemo {\n    public static void main(String[] args) throws Exception{\n\n        //获取运行环境\n        ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n\n        ArrayList<Tuple2<Integer, String>> data = new ArrayList<>();\n        data.add(new Tuple2<>(2,"zs"));\n        data.add(new Tuple2<>(4,"ls"));\n        data.add(new Tuple2<>(3,"ww"));\n        data.add(new Tuple2<>(1,"xw"));\n        data.add(new Tuple2<>(1,"aw"));\n        data.add(new Tuple2<>(1,"mw"));\n\n\n        DataSource<Tuple2<Integer, String>> text = env.fromCollection(data);\n\n\n        //获取前3条数据，按照数据插入的顺序\n        text.first(3).print();\n        System.out.println("==============================");\n\n        //根据数据中的第一列进行分组，获取每组的前2个元素\n        text.groupBy(0).first(2).print();\n        System.out.println("==============================");\n\n        //根据数据中的第一列分组，再根据第二列进行组内排序[升序]，获取每组的前2个元素\n        text.groupBy(0).sortGroup(1, Order.ASCENDING).first(2).print();\n        System.out.println("==============================");\n\n        //不分组，全局排序获取集合中的前3个元素，针对第一个元素升序，第二个元素倒序\n        text.sortPartition(0,Order.ASCENDING).sortPartition(1,Order.DESCENDING).first(3).print();\n\n    }\n}\n\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br")])]),a("h4",{attrs:{id:"_9-2-7-partition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-7-partition"}},[n._v("#")]),n._v(" 9.2.7 partition")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * HashPartition\n *\n * RangePartition\n */\npublic class HashRangePartitionDemo {\n\n    public static void main(String[] args) throws Exception{\n\n        //获取运行环境\n        ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n\n        ArrayList<Tuple2<Integer, String>> data = new ArrayList<>();\n        data.add(new Tuple2<>(1,"hello1"));\n        data.add(new Tuple2<>(2,"hello2"));\n        data.add(new Tuple2<>(2,"hello3"));\n        data.add(new Tuple2<>(3,"hello4"));\n        data.add(new Tuple2<>(3,"hello5"));\n        data.add(new Tuple2<>(3,"hello6"));\n        data.add(new Tuple2<>(4,"hello7"));\n        data.add(new Tuple2<>(4,"hello8"));\n        data.add(new Tuple2<>(4,"hello9"));\n        data.add(new Tuple2<>(4,"hello10"));\n        data.add(new Tuple2<>(5,"hello11"));\n        data.add(new Tuple2<>(5,"hello12"));\n        data.add(new Tuple2<>(5,"hello13"));\n        data.add(new Tuple2<>(5,"hello14"));\n        data.add(new Tuple2<>(5,"hello15"));\n        data.add(new Tuple2<>(6,"hello16"));\n        data.add(new Tuple2<>(6,"hello17"));\n        data.add(new Tuple2<>(6,"hello18"));\n        data.add(new Tuple2<>(6,"hello19"));\n        data.add(new Tuple2<>(6,"hello20"));\n        data.add(new Tuple2<>(6,"hello21"));\n\n\n        DataSource<Tuple2<Integer, String>> text = env.fromCollection(data);\n\n        /*text.partitionByHash(0).mapPartition(new MapPartitionFunction<Tuple2<Integer,String>, Tuple2<Integer,String>>() {\n            @Override\n            public void mapPartition(Iterable<Tuple2<Integer, String>> values, Collector<Tuple2<Integer, String>> out) throws Exception {\n                Iterator<Tuple2<Integer, String>> it = values.iterator();\n                while (it.hasNext()){\n                    Tuple2<Integer, String> next = it.next();\n                    System.out.println("当前线程id："+Thread.currentThread().getId()+","+next);\n                }\n            }\n        }).print();*/\n\n\n        text.partitionByRange(0).mapPartition(new MapPartitionFunction<Tuple2<Integer,String>, Tuple2<Integer,String>>() {\n            @Override\n            public void mapPartition(Iterable<Tuple2<Integer, String>> values, Collector<Tuple2<Integer, String>> out) throws Exception {\n                Iterator<Tuple2<Integer, String>> it = values.iterator();\n                while (it.hasNext()){\n                    Tuple2<Integer, String> next = it.next();\n                    System.out.println("当前线程id："+Thread.currentThread().getId()+","+next);\n                }\n\n            }\n        }).print();\n\n\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br")])]),a("h3",{attrs:{id:"_9-3-sink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-sink"}},[n._v("#")]),n._v(" 9.3  sink")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("writeAsText()：")]),n._v(" "),a("p",[n._v("​\t将元素以字符串形式逐行写入，这些字符串通过调用每个元素的toString()方法来获取")])]),n._v(" "),a("li",[a("p",[n._v("writeAsCsv()：")]),n._v(" "),a("p",[n._v("​\t将元组以逗号分隔写入文件中，行及字段之间的分隔是可配置的。每个字段的值来自对象的toString()方法")])]),n._v(" "),a("li",[a("p",[n._v("print()：")]),n._v(" "),a("p",[n._v("​\t打印每个元素的toString()方法的值到标准输出或者标准错误输出流中")])])]),n._v(" "),a("h3",{attrs:{id:"_9-4-flink之广播变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-flink之广播变量"}},[n._v("#")]),n._v(" 9.4  Flink之广播变量")]),n._v(" "),a("p",[n._v("​\t\t广播变量允许编程人员在每台机器上保持1个只读的缓存变量，而不是传送变量的副本给tasks\n​\t\t广播变量创建后，它可以运行在集群中的任何function上，而不需要多次传递给集群节点。另外需要记住，不应该修改广播变量，这样才能确保每个节点获取到的值都是一致的\n​\t\t一句话解释，可以理解为是一个公共的共享变量，我们可以把一个dataset 数据集广播出去，然后不同的task在节点上都能够获取到，这个数据在每个节点上只会存在一份。如果不使用broadcast，则在每个节点中的每个task中都需要拷贝一份dataset数据集，比较浪费内存(也就是一个节点中可能会存在多份dataset数据)。\n用法")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('# 1：初始化数据\nDataSet<Integer> toBroadcast = env.fromElements(1, 2, 3)\n# 2：广播数据\n.withBroadcastSet(toBroadcast, "broadcastSetName");\n# 3：获取数据\nCollection<Integer> broadcastSet = getRuntimeContext().getBroadcastVariable("broadcastSetName");\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br")])]),a("p",[n._v("注意：\n1：广播出去的变量存在于每个节点的内存中，所以这个数据集不能太大。因为广播出去的数据，会常驻内存，除非程序执行结束\n2：广播变量在初始化广播出去以后不支持修改，这样才能保证每个节点的数据都是一致的。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * broadcast广播变量\n * 需求：\n *  flink会从数据源中获取到用户的姓名\n *  最终需要把用户的姓名和年龄信息打印出来\n *  分析：\n *  所以就需要在中间的map处理的时候获取用户的年龄信息\n *  建议吧用户的关系数据集使用广播变量进行处理\n *\n */\npublic class BroadCastDemo {\n    public static void main(String[] args) throws Exception{\n\n        //获取运行环境\n        ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n        //1：准备需要广播的数据\n        ArrayList<Tuple2<String, Integer>> broadData = new ArrayList<>();\n        broadData.add(new Tuple2<>("zs",18));\n        broadData.add(new Tuple2<>("ls",20));\n        broadData.add(new Tuple2<>("ww",17));\n        DataSet<Tuple2<String, Integer>> tupleData = env.fromCollection(broadData);\n\n        //1.1:处理需要广播的数据,把数据集转换成map类型，map中的key就是用户姓名，value就是用户年龄\n        DataSet<HashMap<String, Integer>> toBroadcast = tupleData.map(new MapFunction<Tuple2<String, Integer>, HashMap<String, Integer>>() {\n            @Override\n            public HashMap<String, Integer> map(Tuple2<String, Integer> value) throws Exception {\n                HashMap<String, Integer> res = new HashMap<>();\n                res.put(value.f0, value.f1);\n                return res;\n            }\n        });\n        //源数据\n        DataSource<String> data = env.fromElements("zs", "ls", "ww");\n        //注意：在这里需要使用到RichMapFunction获取广播变量\n        DataSet<String> result = data.map(new RichMapFunction<String, String>() {\n            List<HashMap<String, Integer>> broadCastMap = new ArrayList<HashMap<String, Integer>>();\n            HashMap<String, Integer> allMap = new HashMap<String, Integer>();\n\n            /**\n             * 这个方法只会执行一次\n             * 可以在这里实现一些初始化的功能\n             * 所以，就可以在open方法中获取广播变量数据\n             */\n            @Override\n            public void open(Configuration parameters) throws Exception {\n                super.open(parameters);\n                //3:获取广播数据\n                this.broadCastMap = getRuntimeContext().getBroadcastVariable("broadCastMapName");\n                for (HashMap map : broadCastMap) {\n                    allMap.putAll(map);\n                }\n            }\n            @Override\n            public String map(String value) throws Exception {\n                Integer age = allMap.get(value);\n                return value + "," + age;\n            }\n        }).withBroadcastSet(toBroadcast, "broadCastMapName");//2：执行广播数据的操作\n        result.print();\n    }\n\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br")])]),a("h3",{attrs:{id:"_9-5-flink之counter-计数器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-5-flink之counter-计数器"}},[n._v("#")]),n._v(" 9.5 Flink之Counter（计数器）")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('Accumulator即累加器，与Mapreduce counter的应用场景差不多，都能很好地观察task在运行期间的数据变化\n可以在Flink job任务中的算子函数中操作累加器，但是只能在任务执行结束之后才能获得累加器的最终结果。\nCounter是一个具体的累加器(Accumulator)实现\nIntCounter, LongCounter 和 DoubleCounter\n用法\n1：创建累加器\nprivate IntCounter numLines = new IntCounter(); \n2：注册累加器\ngetRuntimeContext().addAccumulator("num-lines", this.numLines);\n3：使用累加器\nthis.numLines.add(1); \n4：获取累加器的结果\nmyJobExecutionResult.getAccumulatorResult("num-lines")\n\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 计数器\n */\npublic class CounterDemo {\n    public static void main(String[] args) throws Exception{\n        //获取运行环境\n        ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n        DataSource<String> data = env.fromElements("a", "b", "c", "d");\n        DataSet<String> result = data.map(new RichMapFunction<String, String>() {\n\n            //1:创建累加器\n            private IntCounter numLines = new IntCounter();\n            @Override\n            public void open(Configuration parameters) throws Exception {\n                super.open(parameters);\n                //2:注册累加器\n                getRuntimeContext().addAccumulator("num-lines",this.numLines);\n\n            }\n            //int sum = 0;\n            @Override\n            public String map(String value) throws Exception {\n                //如果并行度为1，使用普通的累加求和即可，但是设置多个并行度，则普通的累加求和结果就不准了\n                //sum++;\n                //System.out.println("sum："+sum);\n                this.numLines.add(1);\n                return value;\n            }\n        }).setParallelism(8);\n        //如果要获取counter的值，只能是任务\n        //result.print();\n        result.writeAsText("d:\\\\data\\\\mycounter");\n        JobExecutionResult jobResult = env.execute("counter");\n        //3：获取累加器\n        int num = jobResult.getAccumulatorResult("num-lines");\n        System.out.println("num:"+num);\n\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br")])]),a("h3",{attrs:{id:"flink思维导图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flink思维导图"}},[n._v("#")]),n._v(" Flink思维导图")]),n._v(" "),a("p",[n._v("flink学习思维导图")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231616009.png",alt:"画布 1"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);