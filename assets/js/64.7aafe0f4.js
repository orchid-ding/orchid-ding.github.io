(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{549:function(n,s,e){"use strict";e.r(s);var a=e(19),t=Object(a.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"_1-state"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-state"}},[n._v("#")]),n._v(" 1 State")]),n._v(" "),e("h3",{attrs:{id:"_1-1-state概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-state概述"}},[n._v("#")]),n._v(" 1.1 state概述")]),n._v(" "),e("p",[e("strong",[n._v("Apache Flink® — Stateful Computations over Data Streams")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n * 单词计数\n */\npublic class WordCount {\n    public static void main(String[] args) throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        DataStreamSource<String> data = env.socketTextStream("localhost", 8888);\n        SingleOutputStreamOperator<Tuple2<String, Integer>> result = data.flatMap(new FlatMapFunction<String, Tuple2<String, Integer>>() {\n            @Override\n            public void flatMap(String line, Collector<Tuple2<String, Integer>> collector) throws Exception {\n                String[] fields = line.split(",");\n                for (String word : fields) {\n                    collector.collect(new Tuple2<>(word, 1));\n                }\n            }\n        }).keyBy("0")\n                .sum(1);\n\n        result.print();\n\n        env.execute("WordCount");\n    }\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br")])]),e("p",[n._v("输入")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("hadoop,hadoop\nhadoop\nhive,hadoop \n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br")])]),e("p",[n._v("输出")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("4> (hadoop,1)\n4> (hadoop,2)\n4> (hadoop,3)\n1> (hive,1)\n4> (hadoop,4)\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("p",[n._v("我们会发现，单词出现的次数有累计的效果。如果没有状态的管理，是不会有累计的效果的，所以Flink里面还有state的概念。")]),n._v(" "),e("p",[e("img",{attrs:{src:"D:%5Cdocument%5Cflink%5C20200209_flink3_%E8%AF%BE%E4%BB%B6%5C20200209_flink3_%E8%AF%BE%E4%BB%B6%5C%E7%AC%AC%E4%B8%89%E5%A4%A9%5Cassets%5CState.png",alt:"State"}})]),n._v(" "),e("p",[e("strong",[n._v("state")]),n._v("：一般指一个具体的task/operator的状态。State可以被记录，在失败的情况下数据还可以恢复，Flink中有两种基本类型的State：Keyed State，Operator State，他们两种都可以以两种形式存在：原始状态(raw state)和托管状态(managed state)\n"),e("strong",[n._v("托管状态")]),n._v("：由Flink框架管理的状态，我们通常使用的就是这种。\n"),e("strong",[n._v("原始状态")]),n._v("：由用户自行管理状态具体的数据结构，框架在做checkpoint的时候，使用byte[]来读写状态内容，对其内部数据结构一无所知。通常在DataStream上的状态推荐使用托管的状态，当实现一个用户自定义的operator时，"),e("strong",[n._v("会使用到原始状态")]),n._v("。但是我们工作中一般不常用，所以我们不考虑他。")]),n._v(" "),e("h3",{attrs:{id:"_1-2-state类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-state类型"}},[n._v("#")]),n._v(" 1.2 State类型")]),n._v(" "),e("h4",{attrs:{id:"_1-2-1-operator-state"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-operator-state"}},[n._v("#")]),n._v(" 1.2.1 Operator State")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231604483.png",alt:"Operator State"}})]),n._v(" "),e("ol",[e("li",[e("p",[n._v("operator state是task级别的state，说白了就是每个task对应一个state")])]),n._v(" "),e("li",[e("p",[n._v("Kafka Connector source中的每个分区（task）都需要记录消费的topic的partition和offset等信息。")])]),n._v(" "),e("li",[e("p",[n._v("operator state 只有一种托管状态：")]),n._v(" "),e("p",[n._v("​\t"),e("code",[n._v("ValueState")])])])]),n._v(" "),e("h4",{attrs:{id:"_1-2-2-keyed-state"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-keyed-state"}},[n._v("#")]),n._v(" 1.2.2 Keyed State")]),n._v(" "),e("p",[n._v("![Keyed State](D:\\document\\flink\\20200209_flink3_课件\\20200209_flink3_课件\\第三天\\assets\\Keyed State-1573781173705.png)")]),n._v(" "),e("ol",[e("li",[n._v("keyed state 记录的是每个key的状态")]),n._v(" "),e("li",[n._v("Keyed state托管状态有六种类型：\n"),e("ol",[e("li",[n._v("ValueState")]),n._v(" "),e("li",[n._v("ListState")]),n._v(" "),e("li",[n._v("MapState")]),n._v(" "),e("li",[n._v("ReducingState")]),n._v(" "),e("li",[n._v("AggregatingState")]),n._v(" "),e("li",[n._v("FoldingState")])])])]),n._v(" "),e("h3",{attrs:{id:"_1-3-keyed-state的案例演示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-keyed-state的案例演示"}},[n._v("#")]),n._v(" 1.3 Keyed State的案例演示")]),n._v(" "),e("h4",{attrs:{id:"_1-3-1-valuestate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-valuestate"}},[n._v("#")]),n._v(" 1.3.1 ValueState")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n *  ValueState<T> ：这个状态为每一个 key 保存一个值\n *      value() 获取状态值\n *      update() 更新状态值\n *      clear() 清除状态\n */\npublic class CountWindowAverageWithValueState\n        extends RichFlatMapFunction<Tuple2<Long, Long>, Tuple2<Long, Double>> {\n    // 用以保存每个 key 出现的次数，以及这个 key 对应的 value 的总值\n    // managed keyed state\n    //1. ValueState 保存的是对应的一个 key 的一个状态值\n    private ValueState<Tuple2<Long, Long>> countAndSum;\n\n    @Override\n    public void open(Configuration parameters) throws Exception {\n        // 注册状态\n        ValueStateDescriptor<Tuple2<Long, Long>> descriptor =\n                new ValueStateDescriptor<Tuple2<Long, Long>>(\n                        "average",  // 状态的名字\n                        Types.TUPLE(Types.LONG, Types.LONG)); // 状态存储的数据类型\n        countAndSum = getRuntimeContext().getState(descriptor);\n    }\n\n    @Override\n    public void flatMap(Tuple2<Long, Long> element,\n                        Collector<Tuple2<Long, Double>> out) throws Exception {\n        // 拿到当前的 key 的状态值\n        Tuple2<Long, Long> currentState = countAndSum.value();\n\n        // 如果状态值还没有初始化，则初始化\n        if (currentState == null) {\n            currentState = Tuple2.of(0L, 0L);\n        }\n\n        // 更新状态值中的元素的个数\n        currentState.f0 += 1;\n\n        // 更新状态值中的总值\n        currentState.f1 += element.f1;\n\n        // 更新状态\n        countAndSum.update(currentState);\n\n        // 判断，如果当前的 key 出现了 3 次，则需要计算平均值，并且输出\n        if (currentState.f0 >= 3) {\n            double avg = (double)currentState.f1 / currentState.f0;\n            // 输出 key 及其对应的平均值\n            out.collect(Tuple2.of(element.f0, avg));\n            //  清空状态值\n            countAndSum.clear();\n        }\n    }\n}\n\n\n\n\n/**\n * 需求：当接收到的相同 key 的元素个数等于 3 个\n *  就计算这些元素的 value 的平均值。\n *  计算 keyed stream 中每 3 个元素的 value 的平均值\n */\npublic class TestKeyedStateMain {\n    public static void main(String[] args) throws  Exception{\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n\n        DataStreamSource<Tuple2<Long, Long>> dataStreamSource =\n                env.fromElements(Tuple2.of(1L, 3L), Tuple2.of(1L, 5L), Tuple2.of(1L, 7L),\n                        Tuple2.of(2L, 4L), Tuple2.of(2L, 2L), Tuple2.of(2L, 5L));\n\n        // 输出：\n        //(1,5.0)\n        //(2,3.6666666666666665)\n        dataStreamSource\n                .keyBy(0)\n                .flatMap(new CountWindowAverageWithValueState())\n                .print();\n\n        env.execute("TestStatefulApi");\n    }\n}\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br"),e("span",{staticClass:"line-number"},[n._v("61")]),e("br"),e("span",{staticClass:"line-number"},[n._v("62")]),e("br"),e("span",{staticClass:"line-number"},[n._v("63")]),e("br"),e("span",{staticClass:"line-number"},[n._v("64")]),e("br"),e("span",{staticClass:"line-number"},[n._v("65")]),e("br"),e("span",{staticClass:"line-number"},[n._v("66")]),e("br"),e("span",{staticClass:"line-number"},[n._v("67")]),e("br"),e("span",{staticClass:"line-number"},[n._v("68")]),e("br"),e("span",{staticClass:"line-number"},[n._v("69")]),e("br"),e("span",{staticClass:"line-number"},[n._v("70")]),e("br"),e("span",{staticClass:"line-number"},[n._v("71")]),e("br"),e("span",{staticClass:"line-number"},[n._v("72")]),e("br"),e("span",{staticClass:"line-number"},[n._v("73")]),e("br"),e("span",{staticClass:"line-number"},[n._v("74")]),e("br"),e("span",{staticClass:"line-number"},[n._v("75")]),e("br"),e("span",{staticClass:"line-number"},[n._v("76")]),e("br"),e("span",{staticClass:"line-number"},[n._v("77")]),e("br"),e("span",{staticClass:"line-number"},[n._v("78")]),e("br"),e("span",{staticClass:"line-number"},[n._v("79")]),e("br"),e("span",{staticClass:"line-number"},[n._v("80")]),e("br"),e("span",{staticClass:"line-number"},[n._v("81")]),e("br"),e("span",{staticClass:"line-number"},[n._v("82")]),e("br")])]),e("p",[n._v("结果输出：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("3> (1,5.0)\n4> (2,3.6666666666666665)\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br")])]),e("h4",{attrs:{id:"_1-3-2-liststate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-liststate"}},[n._v("#")]),n._v(" 1.3.2 ListState")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n *  ListState<T> ：这个状态为每一个 key 保存集合的值\n *      get() 获取状态值\n *      add() / addAll() 更新状态值，将数据放到状态中\n *      clear() 清除状态\n */\npublic class CountWindowAverageWithListState\n        extends RichFlatMapFunction<Tuple2<Long, Long>, Tuple2<Long, Double>> {\n    // managed keyed state\n    //1. ListState 保存的是对应的一个 key 的出现的所有的元素\n    private ListState<Tuple2<Long, Long>> elementsByKey;\n\n    @Override\n    public void open(Configuration parameters) throws Exception {\n        // 注册状态\n        ListStateDescriptor<Tuple2<Long, Long>> descriptor =\n                new ListStateDescriptor<Tuple2<Long, Long>>(\n                        "average",  // 状态的名字\n                        Types.TUPLE(Types.LONG, Types.LONG)); // 状态存储的数据类型\n        elementsByKey = getRuntimeContext().getListState(descriptor);\n    }\n\n    @Override\n    public void flatMap(Tuple2<Long, Long> element,\n                        Collector<Tuple2<Long, Double>> out) throws Exception {\n        // 拿到当前的 key 的状态值\n        Iterable<Tuple2<Long, Long>> currentState = elementsByKey.get();\n\n        // 如果状态值还没有初始化，则初始化\n        if (currentState == null) {\n            elementsByKey.addAll(Collections.emptyList());\n        }\n\n        // 更新状态\n        elementsByKey.add(element);\n\n        // 判断，如果当前的 key 出现了 3 次，则需要计算平均值，并且输出\n        List<Tuple2<Long, Long>> allElements = Lists.newArrayList(elementsByKey.get());\n        if (allElements.size() >= 3) {\n            long count = 0;\n            long sum = 0;\n            for (Tuple2<Long, Long> ele : allElements) {\n                count++;\n                sum += ele.f1;\n            }\n            double avg = (double) sum / count;\n            out.collect(Tuple2.of(element.f0, avg));\n\n            // 清除状态\n            elementsByKey.clear();\n        }\n    }\n}\n\n\n/**\n * 需求：当接收到的相同 key 的元素个数等于 3 个或者超过 3 个的时候\n *  就计算这些元素的 value 的平均值。\n *  计算 keyed stream 中每 3 个元素的 value 的平均值\n */\npublic class TestKeyedStateMain {\n    public static void main(String[] args) throws  Exception{\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n\n        DataStreamSource<Tuple2<Long, Long>> dataStreamSource =\n                env.fromElements(Tuple2.of(1L, 3L), Tuple2.of(1L, 5L), Tuple2.of(1L, 7L),\n                        Tuple2.of(2L, 4L), Tuple2.of(2L, 2L), Tuple2.of(2L, 5L));\n\n        // 输出：\n        //(1,5.0)\n        //(2,3.6666666666666665)\n        dataStreamSource\n                .keyBy(0)\n                .flatMap(new CountWindowAverageWithListState())\n                .print();\n\n        env.execute("TestStatefulApi");\n    }\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br"),e("span",{staticClass:"line-number"},[n._v("61")]),e("br"),e("span",{staticClass:"line-number"},[n._v("62")]),e("br"),e("span",{staticClass:"line-number"},[n._v("63")]),e("br"),e("span",{staticClass:"line-number"},[n._v("64")]),e("br"),e("span",{staticClass:"line-number"},[n._v("65")]),e("br"),e("span",{staticClass:"line-number"},[n._v("66")]),e("br"),e("span",{staticClass:"line-number"},[n._v("67")]),e("br"),e("span",{staticClass:"line-number"},[n._v("68")]),e("br"),e("span",{staticClass:"line-number"},[n._v("69")]),e("br"),e("span",{staticClass:"line-number"},[n._v("70")]),e("br"),e("span",{staticClass:"line-number"},[n._v("71")]),e("br"),e("span",{staticClass:"line-number"},[n._v("72")]),e("br"),e("span",{staticClass:"line-number"},[n._v("73")]),e("br"),e("span",{staticClass:"line-number"},[n._v("74")]),e("br"),e("span",{staticClass:"line-number"},[n._v("75")]),e("br"),e("span",{staticClass:"line-number"},[n._v("76")]),e("br"),e("span",{staticClass:"line-number"},[n._v("77")]),e("br"),e("span",{staticClass:"line-number"},[n._v("78")]),e("br"),e("span",{staticClass:"line-number"},[n._v("79")]),e("br")])]),e("p",[n._v("结果输出：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("3> (1,5.0)\n4> (2,3.6666666666666665)\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br")])]),e("h4",{attrs:{id:"_1-3-3-mapstate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-mapstate"}},[n._v("#")]),n._v(" 1.3.3 MapState")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n *  MapState<K, V> ：这个状态为每一个 key 保存一个 Map 集合\n *      put() 将对应的 key 的键值对放到状态中\n *      values() 拿到 MapState 中所有的 value\n *      clear() 清除状态\n */\npublic class CountWindowAverageWithMapState\n        extends RichFlatMapFunction<Tuple2<Long, Long>, Tuple2<Long, Double>> {\n    // managed keyed state\n    //1. MapState ：key 是一个唯一的值，value 是接收到的相同的 key 对应的 value 的值\n    private MapState<String, Long> mapState;\n\n    @Override\n    public void open(Configuration parameters) throws Exception {\n        // 注册状态\n        MapStateDescriptor<String, Long> descriptor =\n                new MapStateDescriptor<String, Long>(\n                        "average",  // 状态的名字\n                        String.class, Long.class); // 状态存储的数据类型\n        mapState = getRuntimeContext().getMapState(descriptor);\n    }\n\n    @Override\n    public void flatMap(Tuple2<Long, Long> element,\n                        Collector<Tuple2<Long, Double>> out) throws Exception {\n        mapState.put(UUID.randomUUID().toString(), element.f1);\n\n        // 判断，如果当前的 key 出现了 3 次，则需要计算平均值，并且输出\n        List<Long> allElements = Lists.newArrayList(mapState.values());\n        if (allElements.size() >= 3) {\n            long count = 0;\n            long sum = 0;\n            for (Long ele : allElements) {\n                count++;\n                sum += ele;\n            }\n            double avg = (double) sum / count;\n            out.collect(Tuple2.of(element.f0, avg));\n\n            // 清除状态\n            mapState.clear();\n        }\n    }\n}\n\n\n/**\n * 需求：当接收到的相同 key 的元素个数等于 3 个或者超过 3 个的时候\n *  就计算这些元素的 value 的平均值。\n *  计算 keyed stream 中每 3 个元素的 value 的平均值\n */\npublic class TestKeyedStateMain {\n    public static void main(String[] args) throws  Exception{\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n\n        DataStreamSource<Tuple2<Long, Long>> dataStreamSource =\n                env.fromElements(Tuple2.of(1L, 3L), Tuple2.of(1L, 5L), Tuple2.of(1L, 7L),\n                        Tuple2.of(2L, 4L), Tuple2.of(2L, 2L), Tuple2.of(2L, 5L));\n\n        // 输出：\n        //(1,5.0)\n        //(2,3.6666666666666665)\n        dataStreamSource\n                .keyBy(0)\n                .flatMap(new CountWindowAverageWithMapState())\n                .print();\n\n        env.execute("TestStatefulApi");\n    }\n}\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br"),e("span",{staticClass:"line-number"},[n._v("61")]),e("br"),e("span",{staticClass:"line-number"},[n._v("62")]),e("br"),e("span",{staticClass:"line-number"},[n._v("63")]),e("br"),e("span",{staticClass:"line-number"},[n._v("64")]),e("br"),e("span",{staticClass:"line-number"},[n._v("65")]),e("br"),e("span",{staticClass:"line-number"},[n._v("66")]),e("br"),e("span",{staticClass:"line-number"},[n._v("67")]),e("br"),e("span",{staticClass:"line-number"},[n._v("68")]),e("br"),e("span",{staticClass:"line-number"},[n._v("69")]),e("br"),e("span",{staticClass:"line-number"},[n._v("70")]),e("br"),e("span",{staticClass:"line-number"},[n._v("71")]),e("br")])]),e("p",[n._v("输出结果：")]),n._v(" "),e("p",[n._v("4> (2,3.6666666666666665)\n3> (1,5.0)")]),n._v(" "),e("h4",{attrs:{id:"_1-3-4-reducingstate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4-reducingstate"}},[n._v("#")]),n._v(" 1.3.4 ReducingState")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n *  ReducingState<T> ：这个状态为每一个 key 保存一个聚合之后的值\n *      get() 获取状态值\n *      add()  更新状态值，将数据放到状态中\n *      clear() 清除状态\n */\npublic class SumFunction\n        extends RichFlatMapFunction<Tuple2<Long, Long>, Tuple2<Long, Long>> {\n    // managed keyed state\n    // 用于保存每一个 key 对应的 value 的总值\n    private ReducingState<Long> sumState;\n\n    @Override\n    public void open(Configuration parameters) throws Exception {\n        // 注册状态\n        ReducingStateDescriptor<Long> descriptor =\n                new ReducingStateDescriptor<Long>(\n                        "sum",  // 状态的名字\n                        new ReduceFunction<Long>() { // 聚合函数\n                            @Override\n                            public Long reduce(Long value1, Long value2) throws Exception {\n                                return value1 + value2;\n                            }\n                        }, Long.class); // 状态存储的数据类型\n        sumState = getRuntimeContext().getReducingState(descriptor);\n    }\n\n    @Override\n    public void flatMap(Tuple2<Long, Long> element,\n                        Collector<Tuple2<Long, Long>> out) throws Exception {\n        // 将数据放到状态中\n        sumState.add(element.f1);\n\n        out.collect(Tuple2.of(element.f0, sumState.get()));\n    }\n}\n\n\npublic class TestKeyedStateMain2 {\n    public static void main(String[] args) throws  Exception{\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n\n        DataStreamSource<Tuple2<Long, Long>> dataStreamSource =\n                env.fromElements(Tuple2.of(1L, 3L), Tuple2.of(1L, 5L), Tuple2.of(1L, 7L),\n                        Tuple2.of(2L, 4L), Tuple2.of(2L, 2L), Tuple2.of(2L, 5L));\n\n        // 输出：\n        //(1,5.0)\n        //(2,3.6666666666666665)\n        dataStreamSource\n                .keyBy(0)\n                .flatMap(new SumFunction())\n                .print();\n\n        env.execute("TestStatefulApi");\n    }\n}\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br")])]),e("p",[n._v("输出：")]),n._v(" "),e("p",[n._v("4> (2,4)\n4> (2,6)\n4> (2,11)\n3> (1,3)\n3> (1,8)\n3> (1,15)")]),n._v(" "),e("h4",{attrs:{id:"_1-3-5-aggregatingstate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-5-aggregatingstate"}},[n._v("#")]),n._v(" 1.3.5 AggregatingState")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('public class ContainsValueFunction\n        extends RichFlatMapFunction<Tuple2<Long, Long>, Tuple2<Long, String>> {\n\n    private AggregatingState<Long, String> totalStr;\n\n    @Override\n    public void open(Configuration parameters) throws Exception {\n        // 注册状态\n        AggregatingStateDescriptor<Long, String, String> descriptor =\n                new AggregatingStateDescriptor<Long, String, String>(\n                        "totalStr",  // 状态的名字\n                        new AggregateFunction<Long, String, String>() {\n                            @Override\n                            public String createAccumulator() {\n                                return "Contains：";\n                            }\n\n                            @Override\n                            public String add(Long value, String accumulator) {\n                                if ("Contains：".equals(accumulator)) {\n                                    return accumulator + value;\n                                }\n                                return accumulator + " and " + value;\n                            }\n\n                            @Override\n                            public String getResult(String accumulator) {\n                                return accumulator;\n                            }\n\n                            @Override\n                            public String merge(String a, String b) {\n                                return a + " and " + b;\n                            }\n                        }, String.class); // 状态存储的数据类型\n        totalStr = getRuntimeContext().getAggregatingState(descriptor);\n    }\n\n    @Override\n    public void flatMap(Tuple2<Long, Long> element,\n                        Collector<Tuple2<Long, String>> out) throws Exception {\n        totalStr.add(element.f1);\n        out.collect(Tuple2.of(element.f0, totalStr.get()));\n    }\n}\n\n\n\npublic class TestKeyedStateMain2 {\n    public static void main(String[] args) throws  Exception{\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n\n        DataStreamSource<Tuple2<Long, Long>> dataStreamSource =\n                env.fromElements(Tuple2.of(1L, 3L), Tuple2.of(1L, 5L), Tuple2.of(1L, 7L),\n                        Tuple2.of(2L, 4L), Tuple2.of(2L, 2L), Tuple2.of(2L, 5L));\n\n   \n        dataStreamSource\n                .keyBy(0)\n                .flatMap(new ContainsValueFunction())\n                .print();\n\n        env.execute("TestStatefulApi");\n    }\n}\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br"),e("span",{staticClass:"line-number"},[n._v("61")]),e("br"),e("span",{staticClass:"line-number"},[n._v("62")]),e("br"),e("span",{staticClass:"line-number"},[n._v("63")]),e("br"),e("span",{staticClass:"line-number"},[n._v("64")]),e("br"),e("span",{staticClass:"line-number"},[n._v("65")]),e("br"),e("span",{staticClass:"line-number"},[n._v("66")]),e("br")])]),e("p",[n._v("输出：")]),n._v(" "),e("p",[n._v("4> (2,Contains：4)\n3> (1,Contains：3)\n3> (1,Contains：3 and 5)\n3> (1,Contains：3 and 5 and 7)\n4> (2,Contains：4 and 2)\n4> (2,Contains：4 and 2 and 5)")]),n._v(" "),e("h3",{attrs:{id:"_1-4-operator-state案例演示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-operator-state案例演示"}},[n._v("#")]),n._v(" 1.4  Operator State案例演示")]),n._v(" "),e("h4",{attrs:{id:"_1-4-1-liststate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-liststate"}},[n._v("#")]),n._v(" 1.4.1 ListState")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('public class CustomSink\n        implements SinkFunction<Tuple2<String, Integer>>, CheckpointedFunction {\n\n    // 用于缓存结果数据的\n    private List<Tuple2<String, Integer>> bufferElements;\n    // 表示内存中数据的大小阈值\n    private int threshold;\n    // 用于保存内存中的状态信息\n    private ListState<Tuple2<String, Integer>> checkpointState;\n    // StateBackend\n    // checkpoint\n\n    public CustomSink(int threshold) {\n        this.threshold = threshold;\n        this.bufferElements = new ArrayList<>();\n    }\n\n    @Override\n    public void invoke(Tuple2<String, Integer> value, Context context) throws Exception {\n        // 可以将接收到的每一条数据保存到任何的存储系统中\n        bufferElements.add(value);\n        if (bufferElements.size() == threshold) {\n            // 简单打印\n            System.out.println("自定义格式：" + bufferElements);\n            bufferElements.clear();\n        }\n    }\n\n    // 用于将内存中数据保存到状态中\n    @Override\n    public void snapshotState(FunctionSnapshotContext context) throws Exception {\n        checkpointState.clear();\n        for (Tuple2<String, Integer> ele : bufferElements) {\n            checkpointState.add(ele);\n        }\n    }\n    // 用于在程序挥发的时候从状态中恢复数据到内存\n    @Override\n    public void initializeState(FunctionInitializationContext context) throws Exception {\n        ListStateDescriptor<Tuple2<String, Integer>> descriptor =\n                new ListStateDescriptor<Tuple2<String, Integer>>(\n                        "bufferd -elements",\n                        TypeInformation.of(new TypeHint<Tuple2<String, Integer>>() {}));\n        // 注册一个 operator state\n        checkpointState = context.getOperatorStateStore().getListState(descriptor);\n\n        if (context.isRestored()) {\n            for (Tuple2<String, Integer> ele : checkpointState.get()) {\n                bufferElements.add(ele);\n            }\n        }\n    }\n}\n\n\n/**\n * 需求: 每两条数据打印一次结果\n */\npublic class TestOperatorStateMain {\n    public static void main(String[] args) throws  Exception{\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n\n        DataStreamSource<Tuple2<String, Integer>> dataStreamSource =\n                env.fromElements(Tuple2.of("Spark", 3), Tuple2.of("Hadoop", 5), Tuple2.of("Hadoop", 7),\n                        Tuple2.of("Spark", 4));\n\n        // 输出：\n        //(1,5.0)\n        //(2,3.6666666666666665)\n        dataStreamSource\n                .addSink(new CustomSink(2)).setParallelism(1);\n\n        env.execute("TestStatefulApi");\n    }\n}\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br"),e("span",{staticClass:"line-number"},[n._v("61")]),e("br"),e("span",{staticClass:"line-number"},[n._v("62")]),e("br"),e("span",{staticClass:"line-number"},[n._v("63")]),e("br"),e("span",{staticClass:"line-number"},[n._v("64")]),e("br"),e("span",{staticClass:"line-number"},[n._v("65")]),e("br"),e("span",{staticClass:"line-number"},[n._v("66")]),e("br"),e("span",{staticClass:"line-number"},[n._v("67")]),e("br"),e("span",{staticClass:"line-number"},[n._v("68")]),e("br"),e("span",{staticClass:"line-number"},[n._v("69")]),e("br"),e("span",{staticClass:"line-number"},[n._v("70")]),e("br"),e("span",{staticClass:"line-number"},[n._v("71")]),e("br"),e("span",{staticClass:"line-number"},[n._v("72")]),e("br"),e("span",{staticClass:"line-number"},[n._v("73")]),e("br"),e("span",{staticClass:"line-number"},[n._v("74")]),e("br"),e("span",{staticClass:"line-number"},[n._v("75")]),e("br"),e("span",{staticClass:"line-number"},[n._v("76")]),e("br")])]),e("p",[n._v("输出结果：")]),n._v(" "),e("p",[n._v("自定义格式：[(Spark,3), (Hadoop,5)]\n自定义格式：[(Hadoop,7), (Spark,4)]")]),n._v(" "),e("h3",{attrs:{id:"_1-5-keyedstate-案例演示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-keyedstate-案例演示"}},[n._v("#")]),n._v(" 1.5 KeyedState 案例演示")]),n._v(" "),e("p",[n._v("需求：将两个流中，订单号一样的数据合并在一起输出")]),n._v(" "),e("p",[n._v("orderinfo1数据")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("123,拖把,30.0\n234,牙膏,20.0\n345,被子,114.4\n333,杯子,112.2\n444,Mac电脑,30000.0\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("p",[n._v("orderinfo2数据")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("123,2019-11-11 10:11:12,江苏\n234,2019-11-11 11:11:13,云南\n345,2019-11-11 12:11:14,安徽\n333,2019-11-11 13:11:15,北京\n444,2019-11-11 14:11:16,深圳\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("p",[n._v("代码实现：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('public class Constants {\n    public static final String ORDER_INFO1_PATH="D:\\\\kfly\\\\flinklesson\\\\src\\\\main\\\\input\\\\OrderInfo1.txt";\n    public static final String ORDER_INFO2_PATH="D:\\\\kfly\\\\flinklesson\\\\src\\\\main\\\\input\\\\OrderInfo2.txt";\n}\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('public class OrderInfo1 {\n    //订单ID\n    private Long orderId;\n    //商品名称\n    private String productName;\n    //价格\n    private Double price;\n\n   public OrderInfo1(){\n\n   }\n\n   public OrderInfo1(Long orderId,String productName,Double price){\n       this.orderId=orderId;\n       this.productName=productName;\n       this.price=price;\n   }\n\n    @Override\n    public String toString() {\n        return "OrderInfo1{" +\n                "orderId=" + orderId +\n                ", productName=\'" + productName + \'\\\'\' +\n                ", price=" + price +\n                \'}\';\n    }\n\n    public Long getOrderId() {\n        return orderId;\n    }\n\n    public void setOrderId(Long orderId) {\n        this.orderId = orderId;\n    }\n\n    public String getProductName() {\n        return productName;\n    }\n\n    public void setProductName(String productName) {\n        this.productName = productName;\n    }\n\n    public Double getPrice() {\n        return price;\n    }\n\n    public void setPrice(Double price) {\n        this.price = price;\n    }\n\n    public static OrderInfo1 string2OrderInfo1(String line){\n        OrderInfo1 orderInfo1 = new OrderInfo1();\n        if(line != null && line.length() > 0){\n           String[] fields = line.split(",");\n            orderInfo1.setOrderId(Long.parseLong(fields[0]));\n            orderInfo1.setProductName(fields[1]);\n            orderInfo1.setPrice(Double.parseDouble(fields[2]));\n       }\n       return orderInfo1;\n    }\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br"),e("span",{staticClass:"line-number"},[n._v("61")]),e("br"),e("span",{staticClass:"line-number"},[n._v("62")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("public class OrderInfo2 {\n    //订单ID\n    private Long orderId;\n    //下单时间\n    private String orderDate;\n    //下单地址\n    private String address;\n\n    public OrderInfo2(){\n\n    }\n    public OrderInfo2(Long orderId,String orderDate,String address){\n        this.orderId = orderId;\n        this.orderDate = orderDate;\n        this.address = address;\n    }\n\n    @Override\n    public String toString() {\n        return \"OrderInfo2{\" +\n                \"orderId=\" + orderId +\n                \", orderDate='\" + orderDate + '\\'' +\n                \", address='\" + address + '\\'' +\n                '}';\n    }\n\n    public Long getOrderId() {\n        return orderId;\n    }\n\n    public void setOrderId(Long orderId) {\n        this.orderId = orderId;\n    }\n\n    public String getOrderDate() {\n        return orderDate;\n    }\n\n    public void setOrderDate(String orderDate) {\n        this.orderDate = orderDate;\n    }\n\n    public String getAddress() {\n        return address;\n    }\n\n    public void setAddress(String address) {\n        this.address = address;\n    }\n\n\n    public static OrderInfo2 string2OrderInfo2(String line){\n        OrderInfo2 orderInfo2 = new OrderInfo2();\n        if(line != null && line.length() > 0){\n            String[] fields = line.split(\",\");\n            orderInfo2.setOrderId(Long.parseLong(fields[0]));\n            orderInfo2.setOrderDate(fields[1]);\n            orderInfo2.setAddress(fields[2]);\n        }\n\n        return orderInfo2;\n    }\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br"),e("span",{staticClass:"line-number"},[n._v("61")]),e("br"),e("span",{staticClass:"line-number"},[n._v("62")]),e("br"),e("span",{staticClass:"line-number"},[n._v("63")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("/**\n * 自定义source\n */\npublic class FileSource implements SourceFunction<String> {\n    //文件路径\n    public String filePath;\n    public FileSource(String filePath){\n        this.filePath = filePath;\n    }\n\n    private InputStream inputStream;\n    private BufferedReader reader;\n\n    private Random random = new Random();\n\n    @Override\n    public void run(SourceContext<String> ctx) throws Exception {\n\n           reader = new BufferedReader(new InputStreamReader(new FileInputStream(filePath)));\n           String line = null;\n           while ((line = reader.readLine()) != null) {\n               // 模拟发送数据\n               TimeUnit.MILLISECONDS.sleep(random.nextInt(500));\n               // 发送数据\n               ctx.collect(line);\n           }\n        if(reader != null){\n            reader.close();\n        }\n        if(inputStream != null){\n            inputStream.close();\n        }\n\n    }\n\n    @Override\n    public void cancel()  {\n      try{\n          if(reader != null){\n              reader.close();\n          }\n          if(inputStream != null){\n              inputStream.close();\n          }\n      }catch (Exception e){\n\n      }\n    }\n}\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('public class OrderStream {\n    public static void main(String[] args) throws  Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        DataStreamSource<String> info1 = env.addSource(new FileSource(Constants.ORDER_INFO1_PATH));\n        DataStreamSource<String> info2 = env.addSource(new FileSource(Constants.ORDER_INFO2_PATH));\n\n        KeyedStream<OrderInfo1, Long> orderInfo1Stream = info1.map(line -> string2OrderInfo1(line))\n                .keyBy(orderInfo1 -> orderInfo1.getOrderId());\n\n        KeyedStream<OrderInfo2, Long> orderInfo2Stream = info2.map(line -> string2OrderInfo2(line))\n                .keyBy(orderInfo2 -> orderInfo2.getOrderId());\n\n        orderInfo1Stream.connect(orderInfo2Stream)\n                .flatMap(new EnrichmentFunction())\n                .print();\n\n        env.execute("OrderStream");\n\n    }\n\n    /**\n     *   IN1, 第一个流的输入的数据类型 \n         IN2, 第二个流的输入的数据类型\n         OUT，输出的数据类型\n     */\n    public static class EnrichmentFunction extends\n            RichCoFlatMapFunction<OrderInfo1,OrderInfo2,Tuple2<OrderInfo1,OrderInfo2>>{\n\t\t//定义第一个流 key对应的state\n        private ValueState<OrderInfo1> orderInfo1State;\n        //定义第二个流 key对应的state\n        private ValueState<OrderInfo2> orderInfo2State;\n\n        @Override\n        public void open(Configuration parameters) {\n            orderInfo1State = getRuntimeContext()\n                    .getState(new ValueStateDescriptor<OrderInfo1>("info1", OrderInfo1.class));\n            orderInfo2State = getRuntimeContext()\n                    .getState(new ValueStateDescriptor<OrderInfo2>("info2",OrderInfo2.class));\n\n        }\n\n        @Override\n        public void flatMap1(OrderInfo1 orderInfo1, Collector<Tuple2<OrderInfo1, OrderInfo2>> out) throws Exception {\n            OrderInfo2 value2 = orderInfo2State.value();\n            if(value2 != null){\n                orderInfo2State.clear();\n                out.collect(Tuple2.of(orderInfo1,value2));\n            }else{\n                orderInfo1State.update(orderInfo1);\n            }\n\n        }\n\n        @Override\n        public void flatMap2(OrderInfo2 orderInfo2, Collector<Tuple2<OrderInfo1, OrderInfo2>> out)throws Exception {\n            OrderInfo1 value1 = orderInfo1State.value();\n            if(value1 != null){\n                orderInfo1State.clear();\n                out.collect(Tuple2.of(value1,orderInfo2));\n            }else{\n                orderInfo2State.update(orderInfo2);\n            }\n\n        }\n    }\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br"),e("span",{staticClass:"line-number"},[n._v("61")]),e("br"),e("span",{staticClass:"line-number"},[n._v("62")]),e("br"),e("span",{staticClass:"line-number"},[n._v("63")]),e("br"),e("span",{staticClass:"line-number"},[n._v("64")]),e("br"),e("span",{staticClass:"line-number"},[n._v("65")]),e("br"),e("span",{staticClass:"line-number"},[n._v("66")]),e("br")])]),e("h2",{attrs:{id:"_2-state-backend"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-state-backend"}},[n._v("#")]),n._v(" 2 State backend")]),n._v(" "),e("h3",{attrs:{id:"_2-1-概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-概述"}},[n._v("#")]),n._v(" 2.1 概述")]),n._v(" "),e("p",[n._v("Flink支持的StateBackend:")]),n._v(" "),e("ul",[e("li",[e("em",[n._v("MemoryStateBackend")])]),n._v(" "),e("li",[e("em",[n._v("FsStateBackend")])]),n._v(" "),e("li",[e("em",[n._v("RocksDBStateBackend")])])]),n._v(" "),e("h3",{attrs:{id:"_2-2-memorystatebackend"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-memorystatebackend"}},[n._v("#")]),n._v(" 2.2 MemoryStateBackend")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231558408.png",alt:"MemoryStateBackend"}})]),n._v(" "),e("p",[n._v("默认情况下，状态信息是存储在 TaskManager 的堆内存中的，c heckpoint 的时候将状态保存到 JobManager 的堆内存中。\n缺点：")]),n._v(" "),e("p",[n._v("​\t只能保存数据量小的状态")]),n._v(" "),e("p",[n._v("​\t状态数据有可能会丢失")]),n._v(" "),e("p",[n._v("优点：")]),n._v(" "),e("p",[n._v("​\t开发测试很方便")]),n._v(" "),e("h3",{attrs:{id:"_2-3-fsstatebackend"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-fsstatebackend"}},[n._v("#")]),n._v(" 2.3  FSStateBackend")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231606326.png",alt:"FSStateBackend"}})]),n._v(" "),e("p",[n._v("状态信息存储在 TaskManager 的堆内存中的，checkpoint 的时候将状态保存到指定的文件中 (HDFS 等文件系统)")]),n._v(" "),e("p",[n._v("缺点：\n状态大小受TaskManager内存限制(默认支持5M)\n优点：\n状态访问速度很快\n状态信息不会丢失\n用于： 生产，也可存储状态数据量大的情况")]),n._v(" "),e("h3",{attrs:{id:"_2-4-rocksdbstatebackend"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-rocksdbstatebackend"}},[n._v("#")]),n._v(" 2.4 RocksDBStateBackend")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231606228.png",alt:"RocksDBStateBackend"}})]),n._v(" "),e("p",[n._v("状态信息存储在 RocksDB 数据库 (key-value 的数据存储服务)， 最终保存在本地文件中\ncheckpoint 的时候将状态保存到指定的文件中 (HDFS 等文件系统)\n缺点：\n状态访问速度有所下降\n优点：\n可以存储超大量的状态信息\n状态信息不会丢失\n用于： 生产，可以存储超大量的状态信息")]),n._v(" "),e("h3",{attrs:{id:"_2-5-statebackend配置方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-statebackend配置方式"}},[n._v("#")]),n._v(" 2.5 StateBackend配置方式")]),n._v(" "),e("p",[n._v("（1）单任务调整")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('修改当前任务代码\nenv.setStateBackend(new FsStateBackend("hdfs://namenode:9000/flink/checkpoints"));\n或者new MemoryStateBackend()\n或者new RocksDBStateBackend(filebackend, true);【需要添加第三方依赖】\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("p",[n._v("（2）全局调整")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("修改flink-conf.yaml\nstate.backend: filesystem\nstate.checkpoints.dir: hdfs://namenode:9000/flink/checkpoints\n注意：state.backend的值可以是下面几种：jobmanager(MemoryStateBackend), filesystem(FsStateBackend), rocksdb(RocksDBStateBackend)\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("h2",{attrs:{id:"_3-checkpoint-容错"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-checkpoint-容错"}},[n._v("#")]),n._v(" 3 checkpoint(容错)")]),n._v(" "),e("h3",{attrs:{id:"_3-1-checkpoint概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-checkpoint概述"}},[n._v("#")]),n._v(" 3.1 checkpoint概述")]),n._v(" "),e("p",[n._v("（1）为了保证state的容错性，Flink需要对state进行checkpoint。\n（2）Checkpoint是Flink实现容错机制最核心的功能，它能够根据配置周期性地基于Stream中各个Operator/task的状态来生成快照，从而将这些状态数据定期持久化存储下来，当Flink程序一旦意外崩溃时，重新运行程序时可以有选择地从这些快照进行恢复，从而修正因为故障带来的程序数据异常\n（3）Flink的checkpoint机制可以与(stream和state)的持久化存储交互的前提：\n持久化的source，它需要支持在一定时间内重放事件。这种sources的典型例子是持久化的消息队列（比如Apache Kafka，RabbitMQ等）或文件系统（比如HDFS，S3，GFS等）\n用于state的持久化存储，例如分布式文件系统（比如HDFS，S3，GFS等）")]),n._v(" "),e("p",[n._v("生成快照。5s")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231606797.png",alt:"1569326195474"}})]),n._v(" "),e("p",[n._v("恢复快照")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231558388.png",alt:"1569326229867"}})]),n._v(" "),e("h3",{attrs:{id:"_3-2-checkpoint配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-checkpoint配置"}},[n._v("#")]),n._v(" 3.2  checkpoint配置")]),n._v(" "),e("p",[n._v("​\t\t默认checkpoint功能是disabled的，想要使用的时候需要先启用，checkpoint开启之后，checkPointMode有两种，Exactly-once和At-least-once，默认的checkPointMode是Exactly-once，Exactly-once对于大多数应用来说是最合适的。At-least-once可能用在某些延迟超低的应用程序（始终延迟为几毫秒）。")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("默认checkpoint功能是disabled的，想要使用的时候需要先启用\nStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n// 每隔1000 ms进行启动一个检查点【设置checkpoint的周期】\nenv.enableCheckpointing(1000);\n// 高级选项：\n// 设置模式为exactly-once （这是默认值）\nenv.getCheckpointConfig().setCheckpointingMode(CheckpointingMode.EXACTLY_ONCE);\n// 确保检查点之间有至少500 ms的间隔【checkpoint最小间隔】\nenv.getCheckpointConfig().setMinPauseBetweenCheckpoints(500);\n// 检查点必须在一分钟内完成，或者被丢弃【checkpoint的超时时间】\nenv.getCheckpointConfig().setCheckpointTimeout(60000);\n// 同一时间只允许进行一个检查点\nenv.getCheckpointConfig().setMaxConcurrentCheckpoints(1);\n// 表示一旦Flink处理程序被cancel后，会保留Checkpoint数据，以便根据实际需要恢复到指定的Checkpoint【详细解释见备注】\nenv.getCheckpointConfig().enableExternalizedCheckpoints(ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION);\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br")])]),e("h2",{attrs:{id:"_4-恢复数据-容错"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-恢复数据-容错"}},[n._v("#")]),n._v(" 4 恢复数据(容错)")]),n._v(" "),e("h3",{attrs:{id:"_4-1-重启策略概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-重启策略概述"}},[n._v("#")]),n._v(" 4.1 重启策略概述")]),n._v(" "),e("p",[n._v("​\t\tFlink支持不同的重启策略，以在故障发生时控制作业如何重启，集群在启动时会伴随一个默认的重启策略，在没有定义具体重启策略时会使用该默认策略。 如果在工作提交时指定了一个重启策略，该策略会覆盖集群的默认策略，默认的重启策略可以通过 Flink 的配置文件 flink-conf.yaml 指定。配置参数 restart-strategy 定义了哪个策略被使用。\n常用的重启策略\n（1）固定间隔 (Fixed delay)\n（2）失败率 (Failure rate)\n（3）无重启 (No restart)\n​\t\t如果没有启用 checkpointing，则使用无重启 (no restart) 策略。\n​\t\t如果启用了 checkpointing，但没有配置重启策略，则使用固定间隔 (fixed-delay) 策略， 尝试重启次数默认值是：Integer.MAX_VALUE，重启策略可以在flink-conf.yaml中配置，表示全局的配置。也可以在应用代码中动态指定，会覆盖全局配置。")]),n._v(" "),e("h3",{attrs:{id:"_4-2-重启策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-重启策略"}},[n._v("#")]),n._v(" 4.2 重启策略")]),n._v(" "),e("p",[n._v("固定间隔 (Fixed delay)")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("第一种：全局配置 flink-conf.yaml\nrestart-strategy: fixed-delay\nrestart-strategy.fixed-delay.attempts: 3\nrestart-strategy.fixed-delay.delay: 10 s\n第二种：应用代码设置\nenv.setRestartStrategy(RestartStrategies.fixedDelayRestart(\n  3, // 尝试重启的次数\n  Time.of(10, TimeUnit.SECONDS) // 间隔\n));\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br")])]),e("p",[n._v("失败率 (Failure rate)")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("第一种：全局配置 flink-conf.yaml\nrestart-strategy: failure-rate\nrestart-strategy.failure-rate.max-failures-per-interval: 3\nrestart-strategy.failure-rate.failure-rate-interval: 5 min\nrestart-strategy.failure-rate.delay: 10 s\n第二种：应用代码设置\nenv.setRestartStrategy(RestartStrategies.failureRateRestart(\n  3, // 一个时间段内的最大失败次数\n  Time.of(5, TimeUnit.MINUTES), // 衡量失败次数的是时间段\n  Time.of(10, TimeUnit.SECONDS) // 间隔\n));\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br")])]),e("p",[n._v("无重启 (No restart)")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("第一种：全局配置 flink-conf.yaml\nrestart-strategy: none\n第二种：应用代码设置\nenv.setRestartStrategy(RestartStrategies.noRestart());\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br")])]),e("h3",{attrs:{id:"_4-3-多checkpoint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-多checkpoint"}},[n._v("#")]),n._v(" 4.3 多checkpoint")]),n._v(" "),e("p",[n._v("默认情况下，如果设置了Checkpoint选项，则Flink只保留最近成功生成的1个Checkpoint，而当Flink程序失败时，可以从最近的这个Checkpoint来进行恢复。但是，如果我们希望保留多个Checkpoint，并能够根据实际需要选择其中一个进行恢复，这样会更加灵活，比如，我们发现最近4个小时数据记录处理有问题，希望将整个状态还原到4小时之前Flink可以支持保留多个Checkpoint，需要在Flink的配置文件conf/flink-conf.yaml中，添加如下配置，指定最多需要保存Checkpoint的个数：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("state.checkpoints.num-retained: 20\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br")])]),e("p",[n._v("这样设置以后就查看对应的Checkpoint在HDFS上存储的文件目录\nhdfs dfs -ls hdfs://namenode:9000/flink/checkpoints\n如果希望回退到某个Checkpoint点，只需要指定对应的某个Checkpoint路径即可实现")]),n._v(" "),e("h3",{attrs:{id:"_4-4-从checkpoint恢复数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-从checkpoint恢复数据"}},[n._v("#")]),n._v(" 4.4 从checkpoint恢复数据")]),n._v(" "),e("p",[n._v("如果Flink程序异常失败，或者最近一段时间内数据处理错误，我们可以将程序从某一个Checkpoint点进行恢复")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("bin/flink run -s hdfs://namenode:9000/flink/checkpoints/467e17d2cc343e6c56255d222bae3421/chk-56/_metadata flink-job.jar\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br")])]),e("p",[n._v("程序正常运行后，还会按照Checkpoint配置进行运行，继续生成Checkpoint数据。")]),n._v(" "),e("p",[n._v("当然恢复数据的方式还可以在自己的代码里面指定checkpoint目录，这样下一次启动的时候即使代码发生了改变就自动恢复数据了。")]),n._v(" "),e("h3",{attrs:{id:"_4-5-savepoint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-savepoint"}},[n._v("#")]),n._v(" 4.5 savepoint")]),n._v(" "),e("p",[n._v("Flink通过Savepoint功能可以做到程序升级后，继续从升级前的那个点开始执行计算，保证数据不中断\n全局，一致性快照。可以保存数据源offset，operator操作状态等信息，可以从应用在过去任意做了savepoint的时刻开始继续消费")]),n._v(" "),e("p",[n._v("checkPoint vs savePoint")]),n._v(" "),e("p",[e("strong",[n._v("checkPoint")]),n._v("\n应用定时触发，用于保存状态，会过期，内部应用失败重启的时候使用。\n"),e("strong",[n._v("savePoint")]),n._v("\n用户手动执行，是指向Checkpoint的指针，不会过期，在升级的情况下使用。\n注意：为了能够在作业的不同版本之间以及 Flink 的不同版本之间顺利升级，强烈推荐程序员通过 uid(String) 方法手动的给算子赋予 ID，这些 ID 将用于确定每一个算子的状态范围。如果不手动给各算子指定 ID，则会由 Flink 自动给每个算子生成一个 ID。只要这些 ID 没有改变就能从保存点（savepoint）将程序恢复回来。而这些自动生成的 ID 依赖于程序的结构，并且对代码的更改是很敏感的。因此，强烈建议用户手动的设置 ID。")]),n._v(" "),e("p",[n._v("savepoint的使用")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("1：在flink-conf.yaml中配置Savepoint存储位置\n不是必须设置，但是设置后，后面创建指定Job的Savepoint时，可以不用在手动执行命令时指定Savepoint的位置\nstate.savepoints.dir: hdfs://namenode:9000/flink/savepoints\n2：触发一个savepoint【直接触发或者在cancel的时候触发】\nbin/flink savepoint jobId [targetDirectory] [-yid yarnAppId]【针对on yarn模式需要指定-yid参数】\n\n\nbin/flink cancel -s [targetDirectory] jobId [-yid yarnAppId]【针对on yarn模式需要指定-yid参数】\n\nflink cancel -s hdfs://xxx/savepoint jobId f849c15ee894d82f0e74297be658248bStart -yid applicationID\n\n3：从指定的savepoint启动job\nbin/flink run -s savepointPath [runArgs]\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);