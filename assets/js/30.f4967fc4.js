(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{516:function(s,a,n){"use strict";n.r(a);var e=n(19),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"_1-数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-数组"}},[s._v("#")]),s._v(" 1. 数组")]),s._v(" "),n("ul",[n("li",[s._v("scala中数组的概念是和Java类似，可以用数组来存放一组数据")]),s._v(" "),n("li",[s._v("scala中，有两种数组，一种是"),n("strong",[s._v("定长数组")]),s._v("，另一种是"),n("strong",[s._v("变长数组")])])]),s._v(" "),n("h3",{attrs:{id:"_1-定长数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-定长数组"}},[s._v("#")]),s._v(" 1 定长数组")]),s._v(" "),n("ul",[n("li",[s._v("定长数组指的是数组的"),n("strong",[s._v("长度")]),s._v("是"),n("strong",[s._v("不允许改变")]),s._v("的")]),s._v(" "),n("li",[s._v("数组的"),n("strong",[s._v("元素")]),s._v("是"),n("strong",[s._v("可以改变")]),s._v("的")]),s._v(" "),n("li",[s._v("语法")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 通过指定长度定义数组\nval/var 变量名 = new Array[元素类型](数组长度)\n\n// 用元素直接初始化数组\nval/var 变量名 = Array(元素1, 元素2, 元素3...)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[s._v("注意")])]),s._v(" "),n("div",{staticClass:"language-html line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[s._v("在scala中，数组的泛型使用[]来指定\n使用()来获取元素\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("演示")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('scala> val a=new Array[Int](10)\na: Array[Int] = Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n\nscala> a(0)\nres19: Int = 0\n\nscala> a(0)=10\n\nscala> a\nres21: Array[Int] = Array(10, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n\n//////////////////////////////////////////////////////////////////\nscala> val b =Array("hadoop","spark","hive")\nb: Array[String] = Array(hadoop, spark, hive)\n\nscala> b(0)\nres24: String = hadoop\n\nscala> b.length\nres25: Int = 3\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h3",{attrs:{id:"_2-变长数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-变长数组"}},[s._v("#")]),s._v(" 2 变长数组")]),s._v(" "),n("ul",[n("li",[s._v("变长数组指的是数组的长度是可变的，可以往数组中添加、删除元素")]),s._v(" "),n("li",[s._v("创建变长数组，需要提前导入ArrayBuffer类")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import scala.collection.mutable.ArrayBuffer\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("语法\n"),n("ul",[n("li",[s._v("创建空的ArrayBuffer变长数组")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("val/var a = ArrayBuffer[元素类型]()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("创建带有初始元素的ArrayBuffer")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("val/var a = ArrayBuffer(元素1，元素2，元素3....)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("演示")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//导入ArrayBuffer类型\nscala> import scala.collection.mutable.ArrayBuffer\nimport scala.collection.mutable.ArrayBuffer\n\n//定义一个长度为0的整型变长数组\nscala> val a=ArrayBuffer[Int]()\na: scala.collection.mutable.ArrayBuffer[Int] = ArrayBuffer()\n\n//定义一个有初始元素的变长数组\nscala> val b = ArrayBuffer("hadoop", "storm", "spark")\nb: scala.collection.mutable.ArrayBuffer[String] = ArrayBuffer(hadoop, storm, spark)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("ul",[n("li",[s._v("变长数组的增删改操作\n"),n("ul",[n("li",[s._v("使用"),n("code",[s._v("+=")]),s._v("添加元素")]),s._v(" "),n("li",[s._v("使用"),n("code",[s._v("-=")]),s._v("删除元素")]),s._v(" "),n("li",[s._v("使用"),n("code",[s._v("++=")]),s._v("追加一个数组到变长数组")])])]),s._v(" "),n("li",[s._v("示例")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 定义变长数组\nscala> val a = ArrayBuffer("hadoop", "spark", "flink")\na: scala.collection.mutable.ArrayBuffer[String] = ArrayBuffer(hadoop, spark, flink)\n\n// 追加一个元素\nscala> a += "flume"\nres10: a.type = ArrayBuffer(hadoop, spark, flink, flume)\n\n// 删除一个元素\nscala> a -= "hadoop"\nres11: a.type = ArrayBuffer(spark, flink, flume)\n\n// 追加一个数组\nscala> a ++= Array("hive", "sqoop")\nres12: a.type = ArrayBuffer(spark, flink, flume, hive, sqoop)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h3",{attrs:{id:"_3-遍历数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-遍历数组"}},[s._v("#")]),s._v(" 3 遍历数组")]),s._v(" "),n("ul",[n("li",[s._v("可以使用以下两种方式来遍历数组：\n"),n("ul",[n("li",[s._v("使用for表达式 直接遍历数组中的元素")]),s._v(" "),n("li",[s._v("使用 索引 遍历数组中的元素")])])]),s._v(" "),n("li",[s._v("示例")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("scala> for(i <- a)println(i)\nhadoop\nhive\nflume\nspark\n\nscala> for(i <- 0 to a.length -1 )println(a(i))\nhadoop\nhive\nflume\nspark\n\nscala> for(i <- 0 until a.length) println(a(i))\nhadoop\nhive\nflume\nspark\n\n\n//0 until n ——生成一系列的数字，包含0，不包含n\n//0 to n    ——包含0，也包含n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("h3",{attrs:{id:"_4-数组常用操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-数组常用操作"}},[s._v("#")]),s._v(" 4 数组常用操作")]),s._v(" "),n("ul",[n("li",[s._v("scala中的数组封装了丰富的计算操作，将来在对数据处理的时候，不需要我们自己再重新实现。\n"),n("ul",[n("li",[s._v("求和——sum方法")]),s._v(" "),n("li",[s._v("求最大值——max方法")]),s._v(" "),n("li",[s._v("求最小值——min方法")]),s._v(" "),n("li",[s._v("排序——sorted方法")])])]),s._v(" "),n("li",[s._v("示例")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("scala> val array=Array(1,3,4,2,5)\narray: Array[Int] = Array(1, 3, 4, 2, 5)\n\n//求和\nscala> array.sum\nres10: Int = 15\n\n//求最大值\nscala> array.max\nres11: Int = 5\n\n//求最小值\nscala> array.min\nres12: Int = 1\n\n//升序\nscala> array.sorted\nres13: Array[Int] = Array(1, 2, 3, 4, 5)\n\n//降序    reverse 反转\nscala> array.sorted.reverse\nres14: Array[Int] = Array(5, 4, 3, 2, 1)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h2",{attrs:{id:"_2-元组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-元组"}},[s._v("#")]),s._v(" 2. 元组")]),s._v(" "),n("ul",[n("li",[s._v("元组可以用来包含一组不同类型的值。例如：姓名，年龄，性别，出生年月。元组的元素是不可变 的。")])]),s._v(" "),n("h3",{attrs:{id:"_1-定义元组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义元组"}},[s._v("#")]),s._v(" 1 定义元组")]),s._v(" "),n("ul",[n("li",[s._v("语法\n"),n("ul",[n("li",[s._v("使用括号来定义元组")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("val/var 元组变量名称 = (元素1, 元素2, 元素3....)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("使用箭头来定义元素（元组只有两个元素）")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("val/var 元组 = 元素1->元素2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"_2-示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-示例"}},[s._v("#")]),s._v(" 2 示例")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 可以直接使用括号来定义一个元组 \nscala> val a = (1, "张三", 20, "北京市") \na: (Int, String, Int, String) = (1,张三,20,北京市)\n\n//使用箭头来定义元素\nscala> val b = 1->2 \nb: (Int, Int) = (1,2)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"_3-访问元组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-访问元组"}},[s._v("#")]),s._v(" 3 访问元组")]),s._v(" "),n("ul",[n("li",[s._v("使用\n来访问元组中的元素，_1表示访问第一个元素，依次类推")])]),s._v(" "),n("div",{staticClass:"language-html line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[s._v(" _1、_2、_3....\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("示例")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('scala> val a = (1, "张三", 20, "北京市")\na: (Int, String, Int, String) = (1,张三,20,北京市)\n\n//获取元组中的第一个元素\nscala> a._1\nres18: Int = 1\n\n//获取元组中的第二个元素\nscala> a._2\nres19: String = 张三\n\n//获取元组中的第三个元素\nscala> a._3\nres20: Int = 20\n\n//获取元组中的第四个元素\nscala> a._4\nres21: String = 北京市\n\n//不能修改元组中的值\nscala> a._4="上海"\n<console>:12: error: reassignment to val\n       a._4="上海"\n           ^\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("h2",{attrs:{id:"_3-映射map"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-映射map"}},[s._v("#")]),s._v(" 3. 映射Map")]),s._v(" "),n("ul",[n("li",[s._v("Map可以称之为映射。它是由键值对组成的集合。scala当中的Map集合与java当中的Map类似，也是key，value对形式的。")]),s._v(" "),n("li",[s._v("在scala中，Map也分为不可变Map和可变 Map。")])]),s._v(" "),n("h3",{attrs:{id:"_1-不可变map"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-不可变map"}},[s._v("#")]),s._v(" 1 不可变Map")]),s._v(" "),n("ul",[n("li",[s._v("定义语法")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("val/var map = Map(键->值, 键->值, 键->值...)    // 推荐，可读性更好 \nval/var map = Map((键, 值), (键, 值), (键, 值), (键, 值)...)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("演示")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('scala> val map1 = Map("zhangsan"->30, "lisi"->40) \nmap: scala.collection.immutable.Map[String,Int] = Map(zhangsan -> 30, lisi -> 40)\n\nscala> val map2 = Map(("zhangsan", 30), ("lisi", 30)) \nmap: scala.collection.immutable.Map[String,Int] = Map(zhangsan -> 30, lisi -> 30)\n// 根据key获取value \nscala> map1("zhangsan") \nres10: Int = 30\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"_2-可变map"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-可变map"}},[s._v("#")]),s._v(" 2 可变Map")]),s._v(" "),n("ul",[n("li",[s._v("可变Map需要手动导入import scala.collection.mutable.Map, 定义语法与不可变Map一致。")]),s._v(" "),n("li",[s._v("演示")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//导包\nscala> import scala.collection.mutable.Map\nimport scala.collection.mutable.Map\n\n//定义可变的map\nscala> val map3 = Map("zhangsan"->30, "lisi"->40)\nmap3: scala.collection.mutable.Map[String,Int] = Map(lisi -> 40, zhangsan -> 30)\n\n//获取zhangsan这个key对应的value\nscala> map3("zhangsan")\nres26: Int = 30\n\n//给zhangsan这个key重新赋值value\nscala> map3("zhangsan")=50\n\n//显示map3\nscala> map3\nres28: scala.collection.mutable.Map[String,Int] = Map(lisi -> 40, zhangsan -> 50)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h3",{attrs:{id:"_3-map基本操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-map基本操作"}},[s._v("#")]),s._v(" 3 Map基本操作")]),s._v(" "),n("ul",[n("li",[s._v("创建一个可变的map")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//导包\nscala> import scala.collection.mutable.Map\nimport scala.collection.mutable.Map\n\nscala> val map = Map("zhangsan"->30, "lisi"->40) \nmap: scala.collection.mutable.Map[String,Int] = Map(lisi -> 40, zhangsan -> 30)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("ul",[n("li",[s._v("按照key获取value")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 获取zhagnsan的年龄 \nscala> map("zhangsan")\nres10: Int = 30\n\n// 获取wangwu的年龄，如果wangwu不存在，则返回-1 比较友好，避免遇到不存在的key而报错\nscala> map.getOrElse("wangwu", -1) \nres11: Int = -1\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("修改key对应的value")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('scala> map("lisi")=50\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("添加key-value键值对")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('scala> map+=("wangwu" ->35)\nres12: map.type = Map(lisi -> 50, zhangsan -> 30, wangwu -> 35)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("删除key-value键值对")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('scala> map -="wangwu"\nres13: map.type = Map(lisi -> 50, zhangsan -> 30)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("获取所有的key和所有的value")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//获取所有的key\nscala> map.keys\nres36: Iterable[String] = Set(lisi, zhangsan)\n\n//获取所有的key\nscala> map.keySet\nres37: scala.collection.Set[String] = Set(lisi, zhangsan)\n\n//获取所有的value\nscala> map.values\nres38: Iterable[Int] = HashMap(50, 30)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("ul",[n("li",[s._v("遍历map")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//第一种遍历\nscala> for(k <- map.keys) println(k+" -> " +map(k))\nlisi -> 50\nzhangsan -> 30\n\n\n//第二种遍历\nscala> for((k,v) <- map) println(k+" -> "+v)\nlisi -> 50\nzhangsan -> 30\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"_4-set集合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-set集合"}},[s._v("#")]),s._v(" 4. Set集合")]),s._v(" "),n("ul",[n("li",[s._v("Set是代表没有重复元素的集合。")]),s._v(" "),n("li",[s._v("Set具备以下性质：\n"),n("ul",[n("li",[s._v("1、元素不重复")]),s._v(" "),n("li",[s._v("2、不保证插入顺序")])])]),s._v(" "),n("li",[s._v("scala中的set集合也分为两种，一种是不可变集合，另一种是可变集合。")])]),s._v(" "),n("h3",{attrs:{id:"_1-不可变set集合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-不可变set集合"}},[s._v("#")]),s._v(" 1 不可变Set集合")]),s._v(" "),n("ul",[n("li",[s._v("语法")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//创建一个空的不可变集\nval/var 变量名 = Set[类型]()\n\n//给定元素来创建一个不可变集\nval/var 变量名 = Set[类型](元素1, 元素2, 元素3...)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[s._v("演示")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 创建set集合 \nscala> val a = Set(1,1,2,3,4,5) \na: scala.collection.immutable.Set[Int] = Set(5, 1, 2, 3, 4)\n\n// 获取集合的大小 \nscala> a.size \nres0: Int = 5\n\n// 遍历集合\nscala> for(i <- a) println(i)\n\n//添加元素生成新的集合\nscala> a + 6\nres1: scala.collection.immutable.Set[Int] = Set(5, 1, 6, 2, 3, 4)\n\n// 删除一个元素 \nscala> a - 1 \nres2: scala.collection.immutable.Set[Int] = Set(5, 2, 3, 4)\n\n// 删除set集合中存在的元素 \nscala> a -- Set(2,3) \nres3: scala.collection.immutable.Set[Int] = Set(5, 1, 4)\n\n// 拼接两个集合 \nscala> a ++ Set(6,7,8) \nres4: scala.collection.immutable.Set[Int] = Set(5, 1, 6, 2, 7, 3, 8, 4)\n\n//求2个Set集合的交集\nscala> a & Set(3,4,5,6)\nres5: scala.collection.immutable.Set[Int] = Set(5, 3, 4)\n\n\n\n//注意：这里对不可变的set集合进行添加删除等操作，对于该集合来说是没有发生任何变化，这里是生成了新的集合，新的集合相比于原来的集合来说发生了变化。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("h3",{attrs:{id:"_2-可变set集合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-可变set集合"}},[s._v("#")]),s._v(" 2 可变Set集合")]),s._v(" "),n("ul",[n("li",[s._v("要使用可变集，必须要手动导入： import scala.collection.mutable.Set")]),s._v(" "),n("li",[s._v("演示")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//导包\nscala> import scala.collection.mutable.Set\nimport scala.collection.mutable.Set\n\n//定义可变的set集合\nscala> val set=Set(1,2,3,4,5)\nset: scala.collection.mutable.Set[Int] = Set(1, 5, 2, 3, 4)\n\n//添加单个元素\nscala> set +=6\nres10: set.type = Set(1, 5, 2, 6, 3, 4)\n\n//添加多个元素\nscala> set +=(6,7,8,9)\nres11: set.type = Set(9, 1, 5, 2, 6, 3, 7, 4, 8)\n\n//添加一个set集合中的元素\nscala> set ++=Set(10,11)\nres12: set.type = Set(9, 1, 5, 2, 6, 3, 10, 7, 4, 11, 8)\n\n//删除一个元素\nscala> set -=11\nres13: set.type = Set(9, 1, 5, 2, 6, 3, 10, 7, 4, 8)\n\n//删除多个元素\nscala> set -=(9,10)\nres15: set.type = Set(1, 5, 2, 6, 3, 7, 4, 8)\n\n//删除一个set子集\nscala> set --=Set(7,8)\nres19: set.type = Set(1,5, 2, 6, 3, 4)\n\nscala> set.remove(1)\nres17: Boolean = true\n\nscala> set\nres18: scala.collection.mutable.Set[Int] = Set(5, 2, 6, 3, 4)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br")])]),n("h2",{attrs:{id:"_5-列表-list"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-列表-list"}},[s._v("#")]),s._v(" 5. 列表 List")]),s._v(" "),n("ul",[n("li",[s._v("List是scala中最重要的、也是最常用的数据结构。")]),s._v(" "),n("li",[s._v("List具备以下性质：\n"),n("ul",[n("li",[s._v("1、可以保存重复的值")]),s._v(" "),n("li",[s._v("2、有先后顺序")])])]),s._v(" "),n("li",[s._v("在scala中，也有两种列表，一种是不可变列表、另一种是可变列表")])]),s._v(" "),n("h3",{attrs:{id:"_1-不可变列表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-不可变列表"}},[s._v("#")]),s._v(" 1 不可变列表")]),s._v(" "),n("ul",[n("li",[s._v("不可变列表就是列表的元素、长度都是不可变的")]),s._v(" "),n("li",[s._v("语法\n"),n("ul",[n("li",[s._v("使用 List(元素1, 元素2, 元素3, ...) 来创建一个不可变列表，语法格式")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("val/var 变量名 = List(元素1, 元素2, 元素3...)\n\n//使用 Nil 创建一个不可变的空列表\nval/var 变量名 = Nil\n\n//使用 :: 方法创建一个不可变列表\nval/var 变量名 = 元素1 :: 元素2 :: Nil\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("演示")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//创建一个不可变列表，存放以下几个元素（1,2,3,4）\nscala> val  list1=List(1,2,3,4)\nlist1: List[Int] = List(1, 2, 3, 4)\n\n//使用Nil创建一个不可变的空列表\nscala> val  list2=Nil\nlist2: scala.collection.immutable.Nil.type = List()\n\n//使用 :: 方法创建列表，包含1、2、3三个元素\nscala> val list3=1::2::3::Nil\nlist3: List[Int] = List(1, 2, 3)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"_2-可变列表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-可变列表"}},[s._v("#")]),s._v(" 2 可变列表")]),s._v(" "),n("ul",[n("li",[s._v("可变列表就是列表的元素、长度都是可变的。")]),s._v(" "),n("li",[s._v("要使用可变列表，先要导入 import scala.collection.mutable.ListBuffer")]),s._v(" "),n("li",[s._v("语法\n"),n("ul",[n("li",[s._v("使用ListBuffer元素类型 创建空的可变列表，语法结构")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("val/var 变量名 = ListBuffer[Int]()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("使用ListBuffer(元素1, 元素2, 元素3...)创建可变列表，语法结构")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("val/var 变量名 = ListBuffer(元素1，元素2，元素3...)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("演示")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//导包\nscala> import scala.collection.mutable.ListBuffer\nimport scala.collection.mutable.ListBuffer\n\n//定义一个空的可变列表\nscala> val a=ListBuffer[Int]()\na: scala.collection.mutable.ListBuffer[Int] = ListBuffer()\n\n//定义一个有初始元素的可变列表\nscala> val b=ListBuffer(1,2,3,4)\nb: scala.collection.mutable.ListBuffer[Int] = ListBuffer(1, 2, 3, 4)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"_3-列表操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-列表操作"}},[s._v("#")]),s._v(" 3 列表操作")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//导包\nscala> import scala.collection.mutable.ListBuffer\nimport scala.collection.mutable.ListBuffer\n\n//定义一个可变的列表\nscala> val list=ListBuffer(1,2,3,4)\nlist: scala.collection.mutable.ListBuffer[Int] = ListBuffer(1, 2, 3, 4)\n\n//获取第一个元素\nscala> list(0)\nres4: Int = 1\n//获取第一个元素\nscala> list.head\nres5: Int = 1\n\n//获取除了第一个元素外其他元素组成的列表\nscala> list.tail\nres6: scala.collection.mutable.ListBuffer[Int] = ListBuffer(2, 3, 4)\n\n//添加单个元素\nscala> list +=5\nres7: list.type = ListBuffer(1, 2, 3, 4, 5)\n\n//添加一个不可变的列表\nscala> list ++=List(6,7)\nres8: list.type = ListBuffer(1, 2, 3, 4, 5, 6, 7)\n\n//添加一个可变的列表\nscala> list ++=ListBuffer(8,9)\nres9: list.type = ListBuffer(1, 2, 3, 4, 5, 6, 7, 8, 9)\n\n//删除单个元素\nscala> list -=9\nres10: list.type = ListBuffer(1, 2, 3, 4, 5, 6, 7, 8)\n\n//删除一个不可变的列表存在的元素\nscala> list --=List(7,8)\nres11: list.type = ListBuffer(1, 2, 3, 4, 5, 6)\n\n//删除一个可变的列表存在的元素\nscala> list --=ListBuffer(5,6)\nres12: list.type = ListBuffer(1, 2, 3, 4)\n\n//可变的列表转为不可变列表\nscala> list.toList\nres13: List[Int] = List(1, 2, 3, 4)\n\n//可变的列表转为不可变数组\nscala> list.toArray\nres14: Array[Int] = Array(1, 2, 3, 4)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);