(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{552:function(n,s,e){"use strict";e.r(s);var a=e(19),t=Object(a.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"_1-window概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-window概述"}},[n._v("#")]),n._v(" 1 Window概述")]),n._v(" "),e("blockquote",[e("p",[n._v("聚合事件（比如计数、求和）在流上的工作方式与批处理不同。比如，对流中的所有元素进行计数是不可能的，因为通常流是无限的（无界的）。所以，流上的聚合需要由 window 来划定范围，比如 “计算过去的5分钟” ，或者 “最后100个元素的和” 。window是一种可以把无限数据切割为有限数据块的手段。")])]),n._v(" "),e("blockquote",[e("p",[n._v("窗口可以是 时间驱动的 【Time Window】（比如：每30秒）或者 数据驱动的【Count Window】 （比如：每100个元素）。")])]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231651216.png",alt:"1569381744120"}})]),n._v(" "),e("h2",{attrs:{id:"_2-window类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-window类型"}},[n._v("#")]),n._v(" 2 Window类型")]),n._v(" "),e("p",[n._v("窗口通常被区分为不同的类型:")]),n._v(" "),e("ul",[e("li",[n._v("tumbling windows：滚动窗口 【没有重叠】")]),n._v(" "),e("li",[n._v("sliding windows：滑动窗口 【有重叠】")]),n._v(" "),e("li",[n._v("session windows：会话窗口")]),n._v(" "),e("li",[n._v("global windows: 没有窗口")])]),n._v(" "),e("h3",{attrs:{id:"_2-1-tumblingwindows-滚动窗口【没有重叠】"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-tumblingwindows-滚动窗口【没有重叠】"}},[n._v("#")]),n._v(" 2.1 tumblingwindows：滚动窗口【没有重叠】")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231654338.png",alt:"1569381903653"}})]),n._v(" "),e("h3",{attrs:{id:"_2-2-slidingwindows-滑动窗口-【有重叠】"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-slidingwindows-滑动窗口-【有重叠】"}},[n._v("#")]),n._v(" 2.2 slidingwindows：滑动窗口 【有重叠】")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231654714.png",alt:"1569381981992"}})]),n._v(" "),e("h3",{attrs:{id:"_2-3-session-windows"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-session-windows"}},[n._v("#")]),n._v(" 2.3 session windows")]),n._v(" "),e("p",[n._v("需求：实时计算每个单词出现的次数，如果一个单词过了5秒就没出现过了，那么就输出这个单词。")]),n._v(" "),e("p",[n._v("案例演示：见下方")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231654718.svg",alt:"session-windows"}})]),n._v(" "),e("h3",{attrs:{id:"_2-4-global-windows"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-global-windows"}},[n._v("#")]),n._v(" 2.4 global windows")]),n._v(" "),e("p",[n._v("案例见下方")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231659956.svg",alt:"non-windowed"}})]),n._v(" "),e("h3",{attrs:{id:"_2-5-window类型总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-window类型总结"}},[n._v("#")]),n._v(" 2.5 Window类型总结")]),n._v(" "),e("h4",{attrs:{id:"_2-5-1-keyed-window-和-non-keyed-window"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-1-keyed-window-和-non-keyed-window"}},[n._v("#")]),n._v(" 2.5.1 Keyed Window 和 Non Keyed Window")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n * Non Keyed Window 和 Keyed Window\n */\npublic class WindowType {\n    public static void main(String[] args) throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        DataStreamSource<String> dataStream = env.socketTextStream("10.148.15.10", 8888);\n\n        SingleOutputStreamOperator<Tuple2<String, Integer>> stream = dataStream.flatMap(new FlatMapFunction<String, Tuple2<String, Integer>>() {\n            @Override\n            public void flatMap(String line, Collector<Tuple2<String, Integer>> collector) throws Exception {\n                String[] fields = line.split(",");\n                for (String word : fields) {\n                    collector.collect(Tuple2.of(word, 1));\n                }\n            }\n        });\n\n        //Non keyed Stream\n//        AllWindowedStream<Tuple2<String, Integer>, TimeWindow> nonkeyedStream = stream.timeWindowAll(Time.seconds(3));\n//        nonkeyedStream.sum(1)\n//                .print();\n\n        //Keyed Stream\n        stream.keyBy(0)\n                .timeWindow(Time.seconds(3))\n                .sum(1)\n                .print();\n\n        env.execute("word count");\n\n\n    }\n}\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231654292.png",alt:"window的类型2"}})]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231654707.png",alt:"window的类型"}})]),n._v(" "),e("h4",{attrs:{id:"_2-5-2-timewindow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-2-timewindow"}},[n._v("#")]),n._v(" 2.5.2 TimeWindow")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231654132.png",alt:"1569383737549"}})]),n._v(" "),e("h4",{attrs:{id:"_2-5-3-countwindow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-3-countwindow"}},[n._v("#")]),n._v(" 2.5.3 CountWindow")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231654224.png",alt:"1569383745199"}})]),n._v(" "),e("h4",{attrs:{id:"_3-1-4-自定义window"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-自定义window"}},[n._v("#")]),n._v(" 3.1.4 自定义Window")]),n._v(" "),e("p",[n._v("暂不介绍")]),n._v(" "),e("h2",{attrs:{id:"_3-window操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-window操作"}},[n._v("#")]),n._v(" 3 window操作")]),n._v(" "),e("p",[e("strong",[n._v("Keyed Windows")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('stream\n       .keyBy(...)               <-  keyed versus non-keyed windows\n       .window(...)              <-  required: "assigner"\n      [.trigger(...)]            <-  optional: "trigger" (else default trigger)\n      [.evictor(...)]            <-  optional: "evictor" (else no evictor)\n      [.allowedLateness(...)]    <-  optional: "lateness" (else zero)\n      [.sideOutputLateData(...)] <-  optional: "output tag" (else no side output for late data)\n       .reduce/aggregate/fold/apply()      <-  required: "function"\n      [.getSideOutput(...)]      <-  optional: "output tag"\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br")])]),e("p",[e("strong",[n._v("Non-Keyed Windows")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('stream\n       .windowAll(...)           <-  required: "assigner"\n      [.trigger(...)]            <-  optional: "trigger" (else default trigger)\n      [.evictor(...)]            <-  optional: "evictor" (else no evictor)\n      [.allowedLateness(...)]    <-  optional: "lateness" (else zero)\n      [.sideOutputLateData(...)] <-  optional: "output tag" (else no side output for late data)\n       .reduce/aggregate/fold/apply()      <-  required: "function"\n      [.getSideOutput(...)]      <-  optional: "output tag"\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br")])]),e("h3",{attrs:{id:"_3-1-window-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-window-function"}},[n._v("#")]),n._v(" 3.1 window function")]),n._v(" "),e("h4",{attrs:{id:"_3-1-1-tumbling-window和slide-window"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-tumbling-window和slide-window"}},[n._v("#")]),n._v(" 3.1.1 Tumbling window和slide window")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("        //滚动窗口\n        stream.keyBy(0)\n               .window(TumblingEventTimeWindows.of(Time.seconds(2)))\n                .sum(1)\n                .print();\n        //滑动窗口\n        stream.keyBy(0)\n                .window(SlidingProcessingTimeWindows.of(Time.seconds(6),Time.seconds(4)))\n                .sum(1)\n                .print();\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br")])]),e("h4",{attrs:{id:"_3-1-2-session-window"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-session-window"}},[n._v("#")]),n._v(" 3.1.2 session window")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n * 5秒过去以后，该单词不出现就打印出来该单词\n */\npublic class SessionWindowTest {\n    public static void main(String[] args) throws  Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        DataStreamSource<String> dataStream = env.socketTextStream("10.148.15.10", 8888);\n\n        SingleOutputStreamOperator<Tuple2<String, Integer>> stream = dataStream.flatMap(new FlatMapFunction<String, Tuple2<String, Integer>>() {\n            @Override\n            public void flatMap(String line, Collector<Tuple2<String, Integer>> collector) throws Exception {\n                String[] fields = line.split(",");\n                for (String word : fields) {\n                    collector.collect(Tuple2.of(word, 1));\n                }\n            }\n        });\n\n        stream.keyBy(0)\n                .window(ProcessingTimeSessionWindows.withGap(Time.seconds(5)))\n                .sum(1)\n                .print();\n\n        env.execute("SessionWindowTest");\n    }\n}\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br")])]),e("h4",{attrs:{id:"_3-1-3-global-window"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-global-window"}},[n._v("#")]),n._v(" 3.1.3 global window")]),n._v(" "),e("p",[n._v("global window + trigger 一起配合才能使用")]),n._v(" "),e("p",[n._v("需求：单词每出现三次统计一次")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n * 单词每出现三次统计一次\n */\npublic class GlobalWindowTest {\n    public static void main(String[] args) throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        DataStreamSource<String> dataStream = env.socketTextStream("10.148.15.10", 8888);\n\n        SingleOutputStreamOperator<Tuple2<String, Integer>> stream = dataStream.flatMap(new FlatMapFunction<String, Tuple2<String, Integer>>() {\n            @Override\n            public void flatMap(String line, Collector<Tuple2<String, Integer>> collector) throws Exception {\n                String[] fields = line.split(",");\n                for (String word : fields) {\n                    collector.collect(Tuple2.of(word, 1));\n                }\n            }\n        });\n\n        stream.keyBy(0)\n                .window(GlobalWindows.create())\n                 //如果不加这个程序是启动不起来的\n                .trigger(CountTrigger.of(3))\n                .sum(1)\n                .print();\n\n        env.execute("SessionWindowTest");\n    }\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br")])]),e("p",[n._v("执行结果：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("hello,3\nhello,6\nhello,9\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br")])]),e("p",[n._v("总结：效果跟CountWindow(3）很像，但又有点不像，因为如果是CountWindow(3)，单词每次出现的都是3次，不会包含之前的次数，而我们刚刚的这个每次都包含了之前的次数。")]),n._v(" "),e("h3",{attrs:{id:"_3-2-trigger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-trigger"}},[n._v("#")]),n._v(" 3.2 Trigger")]),n._v(" "),e("p",[n._v("需求：自定义一个CountWindow")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n * 使用Trigger 自己实现一个类似CountWindow的效果\n */\npublic class CountWindowWordCount {\n    public static void main(String[] args) throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        DataStreamSource<String> dataStream = env.socketTextStream("10.148.15.10", 8888);\n\n        SingleOutputStreamOperator<Tuple2<String, Integer>> stream = dataStream.flatMap(new FlatMapFunction<String, Tuple2<String, Integer>>() {\n            @Override\n            public void flatMap(String line, Collector<Tuple2<String, Integer>> collector) throws Exception {\n                String[] fields = line.split(",");\n                for (String word : fields) {\n                    collector.collect(Tuple2.of(word, 1));\n                }\n            }\n        });\n\n        WindowedStream<Tuple2<String, Integer>, Tuple, GlobalWindow> keyedWindow = stream.keyBy(0)\n                .window(GlobalWindows.create())\n                .trigger(new MyCountTrigger(3));\n\n\n            //可以看看里面的源码，跟我们写的很像\n//        WindowedStream<Tuple2<String, Integer>, Tuple, GlobalWindow> keyedWindow = stream.keyBy(0)\n//                .window(GlobalWindows.create())\n//                .trigger(CountTrigger.of(3));\n\n\n        DataStream<Tuple2<String, Integer>> wordCounts = keyedWindow.sum(1);\n\n        wordCounts.print().setParallelism(1);\n\n        env.execute("Streaming WordCount");\n    }\n\n\n\n    private static class MyCountTrigger\n            extends Trigger<Tuple2<String, Integer>, GlobalWindow> {\n        // 表示指定的元素的最大的数量\n        private long maxCount;\n\n        // 用于存储每个 key 对应的 count 值\n        private ReducingStateDescriptor<Long> stateDescriptor\n                = new ReducingStateDescriptor<Long>("count", new ReduceFunction<Long>() {\n            @Override\n            public Long reduce(Long aLong, Long t1) throws Exception {\n                return aLong + t1;\n            }\n        }, Long.class);\n\n        public MyCountTrigger(long maxCount) {\n            this.maxCount = maxCount;\n        }\n\n        /**\n         *  当一个元素进入到一个 window 中的时候就会调用这个方法\n         * @param element   元素\n         * @param timestamp 进来的时间\n         * @param window    元素所属的窗口\n         * @param ctx 上下文\n         * @return TriggerResult\n         *      1. TriggerResult.CONTINUE ：表示对 window 不做任何处理\n         *      2. TriggerResult.FIRE ：表示触发 window 的计算\n         *      3. TriggerResult.PURGE ：表示清除 window 中的所有数据\n         *      4. TriggerResult.FIRE_AND_PURGE ：表示先触发 window 计算，然后删除 window 中的数据\n         * @throws Exception\n         */\n        @Override\n        public TriggerResult onElement(Tuple2<String, Integer> element,\n                                       long timestamp,\n                                       GlobalWindow window,\n                                       TriggerContext ctx) throws Exception {\n            // 拿到当前 key 对应的 count 状态值\n            ReducingState<Long> count = ctx.getPartitionedState(stateDescriptor);\n            // count 累加 1\n            count.add(1L);\n            // 如果当前 key 的 count 值等于 maxCount\n            if (count.get() == maxCount) {\n                count.clear();\n                // 触发 window 计算，删除数据\n                return TriggerResult.FIRE_AND_PURGE;\n            }\n            // 否则，对 window 不做任何的处理\n            return TriggerResult.CONTINUE;\n        }\n\n        @Override\n        public TriggerResult onProcessingTime(long time,\n                                              GlobalWindow window,\n                                              TriggerContext ctx) throws Exception {\n            // 写基于 Processing Time 的定时器任务逻辑\n            return TriggerResult.CONTINUE;\n        }\n\n        @Override\n        public TriggerResult onEventTime(long time,\n                                         GlobalWindow window,\n                                         TriggerContext ctx) throws Exception {\n            // 写基于 Event Time 的定时器任务逻辑\n            return TriggerResult.CONTINUE;\n        }\n\n        @Override\n        public void clear(GlobalWindow window, TriggerContext ctx) throws Exception {\n            // 清除状态值\n            ctx.getPartitionedState(stateDescriptor).clear();\n        }\n    }\n\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br"),e("span",{staticClass:"line-number"},[n._v("61")]),e("br"),e("span",{staticClass:"line-number"},[n._v("62")]),e("br"),e("span",{staticClass:"line-number"},[n._v("63")]),e("br"),e("span",{staticClass:"line-number"},[n._v("64")]),e("br"),e("span",{staticClass:"line-number"},[n._v("65")]),e("br"),e("span",{staticClass:"line-number"},[n._v("66")]),e("br"),e("span",{staticClass:"line-number"},[n._v("67")]),e("br"),e("span",{staticClass:"line-number"},[n._v("68")]),e("br"),e("span",{staticClass:"line-number"},[n._v("69")]),e("br"),e("span",{staticClass:"line-number"},[n._v("70")]),e("br"),e("span",{staticClass:"line-number"},[n._v("71")]),e("br"),e("span",{staticClass:"line-number"},[n._v("72")]),e("br"),e("span",{staticClass:"line-number"},[n._v("73")]),e("br"),e("span",{staticClass:"line-number"},[n._v("74")]),e("br"),e("span",{staticClass:"line-number"},[n._v("75")]),e("br"),e("span",{staticClass:"line-number"},[n._v("76")]),e("br"),e("span",{staticClass:"line-number"},[n._v("77")]),e("br"),e("span",{staticClass:"line-number"},[n._v("78")]),e("br"),e("span",{staticClass:"line-number"},[n._v("79")]),e("br"),e("span",{staticClass:"line-number"},[n._v("80")]),e("br"),e("span",{staticClass:"line-number"},[n._v("81")]),e("br"),e("span",{staticClass:"line-number"},[n._v("82")]),e("br"),e("span",{staticClass:"line-number"},[n._v("83")]),e("br"),e("span",{staticClass:"line-number"},[n._v("84")]),e("br"),e("span",{staticClass:"line-number"},[n._v("85")]),e("br"),e("span",{staticClass:"line-number"},[n._v("86")]),e("br"),e("span",{staticClass:"line-number"},[n._v("87")]),e("br"),e("span",{staticClass:"line-number"},[n._v("88")]),e("br"),e("span",{staticClass:"line-number"},[n._v("89")]),e("br"),e("span",{staticClass:"line-number"},[n._v("90")]),e("br"),e("span",{staticClass:"line-number"},[n._v("91")]),e("br"),e("span",{staticClass:"line-number"},[n._v("92")]),e("br"),e("span",{staticClass:"line-number"},[n._v("93")]),e("br"),e("span",{staticClass:"line-number"},[n._v("94")]),e("br"),e("span",{staticClass:"line-number"},[n._v("95")]),e("br"),e("span",{staticClass:"line-number"},[n._v("96")]),e("br"),e("span",{staticClass:"line-number"},[n._v("97")]),e("br"),e("span",{staticClass:"line-number"},[n._v("98")]),e("br"),e("span",{staticClass:"line-number"},[n._v("99")]),e("br"),e("span",{staticClass:"line-number"},[n._v("100")]),e("br"),e("span",{staticClass:"line-number"},[n._v("101")]),e("br"),e("span",{staticClass:"line-number"},[n._v("102")]),e("br"),e("span",{staticClass:"line-number"},[n._v("103")]),e("br"),e("span",{staticClass:"line-number"},[n._v("104")]),e("br"),e("span",{staticClass:"line-number"},[n._v("105")]),e("br"),e("span",{staticClass:"line-number"},[n._v("106")]),e("br"),e("span",{staticClass:"line-number"},[n._v("107")]),e("br"),e("span",{staticClass:"line-number"},[n._v("108")]),e("br"),e("span",{staticClass:"line-number"},[n._v("109")]),e("br"),e("span",{staticClass:"line-number"},[n._v("110")]),e("br"),e("span",{staticClass:"line-number"},[n._v("111")]),e("br"),e("span",{staticClass:"line-number"},[n._v("112")]),e("br")])]),e("p",[n._v("注：效果跟CountWindow一模一样")]),n._v(" "),e("h3",{attrs:{id:"_3-3-evictor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-evictor"}},[n._v("#")]),n._v(" 3.3 Evictor")]),n._v(" "),e("p",[n._v("需求：实现每隔2个单词，计算最近3个单词")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n * 使用Evictor 自己实现一个类似CountWindow(3,2)的效果\n * 每隔2个单词计算最近3个单词\n */\npublic class CountWindowWordCountByEvictor {\n    public static void main(String[] args) throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        DataStreamSource<String> dataStream = env.socketTextStream("10.148.15.10", 8888);\n\n        SingleOutputStreamOperator<Tuple2<String, Integer>> stream = dataStream.flatMap(new FlatMapFunction<String, Tuple2<String, Integer>>() {\n            @Override\n            public void flatMap(String line, Collector<Tuple2<String, Integer>> collector) throws Exception {\n                String[] fields = line.split(",");\n                for (String word : fields) {\n                    collector.collect(Tuple2.of(word, 1));\n                }\n            }\n        });\n\n        WindowedStream<Tuple2<String, Integer>, Tuple, GlobalWindow> keyedWindow = stream.keyBy(0)\n                .window(GlobalWindows.create())\n                .trigger(new MyCountTrigger(2))\n                .evictor(new MyCountEvictor(3));\n\n\n\n        DataStream<Tuple2<String, Integer>> wordCounts = keyedWindow.sum(1);\n\n        wordCounts.print().setParallelism(1);\n\n        env.execute("Streaming WordCount");\n    }\n\n\n\n    private static class MyCountTrigger\n            extends Trigger<Tuple2<String, Integer>, GlobalWindow> {\n        // 表示指定的元素的最大的数量\n        private long maxCount;\n\n        // 用于存储每个 key 对应的 count 值\n        private ReducingStateDescriptor<Long> stateDescriptor\n                = new ReducingStateDescriptor<Long>("count", new ReduceFunction<Long>() {\n            @Override\n            public Long reduce(Long aLong, Long t1) throws Exception {\n                return aLong + t1;\n            }\n        }, Long.class);\n\n        public MyCountTrigger(long maxCount) {\n            this.maxCount = maxCount;\n        }\n\n        /**\n         *  当一个元素进入到一个 window 中的时候就会调用这个方法\n         * @param element   元素\n         * @param timestamp 进来的时间\n         * @param window    元素所属的窗口\n         * @param ctx 上下文\n         * @return TriggerResult\n         *      1. TriggerResult.CONTINUE ：表示对 window 不做任何处理\n         *      2. TriggerResult.FIRE ：表示触发 window 的计算\n         *      3. TriggerResult.PURGE ：表示清除 window 中的所有数据\n         *      4. TriggerResult.FIRE_AND_PURGE ：表示先触发 window 计算，然后删除 window 中的数据\n         * @throws Exception\n         */\n        @Override\n        public TriggerResult onElement(Tuple2<String, Integer> element,\n                                       long timestamp,\n                                       GlobalWindow window,\n                                       TriggerContext ctx) throws Exception {\n            // 拿到当前 key 对应的 count 状态值\n            ReducingState<Long> count = ctx.getPartitionedState(stateDescriptor);\n            // count 累加 1\n            count.add(1L);\n            // 如果当前 key 的 count 值等于 maxCount\n            if (count.get() == maxCount) {\n                count.clear();\n                // 触发 window 计算，删除数据\n                return TriggerResult.FIRE;\n            }\n            // 否则，对 window 不做任何的处理\n            return TriggerResult.CONTINUE;\n        }\n\n        @Override\n        public TriggerResult onProcessingTime(long time,\n                                              GlobalWindow window,\n                                              TriggerContext ctx) throws Exception {\n            // 写基于 Processing Time 的定时器任务逻辑\n            return TriggerResult.CONTINUE;\n        }\n\n        @Override\n        public TriggerResult onEventTime(long time,\n                                         GlobalWindow window,\n                                         TriggerContext ctx) throws Exception {\n            // 写基于 Event Time 的定时器任务逻辑\n            return TriggerResult.CONTINUE;\n        }\n\n        @Override\n        public void clear(GlobalWindow window, TriggerContext ctx) throws Exception {\n            // 清除状态值\n            ctx.getPartitionedState(stateDescriptor).clear();\n        }\n    }\n\n\n\n    private static class MyCountEvictor\n            implements Evictor<Tuple2<String, Integer>, GlobalWindow> {\n        // window 的大小\n        private long windowCount;\n\n        public MyCountEvictor(long windowCount) {\n            this.windowCount = windowCount;\n        }\n\n        /**\n         *  在 window 计算之前删除特定的数据\n         * @param elements  window 中所有的元素\n         * @param size  window 中所有元素的大小\n         * @param window    window\n         * @param evictorContext    上下文\n         */\n        @Override\n        public void evictBefore(Iterable<TimestampedValue<Tuple2<String, Integer>>> elements,\n                                int size, GlobalWindow window, EvictorContext evictorContext) {\n            if (size <= windowCount) {\n                return;\n            } else {\n                int evictorCount = 0;\n                Iterator<TimestampedValue<Tuple2<String, Integer>>> iterator = elements.iterator();\n                while (iterator.hasNext()) {\n                    iterator.next();\n                    evictorCount++;\n                    // 如果删除的数量小于当前的 window 大小减去规定的 window 的大小，就需要删除当前的元素\n                    if (evictorCount > size - windowCount) {\n                        break;\n                    } else {\n                        iterator.remove();\n                    }\n                }\n            }\n        }\n\n        /**\n         *  在 window 计算之后删除特定的数据\n         * @param elements  window 中所有的元素\n         * @param size  window 中所有元素的大小\n         * @param window    window\n         * @param evictorContext    上下文\n         */\n        @Override\n        public void evictAfter(Iterable<TimestampedValue<Tuple2<String, Integer>>> elements,\n                               int size, GlobalWindow window, EvictorContext evictorContext) {\n\n        }\n    }\n\n\n    }\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br"),e("span",{staticClass:"line-number"},[n._v("61")]),e("br"),e("span",{staticClass:"line-number"},[n._v("62")]),e("br"),e("span",{staticClass:"line-number"},[n._v("63")]),e("br"),e("span",{staticClass:"line-number"},[n._v("64")]),e("br"),e("span",{staticClass:"line-number"},[n._v("65")]),e("br"),e("span",{staticClass:"line-number"},[n._v("66")]),e("br"),e("span",{staticClass:"line-number"},[n._v("67")]),e("br"),e("span",{staticClass:"line-number"},[n._v("68")]),e("br"),e("span",{staticClass:"line-number"},[n._v("69")]),e("br"),e("span",{staticClass:"line-number"},[n._v("70")]),e("br"),e("span",{staticClass:"line-number"},[n._v("71")]),e("br"),e("span",{staticClass:"line-number"},[n._v("72")]),e("br"),e("span",{staticClass:"line-number"},[n._v("73")]),e("br"),e("span",{staticClass:"line-number"},[n._v("74")]),e("br"),e("span",{staticClass:"line-number"},[n._v("75")]),e("br"),e("span",{staticClass:"line-number"},[n._v("76")]),e("br"),e("span",{staticClass:"line-number"},[n._v("77")]),e("br"),e("span",{staticClass:"line-number"},[n._v("78")]),e("br"),e("span",{staticClass:"line-number"},[n._v("79")]),e("br"),e("span",{staticClass:"line-number"},[n._v("80")]),e("br"),e("span",{staticClass:"line-number"},[n._v("81")]),e("br"),e("span",{staticClass:"line-number"},[n._v("82")]),e("br"),e("span",{staticClass:"line-number"},[n._v("83")]),e("br"),e("span",{staticClass:"line-number"},[n._v("84")]),e("br"),e("span",{staticClass:"line-number"},[n._v("85")]),e("br"),e("span",{staticClass:"line-number"},[n._v("86")]),e("br"),e("span",{staticClass:"line-number"},[n._v("87")]),e("br"),e("span",{staticClass:"line-number"},[n._v("88")]),e("br"),e("span",{staticClass:"line-number"},[n._v("89")]),e("br"),e("span",{staticClass:"line-number"},[n._v("90")]),e("br"),e("span",{staticClass:"line-number"},[n._v("91")]),e("br"),e("span",{staticClass:"line-number"},[n._v("92")]),e("br"),e("span",{staticClass:"line-number"},[n._v("93")]),e("br"),e("span",{staticClass:"line-number"},[n._v("94")]),e("br"),e("span",{staticClass:"line-number"},[n._v("95")]),e("br"),e("span",{staticClass:"line-number"},[n._v("96")]),e("br"),e("span",{staticClass:"line-number"},[n._v("97")]),e("br"),e("span",{staticClass:"line-number"},[n._v("98")]),e("br"),e("span",{staticClass:"line-number"},[n._v("99")]),e("br"),e("span",{staticClass:"line-number"},[n._v("100")]),e("br"),e("span",{staticClass:"line-number"},[n._v("101")]),e("br"),e("span",{staticClass:"line-number"},[n._v("102")]),e("br"),e("span",{staticClass:"line-number"},[n._v("103")]),e("br"),e("span",{staticClass:"line-number"},[n._v("104")]),e("br"),e("span",{staticClass:"line-number"},[n._v("105")]),e("br"),e("span",{staticClass:"line-number"},[n._v("106")]),e("br"),e("span",{staticClass:"line-number"},[n._v("107")]),e("br"),e("span",{staticClass:"line-number"},[n._v("108")]),e("br"),e("span",{staticClass:"line-number"},[n._v("109")]),e("br"),e("span",{staticClass:"line-number"},[n._v("110")]),e("br"),e("span",{staticClass:"line-number"},[n._v("111")]),e("br"),e("span",{staticClass:"line-number"},[n._v("112")]),e("br"),e("span",{staticClass:"line-number"},[n._v("113")]),e("br"),e("span",{staticClass:"line-number"},[n._v("114")]),e("br"),e("span",{staticClass:"line-number"},[n._v("115")]),e("br"),e("span",{staticClass:"line-number"},[n._v("116")]),e("br"),e("span",{staticClass:"line-number"},[n._v("117")]),e("br"),e("span",{staticClass:"line-number"},[n._v("118")]),e("br"),e("span",{staticClass:"line-number"},[n._v("119")]),e("br"),e("span",{staticClass:"line-number"},[n._v("120")]),e("br"),e("span",{staticClass:"line-number"},[n._v("121")]),e("br"),e("span",{staticClass:"line-number"},[n._v("122")]),e("br"),e("span",{staticClass:"line-number"},[n._v("123")]),e("br"),e("span",{staticClass:"line-number"},[n._v("124")]),e("br"),e("span",{staticClass:"line-number"},[n._v("125")]),e("br"),e("span",{staticClass:"line-number"},[n._v("126")]),e("br"),e("span",{staticClass:"line-number"},[n._v("127")]),e("br"),e("span",{staticClass:"line-number"},[n._v("128")]),e("br"),e("span",{staticClass:"line-number"},[n._v("129")]),e("br"),e("span",{staticClass:"line-number"},[n._v("130")]),e("br"),e("span",{staticClass:"line-number"},[n._v("131")]),e("br"),e("span",{staticClass:"line-number"},[n._v("132")]),e("br"),e("span",{staticClass:"line-number"},[n._v("133")]),e("br"),e("span",{staticClass:"line-number"},[n._v("134")]),e("br"),e("span",{staticClass:"line-number"},[n._v("135")]),e("br"),e("span",{staticClass:"line-number"},[n._v("136")]),e("br"),e("span",{staticClass:"line-number"},[n._v("137")]),e("br"),e("span",{staticClass:"line-number"},[n._v("138")]),e("br"),e("span",{staticClass:"line-number"},[n._v("139")]),e("br"),e("span",{staticClass:"line-number"},[n._v("140")]),e("br"),e("span",{staticClass:"line-number"},[n._v("141")]),e("br"),e("span",{staticClass:"line-number"},[n._v("142")]),e("br"),e("span",{staticClass:"line-number"},[n._v("143")]),e("br"),e("span",{staticClass:"line-number"},[n._v("144")]),e("br"),e("span",{staticClass:"line-number"},[n._v("145")]),e("br"),e("span",{staticClass:"line-number"},[n._v("146")]),e("br"),e("span",{staticClass:"line-number"},[n._v("147")]),e("br"),e("span",{staticClass:"line-number"},[n._v("148")]),e("br"),e("span",{staticClass:"line-number"},[n._v("149")]),e("br"),e("span",{staticClass:"line-number"},[n._v("150")]),e("br"),e("span",{staticClass:"line-number"},[n._v("151")]),e("br"),e("span",{staticClass:"line-number"},[n._v("152")]),e("br"),e("span",{staticClass:"line-number"},[n._v("153")]),e("br"),e("span",{staticClass:"line-number"},[n._v("154")]),e("br"),e("span",{staticClass:"line-number"},[n._v("155")]),e("br"),e("span",{staticClass:"line-number"},[n._v("156")]),e("br"),e("span",{staticClass:"line-number"},[n._v("157")]),e("br"),e("span",{staticClass:"line-number"},[n._v("158")]),e("br"),e("span",{staticClass:"line-number"},[n._v("159")]),e("br"),e("span",{staticClass:"line-number"},[n._v("160")]),e("br"),e("span",{staticClass:"line-number"},[n._v("161")]),e("br"),e("span",{staticClass:"line-number"},[n._v("162")]),e("br"),e("span",{staticClass:"line-number"},[n._v("163")]),e("br")])]),e("h3",{attrs:{id:"_3-4-window增量聚合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-window增量聚合"}},[n._v("#")]),n._v(" 3.4 window增量聚合")]),n._v(" "),e("p",[n._v("窗口中每进入一条数据，就进行一次计算，等时间到了展示最后的结果")]),n._v(" "),e("p",[n._v("常用的聚合算子")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("reduce(reduceFunction)\naggregate(aggregateFunction)\nsum(),min(),max()\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231655723.png",alt:"1573871695836"}})]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n * 演示增量聚合\n */\npublic class SocketDemoIncrAgg {\n    public static void main(String[] args) throws  Exception{\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        DataStreamSource<String> dataStream = env.socketTextStream("localhost", 8888);\n        SingleOutputStreamOperator<Integer> intDStream = dataStream.map(number -> Integer.valueOf(number));\n        AllWindowedStream<Integer, TimeWindow> windowResult = intDStream.timeWindowAll(Time.seconds(10));\n       windowResult.reduce(new ReduceFunction<Integer>() {\n           @Override\n           public Integer reduce(Integer last, Integer current) throws Exception {\n               System.out.println("执行逻辑"+last + "  "+current);\n               return last+current;\n           }\n       }).print();\n       \n\n        env.execute(SocketDemoIncrAgg.class.getSimpleName());\n    }\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br")])]),e("p",[n._v("aggregate算子")]),n._v(" "),e("p",[n._v("需求：求每隔窗口里面的数据的平均值")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n * 求每隔窗口中的数据的平均值\n */\npublic class aggregateWindowTest {\n    public static void main(String[] args)  throws Exception{\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        DataStreamSource<String> dataStream = env.socketTextStream("10.148.15.10", 8888);\n\n        SingleOutputStreamOperator<Integer> numberStream = dataStream.map(line -> Integer.valueOf(line));\n        AllWindowedStream<Integer, TimeWindow> windowStream = numberStream.timeWindowAll(Time.seconds(5));\n        windowStream.aggregate(new MyAggregate())\n                .print();\n\n        env.execute("aggregateWindowTest");\n    }\n\n    /**\n     * IN, 输入的数据类型\n     * ACC,自定义的中间状态\n     *      Tuple2<Integer,Integer>:\n     *          key: 计算数据的个数\n     *          value:计算总值\n     * OUT，输出的数据类型\n     */\n    private static class MyAggregate\n            implements AggregateFunction<Integer,Tuple2<Integer,Integer>,Double>{\n        /**\n         * 初始化 累加器\n         * @return\n         */\n        @Override\n        public Tuple2<Integer, Integer> createAccumulator() {\n            return new Tuple2<>(0,0);\n        }\n\n        /**\n         * 针对每个数据的操作\n         * @return\n         */\n        @Override\n        public Tuple2<Integer, Integer> add(Integer element,\n                                            Tuple2<Integer, Integer> accumulator) {\n            //个数+1\n            //总的值累计\n            return new Tuple2<>(accumulator.f0+1,accumulator.f1+element);\n        }\n\n        @Override\n        public Double getResult(Tuple2<Integer, Integer> accumulator) {\n            return (double)accumulator.f1/accumulator.f0;\n        }\n\n        @Override\n        public Tuple2<Integer, Integer> merge(Tuple2<Integer, Integer> a1,\n                                              Tuple2<Integer, Integer> b1) {\n            return Tuple2.of(a1.f0+b1.f0,a1.f1+b1.f1);\n        }\n    }\n}\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br")])]),e("h3",{attrs:{id:"_3-5-window全量聚合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-window全量聚合"}},[n._v("#")]),n._v(" 3.5 window全量聚合")]),n._v(" "),e("p",[n._v("等属于窗口的数据到齐，才开始进行聚合计算【可以实现对窗口内的数据进行排序等需求】")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("apply(windowFunction)\nprocess(processWindowFunction)\nprocessWindowFunction比windowFunction提供了更多的上下文信息。类似于map和RichMap的关系\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br")])]),e("p",[n._v("效果图")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231655251.png",alt:"1573877034053"}})]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n * 全量计算\n */\npublic class SocketDemoFullAgg {\n    public static void main(String[] args) throws  Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        DataStreamSource<String> dataStream = env.socketTextStream("localhost", 8888);\n        SingleOutputStreamOperator<Integer> intDStream = dataStream.map(number -> Integer.valueOf(number));\n        AllWindowedStream<Integer, TimeWindow> windowResult = intDStream.timeWindowAll(Time.seconds(10));\n        windowResult.process(new ProcessAllWindowFunction<Integer, Integer, TimeWindow>() {\n            @Override\n            public void process(Context context, Iterable<Integer> iterable, Collector<Integer> collector) throws Exception {\n                System.out.println("执行计算逻辑");\n                int count=0;\n                Iterator<Integer> numberiterator = iterable.iterator();\n                while (numberiterator.hasNext()){\n                    Integer number = numberiterator.next();\n                    count+=number;\n                }\n                collector.collect(count);\n            }\n        }).print();\n\n        env.execute("socketDemoFullAgg");\n    }\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br")])]),e("h3",{attrs:{id:"_3-6-window-join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-window-join"}},[n._v("#")]),n._v(" 3.6 window join")]),n._v(" "),e("p",[n._v("两个window之间可以进行join，join操作只支持三种类型的window：滚动窗口，滑动窗口，会话窗口")]),n._v(" "),e("p",[n._v("使用方式：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("stream.join(otherStream) //两个流进行关联\n    .where(<KeySelector>) //选择第一个流的key作为关联字段\n    .equalTo(<KeySelector>)//选择第二个流的key作为关联字段\n    .window(<WindowAssigner>)//设置窗口的类型\n    .apply(<JoinFunction>) //对结果做操作\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("h4",{attrs:{id:"_3-6-1-tumbling-window-join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-1-tumbling-window-join"}},[n._v("#")]),n._v(" 3.6.1 Tumbling Window Join")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('import org.apache.flink.api.java.functions.KeySelector;\nimport org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows;\nimport org.apache.flink.streaming.api.windowing.time.Time;\n \n...\n\nDataStream<Integer> orangeStream = ...\nDataStream<Integer> greenStream = ...\n\norangeStream.join(greenStream)\n    .where(<KeySelector>)\n    .equalTo(<KeySelector>)\n    .window(TumblingEventTimeWindows.of(Time.milliseconds(2)))\n    .apply (new JoinFunction<Integer, Integer, String> (){\n        @Override\n        public String join(Integer first, Integer second) {\n            return first + "," + second;\n        }\n    });\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231651965.svg",alt:"tumbling-window-join"}})]),n._v(" "),e("h4",{attrs:{id:"_3-6-2-sliding-window-join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-2-sliding-window-join"}},[n._v("#")]),n._v(" 3.6.2 Sliding Window Join")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('import org.apache.flink.api.java.functions.KeySelector;\nimport org.apache.flink.streaming.api.windowing.assigners.SlidingEventTimeWindows;\nimport org.apache.flink.streaming.api.windowing.time.Time;\n\n...\n\nDataStream<Integer> orangeStream = ...\nDataStream<Integer> greenStream = ...\n\norangeStream.join(greenStream)\n    .where(<KeySelector>)\n    .equalTo(<KeySelector>)\n    .window(SlidingEventTimeWindows.of(Time.milliseconds(2) /* size */, Time.milliseconds(1) /* slide */))\n    .apply (new JoinFunction<Integer, Integer, String> (){\n        @Override\n        public String join(Integer first, Integer second) {\n            return first + "," + second;\n        }\n    });\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231658193.svg",alt:"sliding-window-join"}})]),n._v(" "),e("h4",{attrs:{id:"_3-6-3-session-window-join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-3-session-window-join"}},[n._v("#")]),n._v(" 3.6.3 Session Window Join")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('import org.apache.flink.api.java.functions.KeySelector;\nimport org.apache.flink.streaming.api.windowing.assigners.EventTimeSessionWindows;\nimport org.apache.flink.streaming.api.windowing.time.Time;\n \n...\n\nDataStream<Integer> orangeStream = ...\nDataStream<Integer> greenStream = ...\n\norangeStream.join(greenStream)\n    .where(<KeySelector>)\n    .equalTo(<KeySelector>)\n    .window(EventTimeSessionWindows.withGap(Time.milliseconds(1)))\n    .apply (new JoinFunction<Integer, Integer, String> (){\n        @Override\n        public String join(Integer first, Integer second) {\n            return first + "," + second;\n        }\n    });\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231651499.svg",alt:"session-window-join"}})]),n._v(" "),e("h4",{attrs:{id:"_3-6-4-interval-join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-4-interval-join"}},[n._v("#")]),n._v(" 3.6.4 Interval Join")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('import org.apache.flink.api.java.functions.KeySelector;\nimport org.apache.flink.streaming.api.functions.co.ProcessJoinFunction;\nimport org.apache.flink.streaming.api.windowing.time.Time;\n\n...\n\nDataStream<Integer> orangeStream = ...\nDataStream<Integer> greenStream = ...\n\norangeStream\n    .keyBy(<KeySelector>)\n    .intervalJoin(greenStream.keyBy(<KeySelector>))\n    .between(Time.milliseconds(-2), Time.milliseconds(1))\n    .process (new ProcessJoinFunction<Integer, Integer, String(){\n\n        @Override\n        public void processElement(Integer left, Integer right, Context ctx, Collector<String> out) {\n            out.collect(first + "," + second);\n        }\n    });\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://gitee.com/kflys/uPic/raw/master/uPic/202111231656445.svg",alt:"interval-join"}})])])}),[],!1,null,null,null);s.default=t.exports}}]);